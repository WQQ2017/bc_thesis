   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm_ccu8.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_EnableClock:
  25              	.LFB154:
  26              	 .file 1 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2017-09-15
   4:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  88:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  89:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  90:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  91:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  92:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
  93:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
  94:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  95:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  96:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
  97:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  98:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
  99:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 100:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 101:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 102:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 103:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 104:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 105:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 106:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 107:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 108:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 109:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 110:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 111:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 112:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 113:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 114:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 115:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 116:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 117:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 118:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 119:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 120:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 121:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 122:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 123:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 124:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 125:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 126:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 127:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 128:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 129:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 130:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 131:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 132:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 133:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 134:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 135:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 136:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 137:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 138:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 139:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 140:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 141:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 142:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 143:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 144:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 145:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 146:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 147:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 148:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 149:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 150:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 151:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 152:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 153:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 154:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 155:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 156:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 157:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 158:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 159:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 160:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 161:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 162:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 163:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 164:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 165:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 166:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 167:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 168:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 169:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 170:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 171:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 172:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 173:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 174:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 175:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 176:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 177:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 178:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 179:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 180:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 181:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 182:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 183:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 184:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 185:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 186:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 187:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 188:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 189:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 190:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 191:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 192:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 193:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 194:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 195:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 196:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 197:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 198:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 199:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 200:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 201:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 202:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 203:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 204:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 205:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 206:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 207:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 208:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 209:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 210:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 211:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 212:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 213:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 214:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 215:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 216:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 217:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 218:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 219:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 220:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 221:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 222:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 223:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 224:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 225:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 226:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 227:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 228:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 229:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 230:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 231:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 232:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 233:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 234:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 235:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 236:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 237:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 238:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 239:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 240:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 241:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 242:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 243:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 244:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 245:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 246:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 247:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 248:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 249:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 250:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 251:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 252:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 253:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 254:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 255:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 256:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 257:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 258:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 259:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 260:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 261:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 262:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 263:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 264:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 265:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 266:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 267:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 268:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 269:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 270:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 271:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 272:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 273:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 274:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 275:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 276:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 277:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 278:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 279:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 280:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 281:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 282:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 283:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 284:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 285:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 286:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 287:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 288:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 289:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 290:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 291:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 292:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 293:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 294:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 295:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 296:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 297:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 298:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 299:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 300:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 301:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 302:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 303:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 304:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 305:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 306:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 307:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 308:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 309:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 310:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 311:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 312:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 313:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 314:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 315:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 316:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 317:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 318:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 319:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 320:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 321:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 322:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 323:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 324:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 325:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 326:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 327:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 328:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 329:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 330:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 331:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 332:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 333:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 334:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 335:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 336:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 337:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 338:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 339:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 340:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 341:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 342:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 343:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 344:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 345:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 346:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 347:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 348:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 349:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 350:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 351:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 352:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 353:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 354:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 355:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 356:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 357:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 358:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 359:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 360:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 361:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 362:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 363:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 364:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 365:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 366:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 367:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 368:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 369:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 370:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 371:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 372:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 373:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 374:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 375:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 376:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 377:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 378:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 379:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 380:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 381:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 382:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 383:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 384:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 385:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 386:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 387:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 388:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 389:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 390:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 391:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 392:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 393:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 394:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 395:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 396:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 397:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 398:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 399:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 400:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 401:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 402:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 403:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 404:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 405:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 406:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 407:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 408:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 409:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 410:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 411:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 412:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 413:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 414:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 415:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 416:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 417:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 418:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 419:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 420:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 421:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 422:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 423:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 424:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 425:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 426:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 427:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 428:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 429:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 430:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 431:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 432:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 433:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 434:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 435:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 436:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 437:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 438:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 439:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 440:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 441:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 442:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 443:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 444:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 445:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 446:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 447:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 448:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 449:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 450:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 451:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 452:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 453:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 454:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 455:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 456:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 457:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 458:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 459:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 460:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 461:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 462:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 463:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 464:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 465:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 466:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 467:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 468:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 469:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 470:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 471:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 472:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 473:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 474:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 475:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 476:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 477:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 478:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 479:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 480:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 481:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 482:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 483:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 484:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 485:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 486:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 487:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 488:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 489:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 490:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 491:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 492:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 493:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 494:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 495:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 496:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 497:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 498:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 499:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 500:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 501:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 502:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 503:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 504:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 505:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 506:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 507:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 508:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 509:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 510:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 511:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 512:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 513:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 514:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 515:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 516:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 517:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 518:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 519:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 520:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 521:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 522:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 523:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 524:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 525:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 526:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 527:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 528:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 529:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 530:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 531:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 532:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 533:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 534:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 535:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 536:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 537:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 538:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 539:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 540:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 541:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 542:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 543:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 544:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 545:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 546:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 547:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 548:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 549:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 550:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 551:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 552:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 553:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 554:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 555:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 556:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 557:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 558:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 559:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 560:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 561:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 562:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 563:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 564:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 565:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 566:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 567:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 568:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 569:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 570:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 571:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 572:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 573:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 574:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 575:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 576:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 577:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 578:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 579:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 580:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 581:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 582:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 583:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 584:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 585:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 586:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 587:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 588:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 589:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 590:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 591:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 592:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 593:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 594:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 595:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 597:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 598:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 599:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 600:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 602:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 603:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 604:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 605:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 606:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 607:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 608:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 609:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 610:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 611:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 612:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 613:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 614:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 615:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 616:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 617:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 618:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 619:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 620:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 621:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 622:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 623:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 624:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 625:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 626:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 627:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 628:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 629:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 630:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 631:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 632:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 633:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 634:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 635:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 636:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 637:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 638:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 639:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 640:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 641:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 642:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 643:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 644:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 645:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 646:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 647:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 648:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 649:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 650:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 651:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 652:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 653:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 654:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 655:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 656:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 657:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 658:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 659:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 660:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 661:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 662:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 663:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 664:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 665:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 666:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 667:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 668:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 669:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 670:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 671:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 672:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 673:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 674:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 675:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 676:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 677:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 678:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 679:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 680:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 681:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 682:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 683:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 684:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 685:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 686:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 687:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 688:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 689:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 690:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 691:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 692:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 693:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 694:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 695:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 696:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 697:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 698:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 699:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 700:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 701:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 702:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 703:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 704:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 705:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 706:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 707:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 708:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 709:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 710:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 711:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 712:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 713:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 714:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 715:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 716:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 717:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 718:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 719:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 720:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 721:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 722:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 723:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 724:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 725:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 726:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 727:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 728:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 729:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 730:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 731:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 732:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 733:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 734:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 735:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 736:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 737:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 738:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 739:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 740:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 741:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 742:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 743:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 744:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 745:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 746:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 747:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 748:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 749:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 750:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 751:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 752:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 753:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 754:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 755:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 756:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 757:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 758:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 759:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 760:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 761:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 762:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 763:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 764:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 765:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 766:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 767:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 768:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 769:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 770:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 771:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 772:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 773:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 774:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 775:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 776:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 777:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 778:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 779:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 780:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 781:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 782:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 783:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 784:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 785:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 786:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 787:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 788:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 789:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 790:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 791:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 792:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 793:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 794:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 795:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 796:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 797:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 798:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 799:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 800:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 801:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 802:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 803:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 804:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 805:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 806:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 807:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 808:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 809:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 810:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 811:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 812:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 813:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 814:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 815:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 816:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 817:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 818:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 819:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 820:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 821:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 822:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 823:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 824:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 825:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 826:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 827:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 828:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 829:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 830:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 831:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 832:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 833:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 834:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 835:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 836:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 837:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 838:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 839:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 840:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 841:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 842:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 843:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 844:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 845:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 846:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 847:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 848:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 849:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 850:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 851:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 852:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 853:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 854:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 855:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 856:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 857:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 858:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 859:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 860:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 861:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 862:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 863:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 864:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 865:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 866:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 867:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 868:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 869:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 870:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 871:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 872:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 873:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 874:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 875:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 876:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 877:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 878:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 879:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 880:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 881:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 882:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 883:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 884:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 885:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 886:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 887:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 888:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 889:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 890:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 891:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 892:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 893:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 894:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 895:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 896:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 897:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 898:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 899:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 900:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 901:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 902:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 903:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 904:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 905:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 906:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 907:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 908:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 909:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 910:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 911:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 912:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 913:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 914:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 915:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 916:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 917:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 918:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 919:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 920:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 921:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 922:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 923:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 924:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 925:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 926:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 927:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 928:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 929:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 930:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 931:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 932:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 933:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 934:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 935:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 936:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 937:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 938:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 939:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 940:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 941:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 942:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 943:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 944:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 945:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 946:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 947:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 948:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 949:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 950:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 951:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 952:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 953:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 954:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 955:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 956:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 957:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 958:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 959:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 960:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 961:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 962:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 963:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 964:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 965:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 966:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 967:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 968:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 969:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 970:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 971:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 972:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 973:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 974:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 975:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 976:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 977:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
 978:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 979:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 980:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 981:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 982:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 983:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 984:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 985:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 986:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 987:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 988:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 989:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 990:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 991:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 992:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 993:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 994:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 995:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 996:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 997:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 998:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 999:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1000:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1001:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1002:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1003:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1004:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1005:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1006:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1007:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1008:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1009:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1010:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1011:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1012:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1013:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1014:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1015:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1016:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1017:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1018:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1019:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
1020:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1021:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
1022:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1023:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1024:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1025:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1026:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1027:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1028:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1029:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1030:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1031:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1032:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1033:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1034:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1035:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1036:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1037:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1038:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1039:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1040:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1041:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1042:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1043:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1044:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1045:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1046:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1047:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1048:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1049:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1050:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1051:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1052:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1053:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1054:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1055:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1056:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1057:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1058:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1059:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1060:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1061:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1062:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1063:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1064:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1065:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1066:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1067:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1068:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1069:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1070:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1071:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1072:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1073:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1074:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1075:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1076:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1077:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1078:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1079:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1080:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1081:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1082:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1083:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1084:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1085:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1086:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1087:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1088:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1089:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1090:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1091:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1092:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1093:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1094:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1095:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1096:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1097:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1098:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1099:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1100:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1101:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1102:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1103:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1104:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1105:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1106:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1107:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1108:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1109:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1110:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1111:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1112:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1113:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1114:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1115:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1116:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1117:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1118:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1119:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1120:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1121:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1122:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1123:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1124:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1125:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1126:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1127:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1128:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1129:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1130:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1131:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1132:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1133:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1134:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1135:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1136:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1137:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1138:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1139:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1140:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1141:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1142:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1143:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1144:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1145:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1146:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1147:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1148:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1149:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1150:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1151:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1152:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1153:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1154:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1155:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1156:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1157:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
1158:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1159:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1160:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1161:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1162:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1163:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1164:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1165:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1166:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1167:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1168:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1169:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1170:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1171:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1172:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1173:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1174:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1175:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPCH_Msk;
1176:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1177:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1178:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1179:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1180:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1181:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1182:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1183:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1184:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1185:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1186:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1187:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1188:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1189:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1190:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1191:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1192:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1193:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1194:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPRB_Msk;
1195:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1196:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1197:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1198:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1199:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1200:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1201:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1202:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1203:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1204:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1205:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1206:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1207:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1208:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1209:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1210:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1211:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPCH_Msk;
1212:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1213:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1214:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1215:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1216:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1217:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1218:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1219:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1220:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1221:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1222:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1223:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1224:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1225:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1226:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1227:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1228:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1229:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1230:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1231:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1232:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1233:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1234:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1235:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1236:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1237:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1238:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1239:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1240:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1241:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1242:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1243:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1244:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1245:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1246:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1247:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1248:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1249:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1250:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1251:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1252:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1253:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1254:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1255:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1256:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1257:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1258:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1259:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1260:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1261:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1262:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1263:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1264:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1265:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1266:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1267:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1268:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1269:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1270:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1271:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) clock_mask;
1272:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1273:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1274:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1275:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1276:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1277:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1278:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1279:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1280:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1281:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1282:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1283:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1284:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1285:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1286:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1287:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1288:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1289:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1290:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1291:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1292:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1293:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1294:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1295:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1296:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1297:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1298:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1299:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1300:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1301:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1302:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1303:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1304:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1305:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1306:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1307:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1308:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1309:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1310:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1311:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1312:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1313:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1314:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1315:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1316:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1317:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1318:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1319:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1320:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1321:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1322:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1323:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1324:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1325:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1326:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1327:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1328:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1328 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
1329:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1330:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1331:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1332:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= ((uint32_t) 1 << slice_number);
  45              	 .loc 1 1332 0
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e DA68     	 ldr r2,[r3,#12]
  48 0010 FB78     	 ldrb r3,[r7,#3]
  49 0012 0121     	 movs r1,#1
  50 0014 01FA03F3 	 lsl r3,r1,r3
  51 0018 1A43     	 orrs r2,r2,r3
  52 001a 7B68     	 ldr r3,[r7,#4]
  53 001c DA60     	 str r2,[r3,#12]
1333:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  54              	 .loc 1 1333 0
  55 001e 0C37     	 adds r7,r7,#12
  56              	.LCFI3:
  57              	 .cfi_def_cfa_offset 4
  58 0020 BD46     	 mov sp,r7
  59              	.LCFI4:
  60              	 .cfi_def_cfa_register 13
  61              	 
  62 0022 5DF8047B 	 ldr r7,[sp],#4
  63              	.LCFI5:
  64              	 .cfi_restore 7
  65              	 .cfi_def_cfa_offset 0
  66 0026 7047     	 bx lr
  67              	 .cfi_endproc
  68              	.LFE154:
  70              	 .section .text.XMC_CCU8_SLICE_EnableTrap,"ax",%progbits
  71              	 .align 2
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_CCU8_SLICE_EnableTrap:
  76              	.LFB163:
1334:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1335:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1336:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1337:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1338:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1339:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1340:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1341:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1342:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1343:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1344:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1345:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1346:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1347:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1348:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1349:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1350:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1351:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1352:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1353:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1354:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1355:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1356:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= ((uint32_t) 1 << slice_number);
1357:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1358:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1359:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1360:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1361:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1362:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1363:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1364:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1365:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1366:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1367:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1368:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1369:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1370:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1371:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1372:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1373:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1374:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1375:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1376:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1377:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1378:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1379:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1380:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1381:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1382:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1383:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1384:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1385:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1386:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1387:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1388:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1389:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1390:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1391:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1392:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1393:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1394:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1395:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1396:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1397:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1398:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1399:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1400:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Pointer", XMC_CCU8_IsVal
1401:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1402:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1403:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1404:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1405:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1406:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1407:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1408:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1409:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1410:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1411:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1412:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1413:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1414:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1415:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1416:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1417:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1418:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1419:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1420:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1421:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1422:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1423:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1424:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1425:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1426:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1427:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1428:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1429:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1430:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1431:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1432:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1433:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1434:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1435:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1436:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1437:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1438:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1439:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1440:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1441:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1442:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1443:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1444:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1445:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1446:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1447:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1448:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1449:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1450:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1451:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1452:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1453:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1454:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1455:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1456:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1457:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1458:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1459:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1460:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1461:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1462:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1463:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1464:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1465:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1466:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1467:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1468:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1469:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1470:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1471:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1472:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1473:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1474:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1475:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1476:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1477:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1478:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1479:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1480:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1481:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1482:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1483:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1484:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1485:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1486:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1487:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1488:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1489:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1490:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1491:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1492:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1493:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1494:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1495:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1496:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1497:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1498:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1499:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1500:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1501:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1502:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1503:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1504:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1505:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1506:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1507:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1508:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1509:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1510:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1511:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1512:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1513:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1514:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1515:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1516:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1517:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1518:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1519:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1520:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1521:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1522:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1523:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1524:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1525:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1526:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1527:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1528:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1529:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1530:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1531:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1532:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1533:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1534:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1535:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1536:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1537:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1538:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1539:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1540:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1541:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1542:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1543:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1544:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1545:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1546:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1547:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1548:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1549:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1550:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1551:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1552:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1553:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1554:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1555:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1556:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1557:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1558:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1559:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1560:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1561:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1562:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1563:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1564:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1565:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1566:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1567:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1568:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1569:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1570:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1571:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1572:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1573:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1574:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1575:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1576:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1577:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1578:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1579:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1580:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1581:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1582:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1583:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1584:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1585:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1586:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1587:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1588:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1589:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1590:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1591:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1592:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1593:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1594:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1595:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1596:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1597:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1598:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1599:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1600:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1601:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1602:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1603:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1604:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1605:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1606:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1607:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1608:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1609:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1610:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1611:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1612:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1613:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1614:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1615:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1616:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1617:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1618:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1619:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1620:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1621:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1622:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1623:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1624:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1625:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1626:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1627:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1628:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1629:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1630:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1631:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1632:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1633:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1634:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1635:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1636:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1637:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1638:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1639:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1640:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1641:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1642:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1643:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1644:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1645:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1646:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1647:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1648:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1649:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1650:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1651:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1652:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1653:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1654:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1655:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1656:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1657:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1658:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1659:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1660:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1661:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1662:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1663:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1664:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1665:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1666:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1667:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1668:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1669:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1670:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1671:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1672:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1673:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1674:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1675:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1676:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1677:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1678:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1679:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1680:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1681:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1682:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1683:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1684:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1685:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1686:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1687:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1688:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1689:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1690:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1691:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1692:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1693:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1694:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1695:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1696:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1697:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1698:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1699:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1700:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1701:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1702:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1703:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1704:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1705:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1706:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1707:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1708:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1709:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1710:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1711:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1712:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1713:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1714:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1715:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1716:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1717:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1718:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1719:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1720:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1721:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1722:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1723:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1724:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1725:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1726:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1727:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1728:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1729:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1730:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1731:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1732:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1733:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1734:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1735:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1736:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1737:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1738:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1739:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1740:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1741:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1742:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1743:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1744:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1745:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1746:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1747:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1748:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1749:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1750:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1751:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1752:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1753:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1754:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1755:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1756:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1757:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1758:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1759:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1760:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1761:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1762:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1763:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1764:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1765:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1766:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1767:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1768:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1769:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1770:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1771:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1772:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1773:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1774:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1775:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1776:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1777:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1778:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1779:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1780:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1781:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1782:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1783:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1784:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1785:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1786:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1787:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1788:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1789:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1790:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1791:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1792:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1793:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1794:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1795:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1796:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1797:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1798:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1799:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1800:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1801:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1802:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1803:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1804:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1805:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1806:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1807:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1808:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1809:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1810:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1811:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1812:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1813:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1814:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1815:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1816:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1817:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1818:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1819:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1820:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1821:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1822:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1823:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1824:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1825:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1826:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1827:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1828:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1829:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1830:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1831:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1832:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1833:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1834:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1835:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1836:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1837:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1838:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1839:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1840:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1841:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1842:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1843:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1844:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1845:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1846:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1847:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1848:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1849:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1850:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1851:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1852:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1853:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1854:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1855:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1856:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1857:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1858:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1859:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1860:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1861:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1862:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1863:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1864:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1865:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1866:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1867:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1868:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1869:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  77              	 .loc 1 1869 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI6:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 83B0     	 sub sp,sp,#12
  87              	.LCFI7:
  88              	 .cfi_def_cfa_offset 16
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI8:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
  93 0008 3960     	 str r1,[r7]
1870:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1871:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
  94              	 .loc 1 1871 0
  95 000a 7B68     	 ldr r3,[r7,#4]
  96 000c 5A69     	 ldr r2,[r3,#20]
  97 000e 3B68     	 ldr r3,[r7]
  98 0010 5B04     	 lsls r3,r3,#17
  99 0012 1A43     	 orrs r2,r2,r3
 100 0014 7B68     	 ldr r3,[r7,#4]
 101 0016 5A61     	 str r2,[r3,#20]
1872:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 102              	 .loc 1 1872 0
 103 0018 0C37     	 adds r7,r7,#12
 104              	.LCFI9:
 105              	 .cfi_def_cfa_offset 4
 106 001a BD46     	 mov sp,r7
 107              	.LCFI10:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 001c 5DF8047B 	 ldr r7,[sp],#4
 111              	.LCFI11:
 112              	 .cfi_restore 7
 113              	 .cfi_def_cfa_offset 0
 114 0020 7047     	 bx lr
 115              	 .cfi_endproc
 116              	.LFE163:
 118 0022 00BF     	 .section .text.XMC_CCU8_SLICE_IsTimerRunning,"ax",%progbits
 119              	 .align 2
 120              	 .thumb
 121              	 .thumb_func
 123              	XMC_CCU8_SLICE_IsTimerRunning:
 124              	.LFB165:
1873:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1874:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1875:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1876:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1877:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1878:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1879:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1880:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1881:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1882:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1883:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1884:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1885:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1886:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1887:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1888:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1889:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1890:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1891:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1892:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1893:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1894:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1895:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1896:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1897:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1898:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1899:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1900:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1901:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1902:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1903:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1904:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1905:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1906:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1907:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1908:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1909:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1910:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1911:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 125              	 .loc 1 1911 0
 126              	 .cfi_startproc
 127              	 
 128              	 
 129              	 
 130 0000 80B4     	 push {r7}
 131              	.LCFI12:
 132              	 .cfi_def_cfa_offset 4
 133              	 .cfi_offset 7,-4
 134 0002 83B0     	 sub sp,sp,#12
 135              	.LCFI13:
 136              	 .cfi_def_cfa_offset 16
 137 0004 00AF     	 add r7,sp,#0
 138              	.LCFI14:
 139              	 .cfi_def_cfa_register 7
 140 0006 7860     	 str r0,[r7,#4]
1912:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1913:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
 141              	 .loc 1 1913 0
 142 0008 7B68     	 ldr r3,[r7,#4]
 143 000a 9B68     	 ldr r3,[r3,#8]
 144 000c 03F00103 	 and r3,r3,#1
 145 0010 002B     	 cmp r3,#0
 146 0012 14BF     	 ite ne
 147 0014 0123     	 movne r3,#1
 148 0016 0023     	 moveq r3,#0
 149 0018 DBB2     	 uxtb r3,r3
1914:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 150              	 .loc 1 1914 0
 151 001a 1846     	 mov r0,r3
 152 001c 0C37     	 adds r7,r7,#12
 153              	.LCFI15:
 154              	 .cfi_def_cfa_offset 4
 155 001e BD46     	 mov sp,r7
 156              	.LCFI16:
 157              	 .cfi_def_cfa_register 13
 158              	 
 159 0020 5DF8047B 	 ldr r7,[sp],#4
 160              	.LCFI17:
 161              	 .cfi_restore 7
 162              	 .cfi_def_cfa_offset 0
 163 0024 7047     	 bx lr
 164              	 .cfi_endproc
 165              	.LFE165:
 167 0026 00BF     	 .section .text.XMC_CCU8_SLICE_StartTimer,"ax",%progbits
 168              	 .align 2
 169              	 .thumb
 170              	 .thumb_func
 172              	XMC_CCU8_SLICE_StartTimer:
 173              	.LFB169:
1915:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1916:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1917:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1918:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1919:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1920:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1921:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1922:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1923:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1924:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1925:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1926:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1927:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1928:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1929:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1930:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1931:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1932:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1933:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1934:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1935:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1936:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1937:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1938:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1939:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1940:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1941:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1942:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1943:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1944:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1945:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1946:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1947:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1948:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1949:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1950:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1951:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1952:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1953:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1954:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1955:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1956:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1957:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1958:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1959:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1960:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1961:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1962:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1963:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1964:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1965:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
1966:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1967:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1968:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
1969:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1970:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1971:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1972:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1973:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1974:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1975:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1976:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
1977:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
1978:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1979:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1980:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1981:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
1982:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1983:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
1984:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 174              	 .loc 1 1984 0
 175              	 .cfi_startproc
 176              	 
 177              	 
 178              	 
 179 0000 80B4     	 push {r7}
 180              	.LCFI18:
 181              	 .cfi_def_cfa_offset 4
 182              	 .cfi_offset 7,-4
 183 0002 83B0     	 sub sp,sp,#12
 184              	.LCFI19:
 185              	 .cfi_def_cfa_offset 16
 186 0004 00AF     	 add r7,sp,#0
 187              	.LCFI20:
 188              	 .cfi_def_cfa_register 7
 189 0006 7860     	 str r0,[r7,#4]
1985:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1986:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
 190              	 .loc 1 1986 0
 191 0008 7B68     	 ldr r3,[r7,#4]
 192 000a 0122     	 movs r2,#1
 193 000c DA60     	 str r2,[r3,#12]
1987:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 194              	 .loc 1 1987 0
 195 000e 0C37     	 adds r7,r7,#12
 196              	.LCFI21:
 197              	 .cfi_def_cfa_offset 4
 198 0010 BD46     	 mov sp,r7
 199              	.LCFI22:
 200              	 .cfi_def_cfa_register 13
 201              	 
 202 0012 5DF8047B 	 ldr r7,[sp],#4
 203              	.LCFI23:
 204              	 .cfi_restore 7
 205              	 .cfi_def_cfa_offset 0
 206 0016 7047     	 bx lr
 207              	 .cfi_endproc
 208              	.LFE169:
 210              	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
 211              	 .align 2
 212              	 .thumb
 213              	 .thumb_func
 215              	XMC_CCU8_SLICE_StopTimer:
 216              	.LFB170:
1988:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1989:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1990:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1991:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1992:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1993:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1994:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1995:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
1996:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
1997:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1998:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1999:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2000:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2001:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2002:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 217              	 .loc 1 2002 0
 218              	 .cfi_startproc
 219              	 
 220              	 
 221              	 
 222 0000 80B4     	 push {r7}
 223              	.LCFI24:
 224              	 .cfi_def_cfa_offset 4
 225              	 .cfi_offset 7,-4
 226 0002 83B0     	 sub sp,sp,#12
 227              	.LCFI25:
 228              	 .cfi_def_cfa_offset 16
 229 0004 00AF     	 add r7,sp,#0
 230              	.LCFI26:
 231              	 .cfi_def_cfa_register 7
 232 0006 7860     	 str r0,[r7,#4]
2003:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2004:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
 233              	 .loc 1 2004 0
 234 0008 7B68     	 ldr r3,[r7,#4]
 235 000a 0122     	 movs r2,#1
 236 000c 1A61     	 str r2,[r3,#16]
2005:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 237              	 .loc 1 2005 0
 238 000e 0C37     	 adds r7,r7,#12
 239              	.LCFI27:
 240              	 .cfi_def_cfa_offset 4
 241 0010 BD46     	 mov sp,r7
 242              	.LCFI28:
 243              	 .cfi_def_cfa_register 13
 244              	 
 245 0012 5DF8047B 	 ldr r7,[sp],#4
 246              	.LCFI29:
 247              	 .cfi_restore 7
 248              	 .cfi_def_cfa_offset 0
 249 0016 7047     	 bx lr
 250              	 .cfi_endproc
 251              	.LFE170:
 253              	 .section .text.XMC_CCU8_SLICE_ClearTimer,"ax",%progbits
 254              	 .align 2
 255              	 .thumb
 256              	 .thumb_func
 258              	XMC_CCU8_SLICE_ClearTimer:
 259              	.LFB171:
2006:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2007:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2008:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2009:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2010:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2011:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2012:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2013:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2014:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2015:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2016:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2017:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2018:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2019:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2020:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2021:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 260              	 .loc 1 2021 0
 261              	 .cfi_startproc
 262              	 
 263              	 
 264              	 
 265 0000 80B4     	 push {r7}
 266              	.LCFI30:
 267              	 .cfi_def_cfa_offset 4
 268              	 .cfi_offset 7,-4
 269 0002 83B0     	 sub sp,sp,#12
 270              	.LCFI31:
 271              	 .cfi_def_cfa_offset 16
 272 0004 00AF     	 add r7,sp,#0
 273              	.LCFI32:
 274              	 .cfi_def_cfa_register 7
 275 0006 7860     	 str r0,[r7,#4]
2022:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2023:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
 276              	 .loc 1 2023 0
 277 0008 7B68     	 ldr r3,[r7,#4]
 278 000a 0222     	 movs r2,#2
 279 000c 1A61     	 str r2,[r3,#16]
2024:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 280              	 .loc 1 2024 0
 281 000e 0C37     	 adds r7,r7,#12
 282              	.LCFI33:
 283              	 .cfi_def_cfa_offset 4
 284 0010 BD46     	 mov sp,r7
 285              	.LCFI34:
 286              	 .cfi_def_cfa_register 13
 287              	 
 288 0012 5DF8047B 	 ldr r7,[sp],#4
 289              	.LCFI35:
 290              	 .cfi_restore 7
 291              	 .cfi_def_cfa_offset 0
 292 0016 7047     	 bx lr
 293              	 .cfi_endproc
 294              	.LFE171:
 296              	 .section .text.XMC_CCU8_SLICE_GetTimerPeriodMatch,"ax",%progbits
 297              	 .align 2
 298              	 .thumb
 299              	 .thumb_func
 301              	XMC_CCU8_SLICE_GetTimerPeriodMatch:
 302              	.LFB176:
2025:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2026:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2027:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2028:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2029:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2030:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2031:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2032:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2033:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2034:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2035:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2036:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2037:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2038:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2039:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2040:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2041:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2042:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2043:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2044:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2045:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2046:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2047:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2048:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2049:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2050:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2051:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2052:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2053:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2054:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2055:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2056:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2057:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2058:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2059:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2060:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2061:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2062:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2063:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2064:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2065:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2066:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2067:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2068:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2069:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2070:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2071:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2072:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2073:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2074:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2075:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2076:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2077:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2078:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2079:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2080:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2081:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2082:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2083:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2084:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2085:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2086:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2087:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2088:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2089:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2090:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2091:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2092:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2093:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2094:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2095:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2096:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2097:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
2098:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2099:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2100:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
2101:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2102:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2103:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2104:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2105:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2106:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2107:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2108:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2109:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2110:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2111:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2112:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2113:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2114:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2115:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2116:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2117:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2118:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2119:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2120:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2121:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2122:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2123:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2124:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2125:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2126:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2127:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2128:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2129:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2130:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2131:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2132:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2133:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2134:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
2135:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2136:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2137:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
2138:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2139:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2140:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2141:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2142:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2143:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2144:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2145:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2146:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2147:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2148:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2149:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2150:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2151:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2152:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2153:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2154:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2155:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2156:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2157:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2158:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2159:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2160:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2161:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2162:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2163:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2164:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2165:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2166:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2167:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2168:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2169:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2170:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2171:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2172:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2173:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2174:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2175:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2176:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2177:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2178:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 303              	 .loc 1 2178 0
 304              	 .cfi_startproc
 305              	 
 306              	 
 307              	 
 308 0000 80B4     	 push {r7}
 309              	.LCFI36:
 310              	 .cfi_def_cfa_offset 4
 311              	 .cfi_offset 7,-4
 312 0002 83B0     	 sub sp,sp,#12
 313              	.LCFI37:
 314              	 .cfi_def_cfa_offset 16
 315 0004 00AF     	 add r7,sp,#0
 316              	.LCFI38:
 317              	 .cfi_def_cfa_register 7
 318 0006 7860     	 str r0,[r7,#4]
2179:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2180:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
 319              	 .loc 1 2180 0
 320 0008 7B68     	 ldr r3,[r7,#4]
 321 000a 1B6B     	 ldr r3,[r3,#48]
 322 000c 9BB2     	 uxth r3,r3
2181:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 323              	 .loc 1 2181 0
 324 000e 1846     	 mov r0,r3
 325 0010 0C37     	 adds r7,r7,#12
 326              	.LCFI39:
 327              	 .cfi_def_cfa_offset 4
 328 0012 BD46     	 mov sp,r7
 329              	.LCFI40:
 330              	 .cfi_def_cfa_register 13
 331              	 
 332 0014 5DF8047B 	 ldr r7,[sp],#4
 333              	.LCFI41:
 334              	 .cfi_restore 7
 335              	 .cfi_def_cfa_offset 0
 336 0018 7047     	 bx lr
 337              	 .cfi_endproc
 338              	.LFE176:
 340 001a 00BF     	 .section .text.XMC_CCU8_EnableShadowTransfer,"ax",%progbits
 341              	 .align 2
 342              	 .thumb
 343              	 .thumb_func
 345              	XMC_CCU8_EnableShadowTransfer:
 346              	.LFB179:
2182:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2183:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2184:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2185:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2186:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2187:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2188:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2189:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2190:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2191:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2192:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2193:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2194:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2195:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2196:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2197:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2198:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2199:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2200:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2201:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2202:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
2203:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2204:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2205:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2206:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2207:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2208:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2209:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2210:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2211:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2212:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2213:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2214:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2215:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2216:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2217:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2218:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2219:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2220:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2221:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2222:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2223:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2224:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2225:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2226:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2227:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2228:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2229:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2230:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2231:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2232:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2233:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2234:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2235:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2236:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2237:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2238:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2239:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2240:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2241:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2242:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2243:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2244:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2245:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2246:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2247:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2248:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2249:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2250:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2251:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2252:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2253:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2254:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2255:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2256:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2257:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2258:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2259:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2260:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2261:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2262:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2263:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2264:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2265:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2266:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2267:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2268:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2269:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2270:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2271:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2272:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2273:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2274:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2275:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2276:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2277:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2278:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2279:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2280:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2281:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2282:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2283:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2284:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2285:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2286:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2287:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2288:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2289:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2290:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2291:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2292:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2293:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2294:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2295:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 347              	 .loc 1 2295 0
 348              	 .cfi_startproc
 349              	 
 350              	 
 351              	 
 352 0000 80B4     	 push {r7}
 353              	.LCFI42:
 354              	 .cfi_def_cfa_offset 4
 355              	 .cfi_offset 7,-4
 356 0002 83B0     	 sub sp,sp,#12
 357              	.LCFI43:
 358              	 .cfi_def_cfa_offset 16
 359 0004 00AF     	 add r7,sp,#0
 360              	.LCFI44:
 361              	 .cfi_def_cfa_register 7
 362 0006 7860     	 str r0,[r7,#4]
 363 0008 3960     	 str r1,[r7]
2296:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2297:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 364              	 .loc 1 2297 0
 365 000a 7B68     	 ldr r3,[r7,#4]
 366 000c 3A68     	 ldr r2,[r7]
 367 000e 1A61     	 str r2,[r3,#16]
2298:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 368              	 .loc 1 2298 0
 369 0010 0C37     	 adds r7,r7,#12
 370              	.LCFI45:
 371              	 .cfi_def_cfa_offset 4
 372 0012 BD46     	 mov sp,r7
 373              	.LCFI46:
 374              	 .cfi_def_cfa_register 13
 375              	 
 376 0014 5DF8047B 	 ldr r7,[sp],#4
 377              	.LCFI47:
 378              	 .cfi_restore 7
 379              	 .cfi_def_cfa_offset 0
 380 0018 7047     	 bx lr
 381              	 .cfi_endproc
 382              	.LFE179:
 384 001a 00BF     	 .section .text.XMC_CCU8_SLICE_GetTimerValue,"ax",%progbits
 385              	 .align 2
 386              	 .thumb
 387              	 .thumb_func
 389              	XMC_CCU8_SLICE_GetTimerValue:
 390              	.LFB180:
2299:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2300:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2301:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2302:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2303:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2304:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2305:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2306:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2307:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2308:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2309:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2310:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2311:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2312:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2313:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 391              	 .loc 1 2313 0
 392              	 .cfi_startproc
 393              	 
 394              	 
 395              	 
 396 0000 80B4     	 push {r7}
 397              	.LCFI48:
 398              	 .cfi_def_cfa_offset 4
 399              	 .cfi_offset 7,-4
 400 0002 83B0     	 sub sp,sp,#12
 401              	.LCFI49:
 402              	 .cfi_def_cfa_offset 16
 403 0004 00AF     	 add r7,sp,#0
 404              	.LCFI50:
 405              	 .cfi_def_cfa_register 7
 406 0006 7860     	 str r0,[r7,#4]
2314:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2315:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
 407              	 .loc 1 2315 0
 408 0008 7B68     	 ldr r3,[r7,#4]
 409 000a 1B6F     	 ldr r3,[r3,#112]
 410 000c 9BB2     	 uxth r3,r3
2316:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 411              	 .loc 1 2316 0
 412 000e 1846     	 mov r0,r3
 413 0010 0C37     	 adds r7,r7,#12
 414              	.LCFI51:
 415              	 .cfi_def_cfa_offset 4
 416 0012 BD46     	 mov sp,r7
 417              	.LCFI52:
 418              	 .cfi_def_cfa_register 13
 419              	 
 420 0014 5DF8047B 	 ldr r7,[sp],#4
 421              	.LCFI53:
 422              	 .cfi_restore 7
 423              	 .cfi_def_cfa_offset 0
 424 0018 7047     	 bx lr
 425              	 .cfi_endproc
 426              	.LFE180:
 428 001a 00BF     	 .section .text.XMC_CCU8_SLICE_EnableEvent,"ax",%progbits
 429              	 .align 2
 430              	 .thumb
 431              	 .thumb_func
 433              	XMC_CCU8_SLICE_EnableEvent:
 434              	.LFB189:
2317:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2318:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2319:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2320:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2321:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2322:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2323:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2324:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2325:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2326:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2327:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2328:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2329:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2330:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2331:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2332:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2333:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2334:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2335:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2336:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2337:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2338:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2339:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2340:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2341:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2342:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2343:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2344:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2345:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2346:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2347:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2348:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2349:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2350:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2351:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2352:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2353:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2354:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2355:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2356:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2357:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2358:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2359:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2360:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2361:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2362:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2363:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2364:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2365:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2366:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2367:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2368:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2369:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2370:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2371:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2372:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2373:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2374:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2375:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2376:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2377:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2378:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2379:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2380:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2381:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2382:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2383:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2384:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2385:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2386:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2387:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2388:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2389:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2390:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2391:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2392:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2393:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2394:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2395:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2396:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2397:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2398:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2399:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2400:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2401:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2402:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2403:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2404:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2405:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2406:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2407:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2408:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2409:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2410:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2411:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2412:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2413:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2414:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2415:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2416:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2417:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2418:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2419:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2420:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2421:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2422:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2423:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2424:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2425:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2426:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2427:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2428:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2429:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2430:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2431:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2432:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2433:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2434:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2435:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2436:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2437:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2438:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2439:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2440:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2441:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2442:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2443:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2444:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2445:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2446:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2447:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2448:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
2449:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2450:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2451:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2452:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2453:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t
2454:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2455:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2456:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2457:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2458:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2459:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider, by configuring the CC8yPSC and CC8yFPC registers.
2460:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
2461:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_StopPrescaler().
2462:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2463:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2464:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue().
2465:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2466:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
2467:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2468:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2469:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2470:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param cmp_val Prescaler divider compare value
2471:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2472:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2473:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2474:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2475:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2476:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC8yFPCS register.\n
2477:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
2478:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
2479:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
2480:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the value, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask.
2481:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2482:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2483:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2484:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2485:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU8_SLICE_t *const slice,
2486:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                      const uint8_t cmp_val)
2487:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2488:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU8_IsVa
2489:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* First, write to the shadow register */
2490:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->FPCS = (uint32_t) cmp_val;
2491:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2492:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2493:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2494:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2495:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode is needed.
2496:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2497:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2498:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2499:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2500:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the multichannel mode, by setting CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch_n
2501:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
2502:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
2503:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
2504:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
2505:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
2506:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2507:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2508:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultiChannelMode()<BR>  XMC_CCU8_SetMultiChannelShadowTransferMode().
2509:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2510:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2511:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_COMPARE_CHANNEL_t c
2512:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2513:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2514:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CHA
2515:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2516:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num;
2517:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2518:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2519:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2520:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2521:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode needs to be disabled.
2522:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2523:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2524:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2525:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2526:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the multichannel mode, by clearing CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch
2527:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the slices to the normal operation mode. This takes the slice number as input and
2528:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * configures the multi channel mode for it.
2529:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2530:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2531:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableMultiChannelMode().
2532:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2533:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2534:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                             const XMC_CCU8_SLICE_COMPARE_CHANNEL_t 
2535:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2536:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2537:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CH
2538:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2539:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num);
2540:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2541:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2542:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2543:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2544:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2545:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Use ::XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2546:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                             using a bit wise OR operation.
2547:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2548:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2549:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2550:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2551:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2552:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2553:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU8x.MCSS
2554:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2555:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2556:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2557:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** */
2558:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
2559:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2560:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2561:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2562:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2563:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                Range: [0,3]
2564:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2565:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t  Returns the Capture register value.
2566:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *              Range: [0 to 0x1FFFFF]
2567:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2568:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2569:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC8yCV[\b reg
2570:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2571:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2572:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2573:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to find out if there is a new captured value present.
2574:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2575:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2576:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetLastCapturedTimerValue().
2577:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2578:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
2579:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2580:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2581:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2582:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set  The capture register set, which must be evaluated
2583:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2584:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2585:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_STATUS_t Returns XMC_CCU8_STATUS_OK if there was new value present in the capture re
2586:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   returns XMC_CCU8_STATUS_ERROR if there was no new value present in the capture
2587:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2588:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2589:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest captured timer value, by reading CC8yCV registers.\n\n
2590:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2591:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 8 capt
2592:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * evaluated.\n
2593:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2594:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * capture registers have been evaluated.
2595:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2596:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2597:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetCaptureregisterValue().
2598:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2599:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
2600:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
2601:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                            uint32_t *val_ptr);
2602:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2603:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2604:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2605:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2606:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2607:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2608:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2609:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2610:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC8yINTE register.\n\
2611:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2612:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2613:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2614:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2615:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableMultipleEvents()<BR>  XMC_CCU8_SLIC
2616:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2617:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2618:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE
2619:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 435              	 .loc 1 2619 0
 436              	 .cfi_startproc
 437              	 
 438              	 
 439              	 
 440 0000 80B4     	 push {r7}
 441              	.LCFI54:
 442              	 .cfi_def_cfa_offset 4
 443              	 .cfi_offset 7,-4
 444 0002 83B0     	 sub sp,sp,#12
 445              	.LCFI55:
 446              	 .cfi_def_cfa_offset 16
 447 0004 00AF     	 add r7,sp,#0
 448              	.LCFI56:
 449              	 .cfi_def_cfa_register 7
 450 0006 7860     	 str r0,[r7,#4]
 451 0008 0B46     	 mov r3,r1
 452 000a FB70     	 strb r3,[r7,#3]
2620:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2621:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2622:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2623:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 453              	 .loc 1 2623 0
 454 000c 7B68     	 ldr r3,[r7,#4]
 455 000e D3F8A420 	 ldr r2,[r3,#164]
 456 0012 FB78     	 ldrb r3,[r7,#3]
 457 0014 0121     	 movs r1,#1
 458 0016 01FA03F3 	 lsl r3,r1,r3
 459 001a 1A43     	 orrs r2,r2,r3
 460 001c 7B68     	 ldr r3,[r7,#4]
 461 001e C3F8A420 	 str r2,[r3,#164]
2624:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 462              	 .loc 1 2624 0
 463 0022 0C37     	 adds r7,r7,#12
 464              	.LCFI57:
 465              	 .cfi_def_cfa_offset 4
 466 0024 BD46     	 mov sp,r7
 467              	.LCFI58:
 468              	 .cfi_def_cfa_register 13
 469              	 
 470 0026 5DF8047B 	 ldr r7,[sp],#4
 471              	.LCFI59:
 472              	 .cfi_restore 7
 473              	 .cfi_def_cfa_offset 0
 474 002a 7047     	 bx lr
 475              	 .cfi_endproc
 476              	.LFE189:
 478              	 .section .text.XMC_CCU8_SLICE_ClearEvent,"ax",%progbits
 479              	 .align 2
 480              	 .thumb
 481              	 .thumb_func
 483              	XMC_CCU8_SLICE_ClearEvent:
 484              	.LFB194:
2625:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2626:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2627:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2628:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2629:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2630:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  using a bit wise OR operation.
2631:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2632:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2633:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2634:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2635:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC8yINTE re
2636:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2637:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2638:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2639:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2640:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_Disable
2641:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2642:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2643:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint1
2644:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2645:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2646:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE = (uint32_t) mask;
2647:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2648:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2649:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2650:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2651:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2652:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2653:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2654:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2655:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2656:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC8yINTE register.\n\n
2657:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Prevents the event from being asserted.
2658:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2659:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2660:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2661:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2662:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2663:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLIC
2664:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2665:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2666:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event))
2667:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2668:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
2669:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2670:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2671:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2672:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2673:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2674:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2675:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             using a bit wise OR operation.
2676:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2677:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2678:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2679:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2680:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC8yINTE reg
2681:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prevents selected events of the slice from being asserted.
2682:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2683:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2684:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2685:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableEvent().
2686:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2687:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint
2688:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2689:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2690:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~((uint32_t) mask);
2691:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2692:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2693:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2694:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2695:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2696:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2697:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2698:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2699:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2700:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Manually asserts the requested event, by setting CC8ySWS register.\n\n
2701:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2702:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2703:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2704:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2705:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2706:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2707:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_IR
2708:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2709:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2710:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2711:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2712:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWS |= ((uint32_t) 1) << ((uint32_t) event);
2713:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2714:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2715:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2716:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2717:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Asserted event which must be acknowledged.
2718:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2719:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2720:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2721:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2722:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Acknowledges an asserted event, by setting CC8ySWR with respective event flag.\n\n
2723:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2724:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2725:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent()<BR>  XMC_CCU8_SLICE_GetEvent().
2726:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2727:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2728:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_
2729:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 485              	 .loc 1 2729 0
 486              	 .cfi_startproc
 487              	 
 488              	 
 489              	 
 490 0000 80B4     	 push {r7}
 491              	.LCFI60:
 492              	 .cfi_def_cfa_offset 4
 493              	 .cfi_offset 7,-4
 494 0002 83B0     	 sub sp,sp,#12
 495              	.LCFI61:
 496              	 .cfi_def_cfa_offset 16
 497 0004 00AF     	 add r7,sp,#0
 498              	.LCFI62:
 499              	 .cfi_def_cfa_register 7
 500 0006 7860     	 str r0,[r7,#4]
 501 0008 0B46     	 mov r3,r1
 502 000a FB70     	 strb r3,[r7,#3]
2730:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2731:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2732:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWR |= ((uint32_t) 1) << ((uint32_t) event);
 503              	 .loc 1 2732 0
 504 000c 7B68     	 ldr r3,[r7,#4]
 505 000e D3F8B020 	 ldr r2,[r3,#176]
 506 0012 FB78     	 ldrb r3,[r7,#3]
 507 0014 0121     	 movs r1,#1
 508 0016 01FA03F3 	 lsl r3,r1,r3
 509 001a 1A43     	 orrs r2,r2,r3
 510 001c 7B68     	 ldr r3,[r7,#4]
 511 001e C3F8B020 	 str r2,[r3,#176]
2733:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 512              	 .loc 1 2733 0
 513 0022 0C37     	 adds r7,r7,#12
 514              	.LCFI63:
 515              	 .cfi_def_cfa_offset 4
 516 0024 BD46     	 mov sp,r7
 517              	.LCFI64:
 518              	 .cfi_def_cfa_register 13
 519              	 
 520 0026 5DF8047B 	 ldr r7,[sp],#4
 521              	.LCFI65:
 522              	 .cfi_restore 7
 523              	 .cfi_def_cfa_offset 0
 524 002a 7047     	 bx lr
 525              	 .cfi_endproc
 526              	.LFE194:
 528              	 .section .text.XMC_CCU8_SLICE_GetEvent,"ax",%progbits
 529              	 .align 2
 530              	 .thumb
 531              	 .thumb_func
 533              	XMC_CCU8_SLICE_GetEvent:
 534              	.LFB195:
2734:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2735:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2736:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2737:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event to be evaluated for assertion
2738:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2739:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *         bool  Returns true if event is set else false is returned.
2740:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2741:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2742:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Evaluates if a given event is asserted or not, by reading CC8yINTS register.\n\n
2743:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2744:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2745:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2746:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2747:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2748:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2749:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2750:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_GetEvent(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SL
2751:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 535              	 .loc 1 2751 0
 536              	 .cfi_startproc
 537              	 
 538              	 
 539              	 
 540 0000 80B4     	 push {r7}
 541              	.LCFI66:
 542              	 .cfi_def_cfa_offset 4
 543              	 .cfi_offset 7,-4
 544 0002 83B0     	 sub sp,sp,#12
 545              	.LCFI67:
 546              	 .cfi_def_cfa_offset 16
 547 0004 00AF     	 add r7,sp,#0
 548              	.LCFI68:
 549              	 .cfi_def_cfa_register 7
 550 0006 7860     	 str r0,[r7,#4]
 551 0008 0B46     	 mov r3,r1
 552 000a FB70     	 strb r3,[r7,#3]
2752:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2753:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2754:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(((uint32_t)(slice->INTS & ((uint32_t)1 << event))) != 0U);
 553              	 .loc 1 2754 0
 554 000c 7B68     	 ldr r3,[r7,#4]
 555 000e D3F8A020 	 ldr r2,[r3,#160]
 556 0012 FB78     	 ldrb r3,[r7,#3]
 557 0014 22FA03F3 	 lsr r3,r2,r3
 558 0018 03F00103 	 and r3,r3,#1
 559 001c 002B     	 cmp r3,#0
 560 001e 14BF     	 ite ne
 561 0020 0123     	 movne r3,#1
 562 0022 0023     	 moveq r3,#0
 563 0024 DBB2     	 uxtb r3,r3
2755:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   }
 564              	 .loc 1 2755 0
 565 0026 1846     	 mov r0,r3
 566 0028 0C37     	 adds r7,r7,#12
 567              	.LCFI69:
 568              	 .cfi_def_cfa_offset 4
 569 002a BD46     	 mov sp,r7
 570              	.LCFI70:
 571              	 .cfi_def_cfa_register 13
 572              	 
 573 002c 5DF8047B 	 ldr r7,[sp],#4
 574              	.LCFI71:
 575              	 .cfi_restore 7
 576              	 .cfi_def_cfa_offset 0
 577 0030 7047     	 bx lr
 578              	 .cfi_endproc
 579              	.LFE195:
 581 0032 00BF     	 .section .text.XMC_CCU8_SLICE_SetShadowTransferMode,"ax",%progbits
 582              	 .align 2
 583              	 .thumb
 584              	 .thumb_func
 586              	XMC_CCU8_SLICE_SetShadowTransferMode:
 587              	.LFB200:
2756:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2757:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2758:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2759:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event which must be bound to a service request line
2760:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param sr The Service request line which is bound to the \b event
2761:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2762:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2763:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2764:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2765:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Binds requested event to a service request line, by configuring CC8ySRS register with respective
2766:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2767:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API binds the requested event with the requested service
2768:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2769:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2770:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2771:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2772:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2773:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
2774:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
2775:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_SR_ID_t sr);
2776:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2777:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2778:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2779:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out Output signal for which the passive level needs to be set.
2780:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param level Output passive level for the \b out signal
2781:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2782:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2783:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2784:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2785:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the passive level for the slice output, by setting CC8yPSL register.\n\n
2786:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Defines the passive level for the timer slice output pin. Selects either level high is passive
2787:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * or level low is passive. This is the level of the output before the compare match is value chang
2788:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2789:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2790:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2791:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2792:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
2793:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
2794:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level);
2795:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2796:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2797:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2798:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to dead time configuration data
2799:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2800:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2801:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2802:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2803:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initializes Dead time configuration for the slice outputs, by configuring CC8yDC1R, CC8yDC2R, CC
2804:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This routine programs dead time delays (rising & falling) and dead time clock prescaler.
2805:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the choice of dead time for channel1, channel2, ST1, Inverted ST1, ST2, Inverted
2806:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * programmed by this routine.
2807:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2808:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2809:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureDeadTime()<BR>  XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_S
2810:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2811:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2812:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
2813:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config);
2814:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2815:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2816:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2817:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2818:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2819:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2820:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2821:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in asymmetric compare mode, by setting CC8yCHC.ASE bit.\n\n
2822:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In asymmetric compare mode, the compare channels 1 & 2 are grouped to generate the PWM.This woul
2823:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generate an inverted PWM at OUT0 & OUT1.
2824:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Edge Aligned mode (counting up), the Status bit is set when a compare match of
2825:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Compare channel-1 occurs and cleared when a compare match event of Compare channel-2 occurs.\n
2826:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In Center Aligned mode, the status bit is set when a compare match event of Compare channel-1 oc
2827:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * counting up and cleared when a compare match event of Compare channel-2 occurs while counting do
2828:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2829:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2830:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * External count direction function is enabled then the asymmetric mode of operation is not possib
2831:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2832:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2833:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableSymmetricCompareMode()<BR> 
2834:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2835:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableAsymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2836:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2837:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableAsymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSl
2838:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC |= (uint32_t) CCU8_CC8_CHC_ASE_Msk;
2839:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2840:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2841:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2842:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2843:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2844:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2845:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2846:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2847:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the slice to generate PWM in symmetric(standard) compare mode, by clearing CC8yCHC.AS
2848:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In symmetric compare mode, the compare channels 1 & 2 are independent of each other & each chann
2849:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * PWM & inverted PWM at OUT0, OUT1, OUT2 & OUT3.
2850:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2851:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2852:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableAsymmetricCompareMode().
2853:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2854:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableSymmetricCompareMode(XMC_CCU8_SLICE_t *const slice)
2855:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2856:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableSymmetricCompareMode:Invalid Slice Pointer", XMC_CCU8_IsValidSli
2857:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CHC &= ~((uint32_t) CCU8_CC8_CHC_ASE_Msk);
2858:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2859:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2860:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2861:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2862:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask The Dead Time configuration mask.
2863:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Do a bitwise OR operation on the following values depending on the need.
2864:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x1:  Dead Time Enable for Compare Channel 1
2865:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x2:  Dead Time Enable for Compare Channel 2
2866:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x4:  Dead Time Enable for CC8yST1 path is enabled.
2867:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x8:  Dead Time Enable for Inverted CC8yST1 path is enabled.
2868:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x10: Dead Time Enable for CC8yST2 path is enabled.
2869:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Value 0x20: Dead Time Enable for Inverted CC8yST2 path is enabled.
2870:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0x3F]
2871:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2872:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2873:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Activates or deactivates dead time for compare channel and ST path, by configuring CC8y.DC1R, CC
2874:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8y.DTC registers.\n\n
2875:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Use the provided masks to enable/disable the dead time for the compare channels and the ST signa
2876:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to deactivate the dead time for all the options by passing a 0x0 as the mask.
2877:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the choice of dead time for channel1, channel2, ST1, Inverted ST1, ST2, Inverted
2878:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * programmed by this routine.
2879:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2880:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2881:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DeadTimeInit()<BR> XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_SetDead
2882:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2883:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2884:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask);
2885:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2886:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2887:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2888:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Compare channel number
2889:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param rise_value Programs rising edge delay
2890:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0xFF]
2891:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param fall_value Programs falling edge delay
2892:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0xFF]
2893:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2894:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2895:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2896:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2897:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the dead time for rising and falling edges, by updating CC8y.DC1R, CC8y.DC1R register
2898:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will Configure the delay that is need either when the value changes from 0 to 1 (rising
2899:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value changes from 1 to 0(falling edge). Directly accessed registers are CC8yDC1R, CC8yDC2R.
2900:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2901:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2902:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DeadTimeInit()<BR> XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_Configu
2903:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2904:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2905:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
2906:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2907:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const uint8_t rise_value,
2908:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const uint8_t fall_value);
2909:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2910:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2911:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
2912:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val    Prescaler divider value
2913:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2914:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2915:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2916:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2917:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures clock division factor for dead time generator, by configuring CC8yDTC.DTCC bit. 
2918:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The Clock divider works on the timer clock. It is possible to scale the timer clock for the dead
2919:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generator by a factor of 1/2/4/8. This selection is passed as an argument to the API.
2920:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2921:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2922:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DeadTimeInit()<BR> XMC_CCU8_SLICE_SetDeadTimeValue()<BR>  XMC_CCU8_SLICE_Configu
2923:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running()<BR>  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
2924:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2925:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
2926:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2927:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2928:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2929:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel which channel status has to be give as out
2930:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2931:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2932:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2933:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2934:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures status ST1, ST2 mapping to STy, by configuring CC8yTC.STOS bits.\n\n
2935:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This routine defines the output STy as a function of ST1 or ST2 or both ST1 & ST2.
2936:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to make the CCU8x.STy signal to reflect the CC8y.ST1/CC8y.ST2 or a function of th
2937:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2938:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2939:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2940:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2941:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
2942:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2943:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
2944:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2945:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2946:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2947:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2948:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2949:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2950:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2951:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Cascades the shadow transfer operation throughout the CCU8 timer slices, by setting CSE bit in S
2952:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2953:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer enable bits needs to be set in all timer slices, that are being used in the 
2954:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * at the same time. The shadow transfer enable bits, also need to be set for all slices even if th
2955:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * some slices were not updated. It is possible to to cascade with the adjacent slices only. CC80 s
2956:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * master to start the operation.
2957:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2958:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2959:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() must be called to enable the shadow transfer of the all the slic
2960:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * cascaded.
2961:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2962:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2963:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfer()<BR>.
2964:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series 
2965:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2966:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableCascadedShadowTransfer(XMC_CCU8_SLICE_t *const slice)
2967:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2968:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableCascadedShadowTransfer:Invalid Slice Pointer", XMC_CCU8_IsValidS
2969:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->STC |= (uint32_t) CCU8_CC8_STC_CSE_Msk;
2970:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2971:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2972:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2973:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2974:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2975:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2976:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2977:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2978:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2979:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the cascaded the shadow transfer operation, by clearing CSE bit in STC register.\n\n
2980:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2981:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If in any slice the cascaded mode disabled, other slices from there onwards does not update the 
2982:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2983:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2984:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableCascadedShadowTransfer()<BR>.
2985:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series 
2986:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2987:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableCascadedShadowTransfer(XMC_CCU8_SLICE_t *const slice)
2988:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2989:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableCascadedShadowTransfer:Invalid Slice Pointer", XMC_CCU8_IsValid
2990:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->STC &= ~(uint32_t) CCU8_CC8_STC_CSE_Msk;
2991:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2992:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2993:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2994:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2995:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_mode mode to be configured
2996:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Use :: XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t enum items for mode
2997:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2998:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2999:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3000:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
3001:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures when the shadow transfer has to occur, by setting STM bit in STC register.\n\n
3002:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
3003:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After requesting for shadow transfer mode using XMC_CCU8_EnableShadowTransfer(), actual transfer
3004:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * selection done using this API (i.e. on period and One match, on Period match only, on One match 
3005:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
3006:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
3007:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is effective when the timer is configured in centre aligned mode.
3008:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
3009:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
3010:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer()<BR>
3011:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series 
3012:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
3013:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetShadowTransferMode(XMC_CCU8_SLICE_t *const slice,
3014:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                           const XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
3015:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 588              	 .loc 1 3015 0
 589              	 .cfi_startproc
 590              	 
 591              	 
 592              	 
 593 0000 80B4     	 push {r7}
 594              	.LCFI72:
 595              	 .cfi_def_cfa_offset 4
 596              	 .cfi_offset 7,-4
 597 0002 83B0     	 sub sp,sp,#12
 598              	.LCFI73:
 599              	 .cfi_def_cfa_offset 16
 600 0004 00AF     	 add r7,sp,#0
 601              	.LCFI74:
 602              	 .cfi_def_cfa_register 7
 603 0006 7860     	 str r0,[r7,#4]
 604 0008 0B46     	 mov r3,r1
 605 000a FB70     	 strb r3,[r7,#3]
3016:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetShadowTransferMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
3017:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->STC = ((slice->STC) & (uint32_t)~CCU8_CC8_STC_STM_Msk) |
 606              	 .loc 1 3017 0
 607 000c 7B68     	 ldr r3,[r7,#4]
 608 000e D3F8B430 	 ldr r3,[r3,#180]
 609 0012 23F00602 	 bic r2,r3,#6
3018:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                ((shadow_transfer_mode << CCU8_CC8_STC_STM_Pos) & (uint32_t)CCU8_CC8_STC_STM_Msk);
 610              	 .loc 1 3018 0
 611 0016 FB78     	 ldrb r3,[r7,#3]
 612 0018 5B00     	 lsls r3,r3,#1
 613 001a 03F00603 	 and r3,r3,#6
3017:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h ****                ((shadow_transfer_mode << CCU8_CC8_STC_STM_Pos) & (uint32_t)CCU8_CC8_STC_STM_Msk);
 614              	 .loc 1 3017 0
 615 001e 1A43     	 orrs r2,r2,r3
 616 0020 7B68     	 ldr r3,[r7,#4]
 617 0022 C3F8B420 	 str r2,[r3,#180]
3019:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 618              	 .loc 1 3019 0
 619 0026 0C37     	 adds r7,r7,#12
 620              	.LCFI75:
 621              	 .cfi_def_cfa_offset 4
 622 0028 BD46     	 mov sp,r7
 623              	.LCFI76:
 624              	 .cfi_def_cfa_register 13
 625              	 
 626 002a 5DF8047B 	 ldr r7,[sp],#4
 627              	.LCFI77:
 628              	 .cfi_restore 7
 629              	 .cfi_def_cfa_offset 0
 630 002e 7047     	 bx lr
 631              	 .cfi_endproc
 632              	.LFE200:
 634              	 .section .text.PWM_CCU8_GetAppVersion,"ax",%progbits
 635              	 .align 2
 636              	 .global PWM_CCU8_GetAppVersion
 637              	 .thumb
 638              	 .thumb_func
 640              	PWM_CCU8_GetAppVersion:
 641              	.LFB240:
 642              	 .file 2 "../Dave/Generated/PWM_CCU8/pwm_ccu8.c"
   1:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**
   2:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @file pwm_ccu8.c
   3:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @date 2016-10-28
   4:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
   5:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * NOTE:
   6:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
   8:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @cond
   9:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  10:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * PWM_CCU8 v4.1.26 - PWM APP using one timer slice of CCU8, with external events and dead time sup
  11:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *                   to generate up to 4 PWM outputs.
  12:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  13:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * Copyright (c) 2015 - 2016, Infineon Technologies AG
  14:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * All rights reserved.
  15:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  16:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * following conditions are met:
  18:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  19:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   disclaimer.
  21:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  22:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  24:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  25:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  28:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  36:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  39:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  40:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * Change History
  41:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * --------------
  42:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  43:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-02-14:
  44:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Initial version for DAVEv4
  45:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  46:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-05-20:
  47:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - PWM_CCU8_AcknowledgeInterrupt() api is renamed as PWM_CCU8_ClearEvent().
  48:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  49:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-06-20:
  50:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Copyright information updated.
  51:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  52:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-08-13:
  53:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for selection of compare channel in external load event using API "XMC_CCU8_
  54:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for selection of shadow transfer mode using API "XMC_CCU8_SLICE_SetShadowTra
  55:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for selection of immediate shadow transfer using
  56:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *       API "XMC_CCU8_SLICE_WriteImmediateAfterShadowTransfer" in XMC14* devices
  57:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for automatic shadow transfer using
  58:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *       API "XMC_CCU8_SLICE_EnableAutomaticShadowTransferRequest" in XMC14* devices
  59:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  60:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2016-03-21:
  61:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Bug Fix: Trap enable configuration is corrected in PWM_CCU8_lConfigure_Events() API.
  62:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  63:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2016-10-28:
  64:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Changed PWM_CCU8_Stop() to set the ST output to the passive value after stopping the timer
  65:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  66:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @endcond
  67:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  68:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  */
  69:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  70:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  71:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * HEADER FILES
  72:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  73:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #include "pwm_ccu8.h"
  74:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  75:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  76:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * PRIVATE FUNCTION PROTOTYPES
  77:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  78:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* Initialize the App Interrupts */
  79:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_Interrupt(PWM_CCU8_t* handle_ptr);
  80:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  81:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* Initialize the App events and configurations */
  82:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lConfigure_Events(PWM_CCU8_t* handle_ptr);
  83:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  84:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* Initialize the App pin configurations */
  85:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_GPIO(PWM_CCU8_t* handle_ptr);
  86:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  87:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  88:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * MACROS
  89:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  90:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  91:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  92:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * LOCAL DATA
  93:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  94:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  95:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  96:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * LOCAL ROUTINES
  97:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  98:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  99:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 100:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * API IMPLEMENTATION
 101:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
 102:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 103:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* API to retrieve App version info */
 104:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** DAVE_APP_VERSION_t PWM_CCU8_GetAppVersion(void)
 105:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 643              	 .loc 2 105 0
 644              	 .cfi_startproc
 645              	 
 646              	 
 647              	 
 648 0000 80B4     	 push {r7}
 649              	.LCFI78:
 650              	 .cfi_def_cfa_offset 4
 651              	 .cfi_offset 7,-4
 652 0002 83B0     	 sub sp,sp,#12
 653              	.LCFI79:
 654              	 .cfi_def_cfa_offset 16
 655 0004 00AF     	 add r7,sp,#0
 656              	.LCFI80:
 657              	 .cfi_def_cfa_register 7
 106:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   DAVE_APP_VERSION_t version;
 107:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 108:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   version.major = PWM_CCU8_MAJOR_VERSION;
 658              	 .loc 2 108 0
 659 0006 0423     	 movs r3,#4
 660 0008 3B70     	 strb r3,[r7]
 109:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   version.minor = PWM_CCU8_MINOR_VERSION;
 661              	 .loc 2 109 0
 662 000a 0123     	 movs r3,#1
 663 000c 7B70     	 strb r3,[r7,#1]
 110:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   version.patch = PWM_CCU8_PATCH_VERSION;
 664              	 .loc 2 110 0
 665 000e 1A23     	 movs r3,#26
 666 0010 BB70     	 strb r3,[r7,#2]
 111:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 112:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return version;
 667              	 .loc 2 112 0
 668 0012 3B1D     	 adds r3,r7,#4
 669 0014 3A46     	 mov r2,r7
 670 0016 1268     	 ldr r2,[r2]
 671 0018 1146     	 mov r1,r2
 672 001a 1980     	 strh r1,[r3]
 673 001c 0233     	 adds r3,r3,#2
 674 001e 120C     	 lsrs r2,r2,#16
 675 0020 1A70     	 strb r2,[r3]
 676 0022 0023     	 movs r3,#0
 677 0024 3A79     	 ldrb r2,[r7,#4]
 678 0026 62F30703 	 bfi r3,r2,#0,#8
 679 002a 7A79     	 ldrb r2,[r7,#5]
 680 002c 62F30F23 	 bfi r3,r2,#8,#8
 681 0030 BA79     	 ldrb r2,[r7,#6]
 682 0032 62F31743 	 bfi r3,r2,#16,#8
 113:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 683              	 .loc 2 113 0
 684 0036 1846     	 mov r0,r3
 685 0038 0C37     	 adds r7,r7,#12
 686              	.LCFI81:
 687              	 .cfi_def_cfa_offset 4
 688 003a BD46     	 mov sp,r7
 689              	.LCFI82:
 690              	 .cfi_def_cfa_register 13
 691              	 
 692 003c 5DF8047B 	 ldr r7,[sp],#4
 693              	.LCFI83:
 694              	 .cfi_restore 7
 695              	 .cfi_def_cfa_offset 0
 696 0040 7047     	 bx lr
 697              	 .cfi_endproc
 698              	.LFE240:
 700 0042 00BF     	 .section .text.PWM_CCU8_Init,"ax",%progbits
 701              	 .align 2
 702              	 .global PWM_CCU8_Init
 703              	 .thumb
 704              	 .thumb_func
 706              	PWM_CCU8_Init:
 707              	.LFB241:
 114:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 115:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* This function initializes the app */
 116:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_Init(PWM_CCU8_t* handle_ptr)
 117:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 708              	 .loc 2 117 0
 709              	 .cfi_startproc
 710              	 
 711              	 
 712 0000 80B5     	 push {r7,lr}
 713              	.LCFI84:
 714              	 .cfi_def_cfa_offset 8
 715              	 .cfi_offset 7,-8
 716              	 .cfi_offset 14,-4
 717 0002 86B0     	 sub sp,sp,#24
 718              	.LCFI85:
 719              	 .cfi_def_cfa_offset 32
 720 0004 00AF     	 add r7,sp,#0
 721              	.LCFI86:
 722              	 .cfi_def_cfa_register 7
 723 0006 7860     	 str r0,[r7,#4]
 118:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 119:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   GLOBAL_CCU8_STATUS_t status_ccu8_global;
 120:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_module;
 121:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t prescalar;
 122:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 123:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 724              	 .loc 2 123 0
 725 0008 0123     	 movs r3,#1
 726 000a FB75     	 strb r3,[r7,#23]
 124:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status_ccu8_global = GLOBAL_CCU8_STATUS_FAILURE;
 727              	 .loc 2 124 0
 728 000c 0123     	 movs r3,#1
 729 000e BB75     	 strb r3,[r7,#22]
 125:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_Init:handle_ptr is NULL", (handle_ptr != NULL));
 126:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 127:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED == handle_ptr->state)
 730              	 .loc 2 127 0
 731 0010 7B68     	 ldr r3,[r7,#4]
 732 0012 1B7F     	 ldrb r3,[r3,#28]
 733 0014 002B     	 cmp r3,#0
 734 0016 40F0A480 	 bne .L21
 128:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 129:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* Initialize consumed Apps */
 130:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status_ccu8_global = GLOBAL_CCU8_Init(handle_ptr->config_ptr->global_ccu8_handle);
 735              	 .loc 2 130 0
 736 001a 7B68     	 ldr r3,[r7,#4]
 737 001c 1B68     	 ldr r3,[r3]
 738 001e D3F88C30 	 ldr r3,[r3,#140]
 739 0022 1846     	 mov r0,r3
 740 0024 FFF7FEFF 	 bl GLOBAL_CCU8_Init
 741 0028 0346     	 mov r3,r0
 742 002a BB75     	 strb r3,[r7,#22]
 131:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 132:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* Initialize CCU8x_CC8y slice */
 133:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (GLOBAL_CCU8_STATUS_SUCCESS == status_ccu8_global)
 743              	 .loc 2 133 0
 744 002c BB7D     	 ldrb r3,[r7,#22]
 745 002e 002B     	 cmp r3,#0
 746 0030 40F09380 	 bne .L22
 134:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 135:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_Init:Initilizing slice");
 136:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 137:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Configure CCU8x_CC8y slice as timer */
 138:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_CompareInit(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ccu8_cc8_slice
 747              	 .loc 2 138 0
 748 0034 7B68     	 ldr r3,[r7,#4]
 749 0036 9A68     	 ldr r2,[r3,#8]
 750 0038 7B68     	 ldr r3,[r7,#4]
 751 003a 1B68     	 ldr r3,[r3]
 752 003c 9B6C     	 ldr r3,[r3,#72]
 753 003e 1046     	 mov r0,r2
 754 0040 1946     	 mov r1,r3
 755 0042 FFF7FEFF 	 bl XMC_CCU8_SLICE_CompareInit
 139:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Set period match value of the timer  */
 140:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->period
 756              	 .loc 2 140 0
 757 0046 7B68     	 ldr r3,[r7,#4]
 758 0048 9A68     	 ldr r2,[r3,#8]
 759 004a 7B68     	 ldr r3,[r7,#4]
 760 004c 1B68     	 ldr r3,[r3]
 761 004e 5B88     	 ldrh r3,[r3,#2]
 762 0050 1046     	 mov r0,r2
 763 0052 1946     	 mov r1,r3
 764 0054 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 141:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 142:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Set timer compare match value for channel 1 */
 143:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 765              	 .loc 2 143 0
 766 0058 7B68     	 ldr r3,[r7,#4]
 767 005a 9A68     	 ldr r2,[r3,#8]
 144:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare1_value);
 768              	 .loc 2 144 0
 769 005c 7B68     	 ldr r3,[r7,#4]
 770 005e 1B68     	 ldr r3,[r3]
 143:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare1_value);
 771              	 .loc 2 143 0
 772 0060 9B88     	 ldrh r3,[r3,#4]
 773 0062 1046     	 mov r0,r2
 774 0064 0021     	 movs r1,#0
 775 0066 1A46     	 mov r2,r3
 776 0068 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 145:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Set timer compare match value for channel 2 */
 146:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 777              	 .loc 2 146 0
 778 006c 7B68     	 ldr r3,[r7,#4]
 779 006e 9A68     	 ldr r2,[r3,#8]
 147:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare2_value);
 780              	 .loc 2 147 0
 781 0070 7B68     	 ldr r3,[r7,#4]
 782 0072 1B68     	 ldr r3,[r3]
 146:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare2_value);
 783              	 .loc 2 146 0
 784 0074 DB88     	 ldrh r3,[r3,#6]
 785 0076 1046     	 mov r0,r2
 786 0078 0121     	 movs r1,#1
 787 007a 1A46     	 mov r2,r3
 788 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 148:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 149:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((1U == handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->mcm_ch1_enable) || (1U
 789              	 .loc 2 149 0
 790 0080 7B68     	 ldr r3,[r7,#4]
 791 0082 1B68     	 ldr r3,[r3]
 792 0084 9B6C     	 ldr r3,[r3,#72]
 793 0086 DB78     	 ldrb r3,[r3,#3]
 794 0088 03F00203 	 and r3,r3,#2
 795 008c DBB2     	 uxtb r3,r3
 796 008e 002B     	 cmp r3,#0
 797 0090 08D1     	 bne .L23
 150:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           == handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->mcm_ch2_enable))
 798              	 .loc 2 150 0 discriminator 1
 799 0092 7B68     	 ldr r3,[r7,#4]
 800 0094 1B68     	 ldr r3,[r3]
 801 0096 9B6C     	 ldr r3,[r3,#72]
 802 0098 DB78     	 ldrb r3,[r3,#3]
 803 009a 03F00403 	 and r3,r3,#4
 804 009e DBB2     	 uxtb r3,r3
 149:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           == handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->mcm_ch2_enable))
 805              	 .loc 2 149 0 discriminator 1
 806 00a0 002B     	 cmp r3,#0
 807 00a2 08D0     	 beq .L24
 808              	.L23:
 151:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 152:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SetMultiChannelShadowTransferMode(handle_ptr->ccu8_module_ptr,
 809              	 .loc 2 152 0
 810 00a4 7B68     	 ldr r3,[r7,#4]
 811 00a6 5A68     	 ldr r2,[r3,#4]
 153:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    (uint32_t) handle_ptr->config_ptr->mcm_shadow_tx
 812              	 .loc 2 153 0
 813 00a8 7B68     	 ldr r3,[r7,#4]
 814 00aa 1B68     	 ldr r3,[r3]
 815 00ac DB6B     	 ldr r3,[r3,#60]
 152:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    (uint32_t) handle_ptr->config_ptr->mcm_shadow_tx
 816              	 .loc 2 152 0
 817 00ae 1046     	 mov r0,r2
 818 00b0 1946     	 mov r1,r3
 819 00b2 FFF7FEFF 	 bl XMC_CCU8_SetMultiChannelShadowTransferMode
 820              	.L24:
 154:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 155:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 156:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #if (UC_SERIES != XMC45) /*STC register not available on XMC45xx devices */
 157:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetShadowTransferMode(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->shad
 821              	 .loc 2 157 0
 822 00b6 7B68     	 ldr r3,[r7,#4]
 823 00b8 9A68     	 ldr r2,[r3,#8]
 824 00ba 7B68     	 ldr r3,[r7,#4]
 825 00bc 1B68     	 ldr r3,[r3]
 826 00be 93F84430 	 ldrb r3,[r3,#68]
 827 00c2 1046     	 mov r0,r2
 828 00c4 1946     	 mov r1,r3
 829 00c6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetShadowTransferMode
 158:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #endif
 159:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 160:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #if (UC_SERIES == XMC14) /*below feature available in XMC14xx devices */
 161:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_WriteImmediateAfterShadowTransfer(handle_ptr->ccu8_slice_ptr,
 162:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                        handle_ptr->config_ptr->immediate_write);
 163:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_EnableAutomaticShadowTransferRequest(handle_ptr->ccu8_slice_ptr,
 164:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                           handle_ptr->config_ptr->automatic_shadow_
 165:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if((bool)true == handle_ptr->config_ptr->cascaded_shadow_txfr_enable)
 166:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 167:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_EnableCascadedShadowTransfer(handle_ptr->ccu8_slice_ptr);
 168:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 169:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #endif
 170:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 171:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Transfer value from shadow timer registers to actual timer registers */
 172:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 830              	 .loc 2 172 0
 831 00ca 7B68     	 ldr r3,[r7,#4]
 832 00cc 5A68     	 ldr r2,[r3,#4]
 833 00ce 7B68     	 ldr r3,[r7,#4]
 834 00d0 1B69     	 ldr r3,[r3,#16]
 835 00d2 1046     	 mov r0,r2
 836 00d4 1946     	 mov r1,r3
 837 00d6 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 173:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->dither_shadow_txfr_msk
 838              	 .loc 2 173 0
 839 00da 7B68     	 ldr r3,[r7,#4]
 840 00dc 5A68     	 ldr r2,[r3,#4]
 841 00de 7B68     	 ldr r3,[r7,#4]
 842 00e0 5B69     	 ldr r3,[r3,#20]
 843 00e2 1046     	 mov r0,r2
 844 00e4 1946     	 mov r1,r3
 845 00e6 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 174:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 175:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_DeadTimeInit(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->dt_config_ptr
 846              	 .loc 2 175 0
 847 00ea 7B68     	 ldr r3,[r7,#4]
 848 00ec 9A68     	 ldr r2,[r3,#8]
 849 00ee 7B68     	 ldr r3,[r7,#4]
 850 00f0 1B68     	 ldr r3,[r3]
 851 00f2 1B6C     	 ldr r3,[r3,#64]
 852 00f4 1046     	 mov r0,r2
 853 00f6 1946     	 mov r1,r3
 854 00f8 FFF7FEFF 	 bl XMC_CCU8_SLICE_DeadTimeInit
 176:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 177:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Configure events */
 178:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       PWM_CCU8_lConfigure_Events(handle_ptr);
 855              	 .loc 2 178 0
 856 00fc 7868     	 ldr r0,[r7,#4]
 857 00fe FFF7FEFF 	 bl PWM_CCU8_lConfigure_Events
 179:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 180:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Enable the interrupts */
 181:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       PWM_CCU8_lInit_Interrupt(handle_ptr);
 858              	 .loc 2 181 0
 859 0102 7868     	 ldr r0,[r7,#4]
 860 0104 FFF7FEFF 	 bl PWM_CCU8_lInit_Interrupt
 182:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 183:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /*Initializes the GPIO*/
 184:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       PWM_CCU8_lInit_GPIO(handle_ptr);
 861              	 .loc 2 184 0
 862 0108 7868     	 ldr r0,[r7,#4]
 863 010a FFF7FEFF 	 bl PWM_CCU8_lInit_GPIO
 185:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 186:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_module = handle_ptr->config_ptr->global_ccu8_handle->module_frequency;
 864              	 .loc 2 186 0
 865 010e 7B68     	 ldr r3,[r7,#4]
 866 0110 1B68     	 ldr r3,[r3]
 867 0112 D3F88C30 	 ldr r3,[r3,#140]
 868 0116 1B68     	 ldr r3,[r3]
 869 0118 3B61     	 str r3,[r7,#16]
 187:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       prescalar = (uint32_t) handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->prescaler_initval;
 870              	 .loc 2 187 0
 871 011a 7B68     	 ldr r3,[r7,#4]
 872 011c 1B68     	 ldr r3,[r3]
 873 011e 9B6C     	 ldr r3,[r3,#72]
 874 0120 1B7B     	 ldrb r3,[r3,#12]
 875 0122 C3F30303 	 ubfx r3,r3,#0,#4
 876 0126 DBB2     	 uxtb r3,r3
 877 0128 FB60     	 str r3,[r7,#12]
 188:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_module = frequency_module / ((uint32_t) 1 << prescalar);
 878              	 .loc 2 188 0
 879 012a FB68     	 ldr r3,[r7,#12]
 880 012c 3A69     	 ldr r2,[r7,#16]
 881 012e 22FA03F3 	 lsr r3,r2,r3
 882 0132 3B61     	 str r3,[r7,#16]
 189:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       handle_ptr->frequency_tclk = frequency_module;
 883              	 .loc 2 189 0
 884 0134 7B68     	 ldr r3,[r7,#4]
 885 0136 3A69     	 ldr r2,[r7,#16]
 886 0138 1A62     	 str r2,[r3,#32]
 190:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 191:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       handle_ptr->state = PWM_CCU8_STATE_INITIALIZED;
 887              	 .loc 2 191 0
 888 013a 7B68     	 ldr r3,[r7,#4]
 889 013c 0122     	 movs r2,#1
 890 013e 1A77     	 strb r2,[r3,#28]
 192:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       status = PWM_CCU8_STATUS_SUCCESS;
 891              	 .loc 2 192 0
 892 0140 0023     	 movs r3,#0
 893 0142 FB75     	 strb r3,[r7,#23]
 193:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 194:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Start the PWM generation if start at initialization is enabled */
 195:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((bool) true == handle_ptr->config_ptr->start_control)
 894              	 .loc 2 195 0
 895 0144 7B68     	 ldr r3,[r7,#4]
 896 0146 1B68     	 ldr r3,[r3]
 897 0148 1B78     	 ldrb r3,[r3]
 898 014a 002B     	 cmp r3,#0
 899 014c 0BD0     	 beq .L27
 196:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 197:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_Start(handle_ptr);
 900              	 .loc 2 197 0
 901 014e 7868     	 ldr r0,[r7,#4]
 902 0150 FFF7FEFF 	 bl PWM_CCU8_Start
 903 0154 0346     	 mov r3,r0
 904 0156 FB75     	 strb r3,[r7,#23]
 905 0158 05E0     	 b .L27
 906              	.L22:
 198:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 199:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 200:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 201:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 202:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 203:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       handle_ptr->state = PWM_CCU8_STATE_UNINITIALIZED;
 907              	 .loc 2 203 0
 908 015a 7B68     	 ldr r3,[r7,#4]
 909 015c 0022     	 movs r2,#0
 910 015e 1A77     	 strb r2,[r3,#28]
 911 0160 01E0     	 b .L27
 912              	.L21:
 204:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 205:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 206:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 207:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   else
 208:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 209:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status = PWM_CCU8_STATUS_ALREADY_INITIALIZED;
 913              	 .loc 2 209 0
 914 0162 0223     	 movs r3,#2
 915 0164 FB75     	 strb r3,[r7,#23]
 916              	.L27:
 210:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init:PWM_CCU8_STATUS_ALREADY_INITIALIZED");
 211:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 212:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 213:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 917              	 .loc 2 213 0
 918 0166 FB7D     	 ldrb r3,[r7,#23]
 214:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_Init() api */
 919              	 .loc 2 214 0
 920 0168 1846     	 mov r0,r3
 921 016a 1837     	 adds r7,r7,#24
 922              	.LCFI87:
 923              	 .cfi_def_cfa_offset 8
 924 016c BD46     	 mov sp,r7
 925              	.LCFI88:
 926              	 .cfi_def_cfa_register 13
 927              	 
 928 016e 80BD     	 pop {r7,pc}
 929              	 .cfi_endproc
 930              	.LFE241:
 932              	 .section .text.PWM_CCU8_lInit_Interrupt,"ax",%progbits
 933              	 .align 2
 934              	 .thumb
 935              	 .thumb_func
 937              	PWM_CCU8_lInit_Interrupt:
 938              	.LFB242:
 215:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 216:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_Interrupt(PWM_CCU8_t* handle_ptr)
 217:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 939              	 .loc 2 217 0
 940              	 .cfi_startproc
 941              	 
 942              	 
 943 0000 80B5     	 push {r7,lr}
 944              	.LCFI89:
 945              	 .cfi_def_cfa_offset 8
 946              	 .cfi_offset 7,-8
 947              	 .cfi_offset 14,-4
 948 0002 82B0     	 sub sp,sp,#8
 949              	.LCFI90:
 950              	 .cfi_def_cfa_offset 16
 951 0004 00AF     	 add r7,sp,#0
 952              	.LCFI91:
 953              	 .cfi_def_cfa_register 7
 954 0006 7860     	 str r0,[r7,#4]
 218:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 219:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Enable events. Bind event to corresponding service request node. */
 220:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 221:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH,
 955              	 .loc 2 221 0
 956 0008 7B68     	 ldr r3,[r7,#4]
 957 000a 9A68     	 ldr r2,[r3,#8]
 222:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_per_match);
 958              	 .loc 2 222 0
 959 000c 7B68     	 ldr r3,[r7,#4]
 960 000e 1B68     	 ldr r3,[r3]
 221:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_per_match);
 961              	 .loc 2 221 0
 962 0010 5B7C     	 ldrb r3,[r3,#17]
 963 0012 1046     	 mov r0,r2
 964 0014 0021     	 movs r1,#0
 965 0016 1A46     	 mov r2,r3
 966 0018 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 223:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 967              	 .loc 2 223 0
 968 001c 7B68     	 ldr r3,[r7,#4]
 969 001e 9A68     	 ldr r2,[r3,#8]
 224:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp1_match_up);
 970              	 .loc 2 224 0
 971 0020 7B68     	 ldr r3,[r7,#4]
 972 0022 1B68     	 ldr r3,[r3]
 223:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 973              	 .loc 2 223 0
 974 0024 9B7C     	 ldrb r3,[r3,#18]
 975 0026 1046     	 mov r0,r2
 976 0028 0221     	 movs r1,#2
 977 002a 1A46     	 mov r2,r3
 978 002c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 225:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 979              	 .loc 2 225 0
 980 0030 7B68     	 ldr r3,[r7,#4]
 981 0032 9A68     	 ldr r2,[r3,#8]
 226:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp1_match_down);
 982              	 .loc 2 226 0
 983 0034 7B68     	 ldr r3,[r7,#4]
 984 0036 1B68     	 ldr r3,[r3]
 225:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 985              	 .loc 2 225 0
 986 0038 DB7C     	 ldrb r3,[r3,#19]
 987 003a 1046     	 mov r0,r2
 988 003c 0321     	 movs r1,#3
 989 003e 1A46     	 mov r2,r3
 990 0040 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 227:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 991              	 .loc 2 227 0
 992 0044 7B68     	 ldr r3,[r7,#4]
 993 0046 9A68     	 ldr r2,[r3,#8]
 228:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp2_match_up);
 994              	 .loc 2 228 0
 995 0048 7B68     	 ldr r3,[r7,#4]
 996 004a 1B68     	 ldr r3,[r3]
 227:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 997              	 .loc 2 227 0
 998 004c 1B7D     	 ldrb r3,[r3,#20]
 999 004e 1046     	 mov r0,r2
 1000 0050 0421     	 movs r1,#4
 1001 0052 1A46     	 mov r2,r3
 1002 0054 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 229:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 1003              	 .loc 2 229 0
 1004 0058 7B68     	 ldr r3,[r7,#4]
 1005 005a 9A68     	 ldr r2,[r3,#8]
 230:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp2_match_down);
 1006              	 .loc 2 230 0
 1007 005c 7B68     	 ldr r3,[r7,#4]
 1008 005e 1B68     	 ldr r3,[r3]
 229:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 1009              	 .loc 2 229 0
 1010 0060 5B7D     	 ldrb r3,[r3,#21]
 1011 0062 1046     	 mov r0,r2
 1012 0064 0521     	 movs r1,#5
 1013 0066 1A46     	 mov r2,r3
 1014 0068 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 231:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH,
 1015              	 .loc 2 231 0
 1016 006c 7B68     	 ldr r3,[r7,#4]
 1017 006e 9A68     	 ldr r2,[r3,#8]
 232:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_one_match_down);
 1018              	 .loc 2 232 0
 1019 0070 7B68     	 ldr r3,[r7,#4]
 1020 0072 1B68     	 ldr r3,[r3]
 231:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH,
 1021              	 .loc 2 231 0
 1022 0074 9B7D     	 ldrb r3,[r3,#22]
 1023 0076 1046     	 mov r0,r2
 1024 0078 0121     	 movs r1,#1
 1025 007a 1A46     	 mov r2,r3
 1026 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 233:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT0,
 1027              	 .loc 2 233 0
 1028 0080 7B68     	 ldr r3,[r7,#4]
 1029 0082 9A68     	 ldr r2,[r3,#8]
 234:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_e0);
 1030              	 .loc 2 234 0
 1031 0084 7B68     	 ldr r3,[r7,#4]
 1032 0086 1B68     	 ldr r3,[r3]
 233:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT0,
 1033              	 .loc 2 233 0
 1034 0088 DB7D     	 ldrb r3,[r3,#23]
 1035 008a 1046     	 mov r0,r2
 1036 008c 0821     	 movs r1,#8
 1037 008e 1A46     	 mov r2,r3
 1038 0090 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 235:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT1,
 1039              	 .loc 2 235 0
 1040 0094 7B68     	 ldr r3,[r7,#4]
 1041 0096 9A68     	 ldr r2,[r3,#8]
 236:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_e1);
 1042              	 .loc 2 236 0
 1043 0098 7B68     	 ldr r3,[r7,#4]
 1044 009a 1B68     	 ldr r3,[r3]
 235:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT1,
 1045              	 .loc 2 235 0
 1046 009c 1B7E     	 ldrb r3,[r3,#24]
 1047 009e 1046     	 mov r0,r2
 1048 00a0 0921     	 movs r1,#9
 1049 00a2 1A46     	 mov r2,r3
 1050 00a4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 237:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2,
 1051              	 .loc 2 237 0
 1052 00a8 7B68     	 ldr r3,[r7,#4]
 1053 00aa 9A68     	 ldr r2,[r3,#8]
 238:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_e2);
 1054              	 .loc 2 238 0
 1055 00ac 7B68     	 ldr r3,[r7,#4]
 1056 00ae 1B68     	 ldr r3,[r3]
 237:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2,
 1057              	 .loc 2 237 0
 1058 00b0 5B7E     	 ldrb r3,[r3,#25]
 1059 00b2 1046     	 mov r0,r2
 1060 00b4 0A21     	 movs r1,#10
 1061 00b6 1A46     	 mov r2,r3
 1062 00b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 239:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 240:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_per_match)
 1063              	 .loc 2 240 0
 1064 00bc 7B68     	 ldr r3,[r7,#4]
 1065 00be 1B68     	 ldr r3,[r3]
 1066 00c0 1B7A     	 ldrb r3,[r3,#8]
 1067 00c2 002B     	 cmp r3,#0
 1068 00c4 05D0     	 beq .L30
 241:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 242:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt period match enable");
 243:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 1069              	 .loc 2 243 0
 1070 00c6 7B68     	 ldr r3,[r7,#4]
 1071 00c8 9B68     	 ldr r3,[r3,#8]
 1072 00ca 1846     	 mov r0,r3
 1073 00cc 0021     	 movs r1,#0
 1074 00ce FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1075              	.L30:
 244:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 245:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 246:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp1_match_up)
 1076              	 .loc 2 246 0
 1077 00d2 7B68     	 ldr r3,[r7,#4]
 1078 00d4 1B68     	 ldr r3,[r3]
 1079 00d6 5B7A     	 ldrb r3,[r3,#9]
 1080 00d8 002B     	 cmp r3,#0
 1081 00da 05D0     	 beq .L31
 247:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 248:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch1 up enable");
 249:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_C
 1082              	 .loc 2 249 0
 1083 00dc 7B68     	 ldr r3,[r7,#4]
 1084 00de 9B68     	 ldr r3,[r3,#8]
 1085 00e0 1846     	 mov r0,r3
 1086 00e2 0221     	 movs r1,#2
 1087 00e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1088              	.L31:
 250:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 251:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 252:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp1_match_down)
 1089              	 .loc 2 252 0
 1090 00e8 7B68     	 ldr r3,[r7,#4]
 1091 00ea 1B68     	 ldr r3,[r3]
 1092 00ec 9B7A     	 ldrb r3,[r3,#10]
 1093 00ee 002B     	 cmp r3,#0
 1094 00f0 05D0     	 beq .L32
 253:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 254:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch1 down enable");
 255:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN
 1095              	 .loc 2 255 0
 1096 00f2 7B68     	 ldr r3,[r7,#4]
 1097 00f4 9B68     	 ldr r3,[r3,#8]
 1098 00f6 1846     	 mov r0,r3
 1099 00f8 0321     	 movs r1,#3
 1100 00fa FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1101              	.L32:
 256:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 257:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 258:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp2_match_up)
 1102              	 .loc 2 258 0
 1103 00fe 7B68     	 ldr r3,[r7,#4]
 1104 0100 1B68     	 ldr r3,[r3]
 1105 0102 DB7A     	 ldrb r3,[r3,#11]
 1106 0104 002B     	 cmp r3,#0
 1107 0106 05D0     	 beq .L33
 259:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 260:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch2 up enable");
 261:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_C
 1108              	 .loc 2 261 0
 1109 0108 7B68     	 ldr r3,[r7,#4]
 1110 010a 9B68     	 ldr r3,[r3,#8]
 1111 010c 1846     	 mov r0,r3
 1112 010e 0421     	 movs r1,#4
 1113 0110 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1114              	.L33:
 262:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 263:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 264:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp2_match_down)
 1115              	 .loc 2 264 0
 1116 0114 7B68     	 ldr r3,[r7,#4]
 1117 0116 1B68     	 ldr r3,[r3]
 1118 0118 1B7B     	 ldrb r3,[r3,#12]
 1119 011a 002B     	 cmp r3,#0
 1120 011c 05D0     	 beq .L34
 265:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 266:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch2 down enable");
 267:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN
 1121              	 .loc 2 267 0
 1122 011e 7B68     	 ldr r3,[r7,#4]
 1123 0120 9B68     	 ldr r3,[r3,#8]
 1124 0122 1846     	 mov r0,r3
 1125 0124 0521     	 movs r1,#5
 1126 0126 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1127              	.L34:
 268:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 269:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 270:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_one_match_down)
 1128              	 .loc 2 270 0
 1129 012a 7B68     	 ldr r3,[r7,#4]
 1130 012c 1B68     	 ldr r3,[r3]
 1131 012e 5B7B     	 ldrb r3,[r3,#13]
 1132 0130 002B     	 cmp r3,#0
 1133 0132 05D0     	 beq .L35
 271:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 272:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt one match enable");
 273:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH);
 1134              	 .loc 2 273 0
 1135 0134 7B68     	 ldr r3,[r7,#4]
 1136 0136 9B68     	 ldr r3,[r3,#8]
 1137 0138 1846     	 mov r0,r3
 1138 013a 0121     	 movs r1,#1
 1139 013c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1140              	.L35:
 274:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 275:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 276:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_e0)
 1141              	 .loc 2 276 0
 1142 0140 7B68     	 ldr r3,[r7,#4]
 1143 0142 1B68     	 ldr r3,[r3]
 1144 0144 9B7B     	 ldrb r3,[r3,#14]
 1145 0146 002B     	 cmp r3,#0
 1146 0148 05D0     	 beq .L36
 277:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 278:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt event 0 enable");
 279:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT0);
 1147              	 .loc 2 279 0
 1148 014a 7B68     	 ldr r3,[r7,#4]
 1149 014c 9B68     	 ldr r3,[r3,#8]
 1150 014e 1846     	 mov r0,r3
 1151 0150 0821     	 movs r1,#8
 1152 0152 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1153              	.L36:
 280:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 281:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 282:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_e1)
 1154              	 .loc 2 282 0
 1155 0156 7B68     	 ldr r3,[r7,#4]
 1156 0158 1B68     	 ldr r3,[r3]
 1157 015a DB7B     	 ldrb r3,[r3,#15]
 1158 015c 002B     	 cmp r3,#0
 1159 015e 05D0     	 beq .L37
 283:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 284:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt event 1 enable");
 285:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT1);
 1160              	 .loc 2 285 0
 1161 0160 7B68     	 ldr r3,[r7,#4]
 1162 0162 9B68     	 ldr r3,[r3,#8]
 1163 0164 1846     	 mov r0,r3
 1164 0166 0921     	 movs r1,#9
 1165 0168 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1166              	.L37:
 286:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 287:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 288:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_e2)
 1167              	 .loc 2 288 0
 1168 016c 7B68     	 ldr r3,[r7,#4]
 1169 016e 1B68     	 ldr r3,[r3]
 1170 0170 1B7C     	 ldrb r3,[r3,#16]
 1171 0172 002B     	 cmp r3,#0
 1172 0174 05D0     	 beq .L29
 289:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 290:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt event 2 enable");
 291:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2);
 1173              	 .loc 2 291 0
 1174 0176 7B68     	 ldr r3,[r7,#4]
 1175 0178 9B68     	 ldr r3,[r3,#8]
 1176 017a 1846     	 mov r0,r3
 1177 017c 0A21     	 movs r1,#10
 1178 017e FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1179              	.L29:
 292:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 293:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 1180              	 .loc 2 293 0
 1181 0182 0837     	 adds r7,r7,#8
 1182              	.LCFI92:
 1183              	 .cfi_def_cfa_offset 8
 1184 0184 BD46     	 mov sp,r7
 1185              	.LCFI93:
 1186              	 .cfi_def_cfa_register 13
 1187              	 
 1188 0186 80BD     	 pop {r7,pc}
 1189              	 .cfi_endproc
 1190              	.LFE242:
 1192              	 .section .text.PWM_CCU8_lInit_GPIO,"ax",%progbits
 1193              	 .align 2
 1194              	 .thumb
 1195              	 .thumb_func
 1197              	PWM_CCU8_lInit_GPIO:
 1198              	.LFB243:
 294:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_GPIO(PWM_CCU8_t* handle_ptr)
 295:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1199              	 .loc 2 295 0
 1200              	 .cfi_startproc
 1201              	 
 1202              	 
 1203 0000 80B5     	 push {r7,lr}
 1204              	.LCFI94:
 1205              	 .cfi_def_cfa_offset 8
 1206              	 .cfi_offset 7,-8
 1207              	 .cfi_offset 14,-4
 1208 0002 82B0     	 sub sp,sp,#8
 1209              	.LCFI95:
 1210              	 .cfi_def_cfa_offset 16
 1211 0004 00AF     	 add r7,sp,#0
 1212              	.LCFI96:
 1213              	 .cfi_def_cfa_register 7
 1214 0006 7860     	 str r0,[r7,#4]
 296:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch1_out0_enable)
 1215              	 .loc 2 296 0
 1216 0008 7B68     	 ldr r3,[r7,#4]
 1217 000a 1B68     	 ldr r3,[r3]
 1218 000c 93F84C30 	 ldrb r3,[r3,#76]
 1219 0010 002B     	 cmp r3,#0
 1220 0012 0ED0     	 beq .L40
 297:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 298:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch1_out0_ptr, handle_ptr->config_ptr->gpio_ch1_out0_
 1221              	 .loc 2 298 0
 1222 0014 7B68     	 ldr r3,[r7,#4]
 1223 0016 1B68     	 ldr r3,[r3]
 1224 0018 196D     	 ldr r1,[r3,#80]
 1225 001a 7B68     	 ldr r3,[r7,#4]
 1226 001c 1B68     	 ldr r3,[r3]
 1227 001e 93F85420 	 ldrb r2,[r3,#84]
 299:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out0_config_ptr);
 1228              	 .loc 2 299 0
 1229 0022 7B68     	 ldr r3,[r7,#4]
 1230 0024 1B68     	 ldr r3,[r3]
 298:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out0_config_ptr);
 1231              	 .loc 2 298 0
 1232 0026 9B6D     	 ldr r3,[r3,#88]
 1233 0028 0846     	 mov r0,r1
 1234 002a 1146     	 mov r1,r2
 1235 002c 1A46     	 mov r2,r3
 1236 002e FFF7FEFF 	 bl XMC_GPIO_Init
 1237              	.L40:
 300:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 301:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 302:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch1_out1_enable)
 1238              	 .loc 2 302 0
 1239 0032 7B68     	 ldr r3,[r7,#4]
 1240 0034 1B68     	 ldr r3,[r3]
 1241 0036 93F85C30 	 ldrb r3,[r3,#92]
 1242 003a 002B     	 cmp r3,#0
 1243 003c 0ED0     	 beq .L41
 303:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 304:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch1_out1_ptr, handle_ptr->config_ptr->gpio_ch1_out1_
 1244              	 .loc 2 304 0
 1245 003e 7B68     	 ldr r3,[r7,#4]
 1246 0040 1B68     	 ldr r3,[r3]
 1247 0042 196E     	 ldr r1,[r3,#96]
 1248 0044 7B68     	 ldr r3,[r7,#4]
 1249 0046 1B68     	 ldr r3,[r3]
 1250 0048 93F86420 	 ldrb r2,[r3,#100]
 305:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out1_config_ptr);
 1251              	 .loc 2 305 0
 1252 004c 7B68     	 ldr r3,[r7,#4]
 1253 004e 1B68     	 ldr r3,[r3]
 304:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out1_config_ptr);
 1254              	 .loc 2 304 0
 1255 0050 9B6E     	 ldr r3,[r3,#104]
 1256 0052 0846     	 mov r0,r1
 1257 0054 1146     	 mov r1,r2
 1258 0056 1A46     	 mov r2,r3
 1259 0058 FFF7FEFF 	 bl XMC_GPIO_Init
 1260              	.L41:
 306:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 307:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 308:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch2_out2_enable)
 1261              	 .loc 2 308 0
 1262 005c 7B68     	 ldr r3,[r7,#4]
 1263 005e 1B68     	 ldr r3,[r3]
 1264 0060 93F86C30 	 ldrb r3,[r3,#108]
 1265 0064 002B     	 cmp r3,#0
 1266 0066 0ED0     	 beq .L42
 309:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 310:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch2_out2_ptr, handle_ptr->config_ptr->gpio_ch2_out2_
 1267              	 .loc 2 310 0
 1268 0068 7B68     	 ldr r3,[r7,#4]
 1269 006a 1B68     	 ldr r3,[r3]
 1270 006c 196F     	 ldr r1,[r3,#112]
 1271 006e 7B68     	 ldr r3,[r7,#4]
 1272 0070 1B68     	 ldr r3,[r3]
 1273 0072 93F87420 	 ldrb r2,[r3,#116]
 311:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out2_config_ptr);
 1274              	 .loc 2 311 0
 1275 0076 7B68     	 ldr r3,[r7,#4]
 1276 0078 1B68     	 ldr r3,[r3]
 310:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out2_config_ptr);
 1277              	 .loc 2 310 0
 1278 007a 9B6F     	 ldr r3,[r3,#120]
 1279 007c 0846     	 mov r0,r1
 1280 007e 1146     	 mov r1,r2
 1281 0080 1A46     	 mov r2,r3
 1282 0082 FFF7FEFF 	 bl XMC_GPIO_Init
 1283              	.L42:
 312:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 313:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 314:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch2_out3_enable)
 1284              	 .loc 2 314 0
 1285 0086 7B68     	 ldr r3,[r7,#4]
 1286 0088 1B68     	 ldr r3,[r3]
 1287 008a 93F87C30 	 ldrb r3,[r3,#124]
 1288 008e 002B     	 cmp r3,#0
 1289 0090 10D0     	 beq .L39
 315:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 316:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch2_out3_ptr, handle_ptr->config_ptr->gpio_ch2_out3_
 1290              	 .loc 2 316 0
 1291 0092 7B68     	 ldr r3,[r7,#4]
 1292 0094 1B68     	 ldr r3,[r3]
 1293 0096 D3F88010 	 ldr r1,[r3,#128]
 1294 009a 7B68     	 ldr r3,[r7,#4]
 1295 009c 1B68     	 ldr r3,[r3]
 1296 009e 93F88420 	 ldrb r2,[r3,#132]
 317:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out3_config_ptr);
 1297              	 .loc 2 317 0
 1298 00a2 7B68     	 ldr r3,[r7,#4]
 1299 00a4 1B68     	 ldr r3,[r3]
 316:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out3_config_ptr);
 1300              	 .loc 2 316 0
 1301 00a6 D3F88830 	 ldr r3,[r3,#136]
 1302 00aa 0846     	 mov r0,r1
 1303 00ac 1146     	 mov r1,r2
 1304 00ae 1A46     	 mov r2,r3
 1305 00b0 FFF7FEFF 	 bl XMC_GPIO_Init
 1306              	.L39:
 318:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 319:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 1307              	 .loc 2 319 0
 1308 00b4 0837     	 adds r7,r7,#8
 1309              	.LCFI97:
 1310              	 .cfi_def_cfa_offset 8
 1311 00b6 BD46     	 mov sp,r7
 1312              	.LCFI98:
 1313              	 .cfi_def_cfa_register 13
 1314              	 
 1315 00b8 80BD     	 pop {r7,pc}
 1316              	 .cfi_endproc
 1317              	.LFE243:
 1319 00ba 00BF     	 .section .text.PWM_CCU8_lConfigure_Events,"ax",%progbits
 1320              	 .align 2
 1321              	 .thumb
 1322              	 .thumb_func
 1324              	PWM_CCU8_lConfigure_Events:
 1325              	.LFB244:
 320:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 321:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lConfigure_Events(PWM_CCU8_t* handle_ptr)
 322:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1326              	 .loc 2 322 0
 1327              	 .cfi_startproc
 1328              	 
 1329              	 
 1330 0000 80B5     	 push {r7,lr}
 1331              	.LCFI99:
 1332              	 .cfi_def_cfa_offset 8
 1333              	 .cfi_offset 7,-8
 1334              	 .cfi_offset 14,-4
 1335 0002 84B0     	 sub sp,sp,#16
 1336              	.LCFI100:
 1337              	 .cfi_def_cfa_offset 24
 1338 0004 02AF     	 add r7,sp,#8
 1339              	.LCFI101:
 1340              	 .cfi_def_cfa 7,16
 1341 0006 7860     	 str r0,[r7,#4]
 323:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Configure slice to a external event 0 */
 324:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ConfigureEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_EVENT_0,
 1342              	 .loc 2 324 0
 1343 0008 7B68     	 ldr r3,[r7,#4]
 1344 000a 9A68     	 ldr r2,[r3,#8]
 325:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event0_config_ptr);
 1345              	 .loc 2 325 0
 1346 000c 7B68     	 ldr r3,[r7,#4]
 1347 000e 1B68     	 ldr r3,[r3]
 324:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event0_config_ptr);
 1348              	 .loc 2 324 0
 1349 0010 DB69     	 ldr r3,[r3,#28]
 1350 0012 1046     	 mov r0,r2
 1351 0014 0121     	 movs r1,#1
 1352 0016 1A46     	 mov r2,r3
 1353 0018 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 326:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 327:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Configure slice to a external event 1 */
 328:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ConfigureEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_EVENT_1,
 1354              	 .loc 2 328 0
 1355 001c 7B68     	 ldr r3,[r7,#4]
 1356 001e 9A68     	 ldr r2,[r3,#8]
 329:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event1_config_ptr);
 1357              	 .loc 2 329 0
 1358 0020 7B68     	 ldr r3,[r7,#4]
 1359 0022 1B68     	 ldr r3,[r3]
 328:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event1_config_ptr);
 1360              	 .loc 2 328 0
 1361 0024 1B6A     	 ldr r3,[r3,#32]
 1362 0026 1046     	 mov r0,r2
 1363 0028 0221     	 movs r1,#2
 1364 002a 1A46     	 mov r2,r3
 1365 002c FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 330:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 331:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Configure slice to a external event 2 */
 332:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ConfigureEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_EVENT_2,
 1366              	 .loc 2 332 0
 1367 0030 7B68     	 ldr r3,[r7,#4]
 1368 0032 9A68     	 ldr r2,[r3,#8]
 333:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event2_config_ptr);
 1369              	 .loc 2 333 0
 1370 0034 7B68     	 ldr r3,[r7,#4]
 1371 0036 1B68     	 ldr r3,[r3]
 332:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event2_config_ptr);
 1372              	 .loc 2 332 0
 1373 0038 5B6A     	 ldr r3,[r3,#36]
 1374 003a 1046     	 mov r0,r2
 1375 003c 0321     	 movs r1,#3
 1376 003e 1A46     	 mov r2,r3
 1377 0040 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 334:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 335:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal controls start of the timer */
 336:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_start_event)
 1378              	 .loc 2 336 0
 1379 0044 7B68     	 ldr r3,[r7,#4]
 1380 0046 1B68     	 ldr r3,[r3]
 1381 0048 93F82830 	 ldrb r3,[r3,#40]
 1382 004c 002B     	 cmp r3,#0
 1383 004e 0ED0     	 beq .L45
 337:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 338:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StartConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_start_event,
 1384              	 .loc 2 338 0
 1385 0050 7B68     	 ldr r3,[r7,#4]
 1386 0052 9968     	 ldr r1,[r3,#8]
 1387 0054 7B68     	 ldr r3,[r7,#4]
 1388 0056 1B68     	 ldr r3,[r3]
 1389 0058 93F82820 	 ldrb r2,[r3,#40]
 339:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                handle_ptr->config_ptr->ext_start_mode);
 1390              	 .loc 2 339 0
 1391 005c 7B68     	 ldr r3,[r7,#4]
 1392 005e 1B68     	 ldr r3,[r3]
 338:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                handle_ptr->config_ptr->ext_start_mode);
 1393              	 .loc 2 338 0
 1394 0060 93F82930 	 ldrb r3,[r3,#41]
 1395 0064 0846     	 mov r0,r1
 1396 0066 1146     	 mov r1,r2
 1397 0068 1A46     	 mov r2,r3
 1398 006a FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
 1399              	.L45:
 340:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 341:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 342:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal can stop the timer */
 343:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_stop_event)
 1400              	 .loc 2 343 0
 1401 006e 7B68     	 ldr r3,[r7,#4]
 1402 0070 1B68     	 ldr r3,[r3]
 1403 0072 93F82A30 	 ldrb r3,[r3,#42]
 1404 0076 002B     	 cmp r3,#0
 1405 0078 0ED0     	 beq .L46
 344:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 345:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StopConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_stop_event,
 1406              	 .loc 2 345 0
 1407 007a 7B68     	 ldr r3,[r7,#4]
 1408 007c 9968     	 ldr r1,[r3,#8]
 1409 007e 7B68     	 ldr r3,[r7,#4]
 1410 0080 1B68     	 ldr r3,[r3]
 1411 0082 93F82A20 	 ldrb r2,[r3,#42]
 346:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_stop_mode);
 1412              	 .loc 2 346 0
 1413 0086 7B68     	 ldr r3,[r7,#4]
 1414 0088 1B68     	 ldr r3,[r3]
 345:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_stop_mode);
 1415              	 .loc 2 345 0
 1416 008a 93F82B30 	 ldrb r3,[r3,#43]
 1417 008e 0846     	 mov r0,r1
 1418 0090 1146     	 mov r1,r2
 1419 0092 1A46     	 mov r2,r3
 1420 0094 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopConfig
 1421              	.L46:
 347:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 348:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 349:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal can change the timer counting direction */
 350:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_count_dir_event)
 1422              	 .loc 2 350 0
 1423 0098 7B68     	 ldr r3,[r7,#4]
 1424 009a 1B68     	 ldr r3,[r3]
 1425 009c 93F82C30 	 ldrb r3,[r3,#44]
 1426 00a0 002B     	 cmp r3,#0
 1427 00a2 09D0     	 beq .L47
 351:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 352:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_DirectionConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_count_di
 1428              	 .loc 2 352 0
 1429 00a4 7B68     	 ldr r3,[r7,#4]
 1430 00a6 9A68     	 ldr r2,[r3,#8]
 1431 00a8 7B68     	 ldr r3,[r7,#4]
 1432 00aa 1B68     	 ldr r3,[r3]
 1433 00ac 93F82C30 	 ldrb r3,[r3,#44]
 1434 00b0 1046     	 mov r0,r2
 1435 00b2 1946     	 mov r1,r3
 1436 00b4 FFF7FEFF 	 bl XMC_CCU8_SLICE_DirectionConfig
 1437              	.L47:
 353:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 354:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal can stop the timer and the timer value remains same */
 355:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_gate_event)
 1438              	 .loc 2 355 0
 1439 00b8 7B68     	 ldr r3,[r7,#4]
 1440 00ba 1B68     	 ldr r3,[r3]
 1441 00bc 93F82D30 	 ldrb r3,[r3,#45]
 1442 00c0 002B     	 cmp r3,#0
 1443 00c2 09D0     	 beq .L48
 356:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 357:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_GateConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_gate_event);
 1444              	 .loc 2 357 0
 1445 00c4 7B68     	 ldr r3,[r7,#4]
 1446 00c6 9A68     	 ldr r2,[r3,#8]
 1447 00c8 7B68     	 ldr r3,[r7,#4]
 1448 00ca 1B68     	 ldr r3,[r3]
 1449 00cc 93F82D30 	 ldrb r3,[r3,#45]
 1450 00d0 1046     	 mov r0,r2
 1451 00d2 1946     	 mov r1,r3
 1452 00d4 FFF7FEFF 	 bl XMC_CCU8_SLICE_GateConfig
 1453              	.L48:
 358:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 359:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Timer increments on external signal */
 360:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_count_event)
 1454              	 .loc 2 360 0
 1455 00d8 7B68     	 ldr r3,[r7,#4]
 1456 00da 1B68     	 ldr r3,[r3]
 1457 00dc 93F82E30 	 ldrb r3,[r3,#46]
 1458 00e0 002B     	 cmp r3,#0
 1459 00e2 09D0     	 beq .L49
 361:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 362:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_CountConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_count_event)
 1460              	 .loc 2 362 0
 1461 00e4 7B68     	 ldr r3,[r7,#4]
 1462 00e6 9A68     	 ldr r2,[r3,#8]
 1463 00e8 7B68     	 ldr r3,[r7,#4]
 1464 00ea 1B68     	 ldr r3,[r3]
 1465 00ec 93F82E30 	 ldrb r3,[r3,#46]
 1466 00f0 1046     	 mov r0,r2
 1467 00f2 1946     	 mov r1,r3
 1468 00f4 FFF7FEFF 	 bl XMC_CCU8_SLICE_CountConfig
 1469              	.L49:
 363:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 364:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Timer gets loaded with compare register value or period register value on external signal */
 365:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_load_event)
 1470              	 .loc 2 365 0
 1471 00f8 7B68     	 ldr r3,[r7,#4]
 1472 00fa 1B68     	 ldr r3,[r3]
 1473 00fc 93F82F30 	 ldrb r3,[r3,#47]
 1474 0100 002B     	 cmp r3,#0
 1475 0102 13D0     	 beq .L50
 366:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 367:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_LoadConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_load_event);
 1476              	 .loc 2 367 0
 1477 0104 7B68     	 ldr r3,[r7,#4]
 1478 0106 9A68     	 ldr r2,[r3,#8]
 1479 0108 7B68     	 ldr r3,[r7,#4]
 1480 010a 1B68     	 ldr r3,[r3]
 1481 010c 93F82F30 	 ldrb r3,[r3,#47]
 1482 0110 1046     	 mov r0,r2
 1483 0112 1946     	 mov r1,r3
 1484 0114 FFF7FEFF 	 bl XMC_CCU8_SLICE_LoadConfig
 368:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_LoadSelector(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_load_select
 1485              	 .loc 2 368 0
 1486 0118 7B68     	 ldr r3,[r7,#4]
 1487 011a 9A68     	 ldr r2,[r3,#8]
 1488 011c 7B68     	 ldr r3,[r7,#4]
 1489 011e 1B68     	 ldr r3,[r3]
 1490 0120 93F83030 	 ldrb r3,[r3,#48]
 1491 0124 1046     	 mov r0,r2
 1492 0126 1946     	 mov r1,r3
 1493 0128 FFF7FEFF 	 bl XMC_CCU8_SLICE_LoadSelector
 1494              	.L50:
 369:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 370:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal PWM signal (ST bit) output gets modulated by external signal */
 371:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_mod_event)
 1495              	 .loc 2 371 0
 1496 012c 7B68     	 ldr r3,[r7,#4]
 1497 012e 1B68     	 ldr r3,[r3]
 1498 0130 93F83130 	 ldrb r3,[r3,#49]
 1499 0134 002B     	 cmp r3,#0
 1500 0136 11D0     	 beq .L51
 372:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 373:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_ModulationConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_mod_eve
 1501              	 .loc 2 373 0
 1502 0138 7B68     	 ldr r3,[r7,#4]
 1503 013a 9868     	 ldr r0,[r3,#8]
 1504 013c 7B68     	 ldr r3,[r7,#4]
 1505 013e 1B68     	 ldr r3,[r3]
 1506 0140 93F83110 	 ldrb r1,[r3,#49]
 374:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_mode, XMC_CCU8_SLICE_MODULATION
 1507              	 .loc 2 374 0
 1508 0144 7B68     	 ldr r3,[r7,#4]
 1509 0146 1B68     	 ldr r3,[r3]
 373:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_mode, XMC_CCU8_SLICE_MODULATION
 1510              	 .loc 2 373 0
 1511 0148 93F83220 	 ldrb r2,[r3,#50]
 375:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_sync);
 1512              	 .loc 2 375 0
 1513 014c 7B68     	 ldr r3,[r7,#4]
 1514 014e 1B68     	 ldr r3,[r3]
 373:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_mode, XMC_CCU8_SLICE_MODULATION
 1515              	 .loc 2 373 0
 1516 0150 93F83330 	 ldrb r3,[r3,#51]
 1517 0154 0093     	 str r3,[sp]
 1518 0156 0323     	 movs r3,#3
 1519 0158 FFF7FEFF 	 bl XMC_CCU8_SLICE_ModulationConfig
 1520              	.L51:
 376:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 377:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 378:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* PWM signal (ST bit) output gets modulated by external signal */
 379:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_2 == handle_ptr->config_ptr->ext_trap_event)
 1521              	 .loc 2 379 0
 1522 015c 7B68     	 ldr r3,[r7,#4]
 1523 015e 1B68     	 ldr r3,[r3]
 1524 0160 93F83730 	 ldrb r3,[r3,#55]
 1525 0164 032B     	 cmp r3,#3
 1526 0166 1AD1     	 bne .L52
 380:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 381:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_TrapConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_trap_exit,
 1527              	 .loc 2 381 0
 1528 0168 7B68     	 ldr r3,[r7,#4]
 1529 016a 9968     	 ldr r1,[r3,#8]
 1530 016c 7B68     	 ldr r3,[r7,#4]
 1531 016e 1B68     	 ldr r3,[r3]
 1532 0170 93F83920 	 ldrb r2,[r3,#57]
 382:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_trap_sync);
 1533              	 .loc 2 382 0
 1534 0174 7B68     	 ldr r3,[r7,#4]
 1535 0176 1B68     	 ldr r3,[r3]
 381:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_trap_sync);
 1536              	 .loc 2 381 0
 1537 0178 93F83830 	 ldrb r3,[r3,#56]
 1538 017c 0846     	 mov r0,r1
 1539 017e 1146     	 mov r1,r2
 1540 0180 1A46     	 mov r2,r3
 1541 0182 FFF7FEFF 	 bl XMC_CCU8_SLICE_TrapConfig
 383:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if ((bool) true == handle_ptr->config_ptr->ext_trap_enable)
 1542              	 .loc 2 383 0
 1543 0186 7B68     	 ldr r3,[r7,#4]
 1544 0188 1B68     	 ldr r3,[r3]
 1545 018a 93F83630 	 ldrb r3,[r3,#54]
 1546 018e 002B     	 cmp r3,#0
 1547 0190 05D0     	 beq .L52
 384:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 385:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_EnableTrap(
 1548              	 .loc 2 385 0
 1549 0192 7B68     	 ldr r3,[r7,#4]
 1550 0194 9B68     	 ldr r3,[r3,#8]
 1551 0196 1846     	 mov r0,r3
 1552 0198 0F21     	 movs r1,#15
 1553 019a FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
 1554              	.L52:
 386:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           handle_ptr->ccu8_slice_ptr,
 387:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           (uint32_t)(XMC_CCU8_SLICE_OUTPUT_0 | XMC_CCU8_SLICE_OUTPUT_1 | XMC_CCU8_SLICE_OUTPUT_2 | 
 388:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 		  );
 389:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 390:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 391:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 392:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_override_edge_event) || (XMC_CCU8_S
 1555              	 .loc 2 392 0
 1556 019e 7B68     	 ldr r3,[r7,#4]
 1557 01a0 1B68     	 ldr r3,[r3]
 1558 01a2 93F83430 	 ldrb r3,[r3,#52]
 1559 01a6 002B     	 cmp r3,#0
 1560 01a8 05D1     	 bne .L53
 393:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       != handle_ptr->config_ptr->ext_override_level_event))
 1561              	 .loc 2 393 0 discriminator 1
 1562 01aa 7B68     	 ldr r3,[r7,#4]
 1563 01ac 1B68     	 ldr r3,[r3]
 1564 01ae 93F83530 	 ldrb r3,[r3,#53]
 392:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       != handle_ptr->config_ptr->ext_override_level_event))
 1565              	 .loc 2 392 0 discriminator 1
 1566 01b2 002B     	 cmp r3,#0
 1567 01b4 11D0     	 beq .L44
 1568              	.L53:
 394:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 395:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(handle_ptr->ccu8_slice_ptr,
 1569              	 .loc 2 395 0
 1570 01b6 7B68     	 ldr r3,[r7,#4]
 1571 01b8 9968     	 ldr r1,[r3,#8]
 396:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1572              	 .loc 2 396 0
 1573 01ba 7B68     	 ldr r3,[r7,#4]
 1574 01bc 1B68     	 ldr r3,[r3]
 395:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1575              	 .loc 2 395 0
 1576 01be 1A6A     	 ldr r2,[r3,#32]
 397:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event2_config_ptr);
 1577              	 .loc 2 397 0
 1578 01c0 7B68     	 ldr r3,[r7,#4]
 1579 01c2 1B68     	 ldr r3,[r3]
 395:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1580              	 .loc 2 395 0
 1581 01c4 5B6A     	 ldr r3,[r3,#36]
 1582 01c6 0846     	 mov r0,r1
 1583 01c8 1146     	 mov r1,r2
 1584 01ca 1A46     	 mov r2,r3
 1585 01cc FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 398:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StatusBitOverrideConfig(handle_ptr->ccu8_slice_ptr);
 1586              	 .loc 2 398 0
 1587 01d0 7B68     	 ldr r3,[r7,#4]
 1588 01d2 9B68     	 ldr r3,[r3,#8]
 1589 01d4 1846     	 mov r0,r3
 1590 01d6 FFF7FEFF 	 bl XMC_CCU8_SLICE_StatusBitOverrideConfig
 1591              	.L44:
 399:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 400:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 401:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 1592              	 .loc 2 401 0
 1593 01da 0837     	 adds r7,r7,#8
 1594              	.LCFI102:
 1595              	 .cfi_def_cfa_offset 8
 1596 01dc BD46     	 mov sp,r7
 1597              	.LCFI103:
 1598              	 .cfi_def_cfa_register 13
 1599              	 
 1600 01de 80BD     	 pop {r7,pc}
 1601              	 .cfi_endproc
 1602              	.LFE244:
 1604              	 .section .text.PWM_CCU8_Start,"ax",%progbits
 1605              	 .align 2
 1606              	 .global PWM_CCU8_Start
 1607              	 .thumb
 1608              	 .thumb_func
 1610              	PWM_CCU8_Start:
 1611              	.LFB245:
 402:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 403:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Starts the CCU8_CC8 slice. This needs to be called even if external start is configured.*/
 404:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_Start(PWM_CCU8_t* handle_ptr)
 405:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1612              	 .loc 2 405 0
 1613              	 .cfi_startproc
 1614              	 
 1615              	 
 1616 0000 80B5     	 push {r7,lr}
 1617              	.LCFI104:
 1618              	 .cfi_def_cfa_offset 8
 1619              	 .cfi_offset 7,-8
 1620              	 .cfi_offset 14,-4
 1621 0002 84B0     	 sub sp,sp,#16
 1622              	.LCFI105:
 1623              	 .cfi_def_cfa_offset 24
 1624 0004 00AF     	 add r7,sp,#0
 1625              	.LCFI106:
 1626              	 .cfi_def_cfa_register 7
 1627 0006 7860     	 str r0,[r7,#4]
 406:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 407:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 408:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1628              	 .loc 2 408 0
 1629 0008 0123     	 movs r3,#1
 1630 000a FB73     	 strb r3,[r7,#15]
 409:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_Start:handle_ptr NULL", (handle_ptr != NULL));
 410:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((PWM_CCU8_STATE_INITIALIZED == handle_ptr->state) || (PWM_CCU8_STATE_STOPPED == handle_ptr->s
 1631              	 .loc 2 410 0
 1632 000c 7B68     	 ldr r3,[r7,#4]
 1633 000e 1B7F     	 ldrb r3,[r3,#28]
 1634 0010 012B     	 cmp r3,#1
 1635 0012 03D0     	 beq .L56
 1636              	 .loc 2 410 0 is_stmt 0 discriminator 1
 1637 0014 7B68     	 ldr r3,[r7,#4]
 1638 0016 1B7F     	 ldrb r3,[r3,#28]
 1639 0018 032B     	 cmp r3,#3
 1640 001a 17D1     	 bne .L57
 1641              	.L56:
 411:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 412:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* clear IDLE mode for the slice; Start timer */
 413:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_EnableClock(handle_ptr->ccu8_module_ptr, handle_ptr->slice_number);
 1642              	 .loc 2 413 0 is_stmt 1
 1643 001c 7B68     	 ldr r3,[r7,#4]
 1644 001e 5A68     	 ldr r2,[r3,#4]
 1645 0020 7B68     	 ldr r3,[r7,#4]
 1646 0022 5B7B     	 ldrb r3,[r3,#13]
 1647 0024 1046     	 mov r0,r2
 1648 0026 1946     	 mov r1,r3
 1649 0028 FFF7FEFF 	 bl XMC_CCU8_EnableClock
 414:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 415:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (XMC_CCU8_SLICE_EVENT_NONE == handle_ptr->config_ptr->ext_start_event)
 1650              	 .loc 2 415 0
 1651 002c 7B68     	 ldr r3,[r7,#4]
 1652 002e 1B68     	 ldr r3,[r3]
 1653 0030 93F82830 	 ldrb r3,[r3,#40]
 1654 0034 002B     	 cmp r3,#0
 1655 0036 04D1     	 bne .L58
 416:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 417:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_StartTimer(handle_ptr->ccu8_slice_ptr);
 1656              	 .loc 2 417 0
 1657 0038 7B68     	 ldr r3,[r7,#4]
 1658 003a 9B68     	 ldr r3,[r3,#8]
 1659 003c 1846     	 mov r0,r3
 1660 003e FFF7FEFF 	 bl XMC_CCU8_SLICE_StartTimer
 1661              	.L58:
 418:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 419:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 420:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     handle_ptr->state = PWM_CCU8_STATE_RUNNING;
 1662              	 .loc 2 420 0
 1663 0042 7B68     	 ldr r3,[r7,#4]
 1664 0044 0222     	 movs r2,#2
 1665 0046 1A77     	 strb r2,[r3,#28]
 421:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status = PWM_CCU8_STATUS_SUCCESS;
 1666              	 .loc 2 421 0
 1667 0048 0023     	 movs r3,#0
 1668 004a FB73     	 strb r3,[r7,#15]
 1669              	.L57:
 422:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Start:start PWM");
 423:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 424:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 1670              	 .loc 2 424 0
 1671 004c FB7B     	 ldrb r3,[r7,#15]
 425:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_Start() api */
 1672              	 .loc 2 425 0
 1673 004e 1846     	 mov r0,r3
 1674 0050 1037     	 adds r7,r7,#16
 1675              	.LCFI107:
 1676              	 .cfi_def_cfa_offset 8
 1677 0052 BD46     	 mov sp,r7
 1678              	.LCFI108:
 1679              	 .cfi_def_cfa_register 13
 1680              	 
 1681 0054 80BD     	 pop {r7,pc}
 1682              	 .cfi_endproc
 1683              	.LFE245:
 1685 0056 00BF     	 .section .text.PWM_CCU8_Stop,"ax",%progbits
 1686              	 .align 2
 1687              	 .global PWM_CCU8_Stop
 1688              	 .thumb
 1689              	 .thumb_func
 1691              	PWM_CCU8_Stop:
 1692              	.LFB246:
 426:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 427:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Stops the CCU8_CC8 slice. */
 428:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_Stop(PWM_CCU8_t* handle_ptr)
 429:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1693              	 .loc 2 429 0
 1694              	 .cfi_startproc
 1695              	 
 1696              	 
 1697 0000 80B5     	 push {r7,lr}
 1698              	.LCFI109:
 1699              	 .cfi_def_cfa_offset 8
 1700              	 .cfi_offset 7,-8
 1701              	 .cfi_offset 14,-4
 1702 0002 84B0     	 sub sp,sp,#16
 1703              	.LCFI110:
 1704              	 .cfi_def_cfa_offset 24
 1705 0004 00AF     	 add r7,sp,#0
 1706              	.LCFI111:
 1707              	 .cfi_def_cfa_register 7
 1708 0006 7860     	 str r0,[r7,#4]
 430:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 431:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 432:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1709              	 .loc 2 432 0
 1710 0008 0123     	 movs r3,#1
 1711 000a FB73     	 strb r3,[r7,#15]
 433:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_Stop:handle_ptr NULL", (handle_ptr != NULL));
 434:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 1712              	 .loc 2 434 0
 1713 000c 7B68     	 ldr r3,[r7,#4]
 1714 000e 1B7F     	 ldrb r3,[r3,#28]
 1715 0010 002B     	 cmp r3,#0
 1716 0012 0ED0     	 beq .L61
 435:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 436:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StopTimer(handle_ptr->ccu8_slice_ptr);
 1717              	 .loc 2 436 0
 1718 0014 7B68     	 ldr r3,[r7,#4]
 1719 0016 9B68     	 ldr r3,[r3,#8]
 1720 0018 1846     	 mov r0,r3
 1721 001a FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 437:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_ClearTimer(handle_ptr->ccu8_slice_ptr);
 1722              	 .loc 2 437 0
 1723 001e 7B68     	 ldr r3,[r7,#4]
 1724 0020 9B68     	 ldr r3,[r3,#8]
 1725 0022 1846     	 mov r0,r3
 1726 0024 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearTimer
 438:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 439:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     handle_ptr->state = PWM_CCU8_STATE_STOPPED;
 1727              	 .loc 2 439 0
 1728 0028 7B68     	 ldr r3,[r7,#4]
 1729 002a 0322     	 movs r2,#3
 1730 002c 1A77     	 strb r2,[r3,#28]
 440:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status = PWM_CCU8_STATUS_SUCCESS;
 1731              	 .loc 2 440 0
 1732 002e 0023     	 movs r3,#0
 1733 0030 FB73     	 strb r3,[r7,#15]
 1734              	.L61:
 441:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Stop:stop PWM");
 442:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 443:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 1735              	 .loc 2 443 0
 1736 0032 FB7B     	 ldrb r3,[r7,#15]
 444:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 445:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_Stop() api */
 1737              	 .loc 2 445 0
 1738 0034 1846     	 mov r0,r3
 1739 0036 1037     	 adds r7,r7,#16
 1740              	.LCFI112:
 1741              	 .cfi_def_cfa_offset 8
 1742 0038 BD46     	 mov sp,r7
 1743              	.LCFI113:
 1744              	 .cfi_def_cfa_register 13
 1745              	 
 1746 003a 80BD     	 pop {r7,pc}
 1747              	 .cfi_endproc
 1748              	.LFE246:
 1750              	 .section .text.PWM_CCU8_GetTimerValue,"ax",%progbits
 1751              	 .align 2
 1752              	 .global PWM_CCU8_GetTimerValue
 1753              	 .thumb
 1754              	 .thumb_func
 1756              	PWM_CCU8_GetTimerValue:
 1757              	.LFB247:
 446:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 447:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Gets the timer value of  CCU8_CC8 slice. */
 448:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** uint32_t PWM_CCU8_GetTimerValue(PWM_CCU8_t* handle_ptr)
 449:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1758              	 .loc 2 449 0
 1759              	 .cfi_startproc
 1760              	 
 1761              	 
 1762 0000 80B5     	 push {r7,lr}
 1763              	.LCFI114:
 1764              	 .cfi_def_cfa_offset 8
 1765              	 .cfi_offset 7,-8
 1766              	 .cfi_offset 14,-4
 1767 0002 84B0     	 sub sp,sp,#16
 1768              	.LCFI115:
 1769              	 .cfi_def_cfa_offset 24
 1770 0004 00AF     	 add r7,sp,#0
 1771              	.LCFI116:
 1772              	 .cfi_def_cfa_register 7
 1773 0006 7860     	 str r0,[r7,#4]
 450:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t timer_value;
 451:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_GetTimerValue:handle_ptr NULL", (handle_ptr != NULL));
 452:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   timer_value = (uint32_t) XMC_CCU8_SLICE_GetTimerValue(handle_ptr->ccu8_slice_ptr);
 1774              	 .loc 2 452 0
 1775 0008 7B68     	 ldr r3,[r7,#4]
 1776 000a 9B68     	 ldr r3,[r3,#8]
 1777 000c 1846     	 mov r0,r3
 1778 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerValue
 1779 0012 0346     	 mov r3,r0
 1780 0014 FB60     	 str r3,[r7,#12]
 453:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_GetTimerValue:timer value");
 454:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (timer_value);
 1781              	 .loc 2 454 0
 1782 0016 FB68     	 ldr r3,[r7,#12]
 455:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_GetTimerValue() api */
 1783              	 .loc 2 455 0
 1784 0018 1846     	 mov r0,r3
 1785 001a 1037     	 adds r7,r7,#16
 1786              	.LCFI117:
 1787              	 .cfi_def_cfa_offset 8
 1788 001c BD46     	 mov sp,r7
 1789              	.LCFI118:
 1790              	 .cfi_def_cfa_register 13
 1791              	 
 1792 001e 80BD     	 pop {r7,pc}
 1793              	 .cfi_endproc
 1794              	.LFE247:
 1796              	 .section .text.PWM_CCU8_GetTimerStatus,"ax",%progbits
 1797              	 .align 2
 1798              	 .global PWM_CCU8_GetTimerStatus
 1799              	 .thumb
 1800              	 .thumb_func
 1802              	PWM_CCU8_GetTimerStatus:
 1803              	.LFB248:
 456:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 457:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Gets the status of  CCU8_CC8 slice. */
 458:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** bool PWM_CCU8_GetTimerStatus(PWM_CCU8_t* handle_ptr)
 459:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1804              	 .loc 2 459 0
 1805              	 .cfi_startproc
 1806              	 
 1807              	 
 1808 0000 80B5     	 push {r7,lr}
 1809              	.LCFI119:
 1810              	 .cfi_def_cfa_offset 8
 1811              	 .cfi_offset 7,-8
 1812              	 .cfi_offset 14,-4
 1813 0002 84B0     	 sub sp,sp,#16
 1814              	.LCFI120:
 1815              	 .cfi_def_cfa_offset 24
 1816 0004 00AF     	 add r7,sp,#0
 1817              	.LCFI121:
 1818              	 .cfi_def_cfa_register 7
 1819 0006 7860     	 str r0,[r7,#4]
 460:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   bool status_timer;
 461:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_GetTimerStatus:handle_ptr NULL", (handle_ptr != NULL));
 462:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status_timer = XMC_CCU8_SLICE_IsTimerRunning(handle_ptr->ccu8_slice_ptr);
 1820              	 .loc 2 462 0
 1821 0008 7B68     	 ldr r3,[r7,#4]
 1822 000a 9B68     	 ldr r3,[r3,#8]
 1823 000c 1846     	 mov r0,r3
 1824 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_IsTimerRunning
 1825 0012 0346     	 mov r3,r0
 1826 0014 FB73     	 strb r3,[r7,#15]
 463:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status_timer);
 1827              	 .loc 2 463 0
 1828 0016 FB7B     	 ldrb r3,[r7,#15]
 464:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 465:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_GetStatus() api */
 1829              	 .loc 2 465 0
 1830 0018 1846     	 mov r0,r3
 1831 001a 1037     	 adds r7,r7,#16
 1832              	.LCFI122:
 1833              	 .cfi_def_cfa_offset 8
 1834 001c BD46     	 mov sp,r7
 1835              	.LCFI123:
 1836              	 .cfi_def_cfa_register 13
 1837              	 
 1838 001e 80BD     	 pop {r7,pc}
 1839              	 .cfi_endproc
 1840              	.LFE248:
 1842              	 .section .text.PWM_CCU8_SetFreqSymmetric,"ax",%progbits
 1843              	 .align 2
 1844              	 .global PWM_CCU8_SetFreqSymmetric
 1845              	 .thumb
 1846              	 .thumb_func
 1848              	PWM_CCU8_SetFreqSymmetric:
 1849              	.LFB249:
 466:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 467:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 468:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency for CCU8_CC8 slice Symmetric Mode. */
 469:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqSymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_hz)
 470:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1850              	 .loc 2 470 0
 1851              	 .cfi_startproc
 1852              	 
 1853              	 
 1854 0000 80B5     	 push {r7,lr}
 1855              	.LCFI124:
 1856              	 .cfi_def_cfa_offset 8
 1857              	 .cfi_offset 7,-8
 1858              	 .cfi_offset 14,-4
 1859 0002 88B0     	 sub sp,sp,#32
 1860              	.LCFI125:
 1861              	 .cfi_def_cfa_offset 40
 1862 0004 00AF     	 add r7,sp,#0
 1863              	.LCFI126:
 1864              	 .cfi_def_cfa_register 7
 1865 0006 7860     	 str r0,[r7,#4]
 1866 0008 3960     	 str r1,[r7]
 471:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 472:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 473:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 474:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t duty_ch1;
 475:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t duty_ch2;
 476:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint16_t compare_ch1;
 477:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint16_t compare_ch2;
 478:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 479:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1867              	 .loc 2 479 0
 1868 000a 0123     	 movs r3,#1
 1869 000c FB77     	 strb r3,[r7,#31]
 480:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 1870              	 .loc 2 480 0
 1871 000e 0023     	 movs r3,#0
 1872 0010 7B61     	 str r3,[r7,#20]
 481:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqSymmetric:handle_ptr NULL", (handle_ptr != NULL));
 482:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 1873              	 .loc 2 482 0
 1874 0012 7B68     	 ldr r3,[r7,#4]
 1875 0014 1B7F     	 ldrb r3,[r3,#28]
 1876 0016 002B     	 cmp r3,#0
 1877 0018 6BD0     	 beq .L68
 483:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 484:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 1878              	 .loc 2 484 0
 1879 001a 3B68     	 ldr r3,[r7]
 1880 001c 002B     	 cmp r3,#0
 1881 001e 68D0     	 beq .L68
 485:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 486:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetPwmFreq:cannot set frequency 0Hz");
 487:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 488:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 489:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 490:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 1882              	 .loc 2 490 0
 1883 0020 7B68     	 ldr r3,[r7,#4]
 1884 0022 1B6A     	 ldr r3,[r3,#32]
 1885 0024 7B61     	 str r3,[r7,#20]
 491:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 1886              	 .loc 2 491 0
 1887 0026 7A69     	 ldr r2,[r7,#20]
 1888 0028 3B68     	 ldr r3,[r7]
 1889 002a B2FBF3F3 	 udiv r3,r2,r3
 1890 002e BB61     	 str r3,[r7,#24]
 492:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 493:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 1891              	 .loc 2 493 0
 1892 0030 7B68     	 ldr r3,[r7,#4]
 1893 0032 1B68     	 ldr r3,[r3]
 1894 0034 9B6C     	 ldr r3,[r3,#72]
 1895 0036 1B78     	 ldrb r3,[r3]
 1896 0038 03F00103 	 and r3,r3,#1
 1897 003c DBB2     	 uxtb r3,r3
 1898 003e 002B     	 cmp r3,#0
 1899 0040 02D0     	 beq .L69
 494:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 495:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = period >> 1U;/*divide by 2*/
 1900              	 .loc 2 495 0
 1901 0042 BB69     	 ldr r3,[r7,#24]
 1902 0044 5B08     	 lsrs r3,r3,#1
 1903 0046 BB61     	 str r3,[r7,#24]
 1904              	.L69:
 496:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 497:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 498:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 1905              	 .loc 2 498 0
 1906 0048 BB69     	 ldr r3,[r7,#24]
 1907 004a 002B     	 cmp r3,#0
 1908 004c 51D0     	 beq .L68
 1909              	 .loc 2 498 0 is_stmt 0 discriminator 1
 1910 004e BB69     	 ldr r3,[r7,#24]
 1911 0050 B3F5803F 	 cmp r3,#65536
 1912 0054 4DD2     	 bcs .L68
 499:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 500:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         /*Calculate the current duty cycle in no-timer concatenation mode*/
 501:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = handle_ptr->sym_duty1;
 1913              	 .loc 2 501 0 is_stmt 1
 1914 0056 7B68     	 ldr r3,[r7,#4]
 1915 0058 5B6A     	 ldr r3,[r3,#36]
 1916 005a 3B61     	 str r3,[r7,#16]
 502:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = handle_ptr->sym_duty2;
 1917              	 .loc 2 502 0
 1918 005c 7B68     	 ldr r3,[r7,#4]
 1919 005e 9B6A     	 ldr r3,[r3,#40]
 1920 0060 FB60     	 str r3,[r7,#12]
 503:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 504:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = (PWM_CCU8_DUTY_FULL_SCALE - duty_ch1);
 1921              	 .loc 2 504 0
 1922 0062 3B69     	 ldr r3,[r7,#16]
 1923 0064 C3F51C53 	 rsb r3,r3,#9984
 1924 0068 1033     	 adds r3,r3,#16
 1925 006a 3B61     	 str r3,[r7,#16]
 505:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = duty_ch1 * period;
 1926              	 .loc 2 505 0
 1927 006c 3B69     	 ldr r3,[r7,#16]
 1928 006e BA69     	 ldr r2,[r7,#24]
 1929 0070 02FB03F3 	 mul r3,r2,r3
 1930 0074 3B61     	 str r3,[r7,#16]
 506:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = duty_ch1 / PWM_CCU8_DUTY_FULL_SCALE;
 1931              	 .loc 2 506 0
 1932 0076 3B69     	 ldr r3,[r7,#16]
 1933 0078 204A     	 ldr r2,.L71
 1934 007a A2FB0323 	 umull r2,r3,r2,r3
 1935 007e 5B0B     	 lsrs r3,r3,#13
 1936 0080 3B61     	 str r3,[r7,#16]
 507:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 508:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = (PWM_CCU8_DUTY_FULL_SCALE - duty_ch2);
 1937              	 .loc 2 508 0
 1938 0082 FB68     	 ldr r3,[r7,#12]
 1939 0084 C3F51C53 	 rsb r3,r3,#9984
 1940 0088 1033     	 adds r3,r3,#16
 1941 008a FB60     	 str r3,[r7,#12]
 509:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = duty_ch2 * period;
 1942              	 .loc 2 509 0
 1943 008c FB68     	 ldr r3,[r7,#12]
 1944 008e BA69     	 ldr r2,[r7,#24]
 1945 0090 02FB03F3 	 mul r3,r2,r3
 1946 0094 FB60     	 str r3,[r7,#12]
 510:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = duty_ch2 / PWM_CCU8_DUTY_FULL_SCALE;
 1947              	 .loc 2 510 0
 1948 0096 FB68     	 ldr r3,[r7,#12]
 1949 0098 184A     	 ldr r2,.L71
 1950 009a A2FB0323 	 umull r2,r3,r2,r3
 1951 009e 5B0B     	 lsrs r3,r3,#13
 1952 00a0 FB60     	 str r3,[r7,#12]
 511:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 512:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = (uint16_t) duty_ch1;
 1953              	 .loc 2 512 0
 1954 00a2 3B69     	 ldr r3,[r7,#16]
 1955 00a4 7B81     	 strh r3,[r7,#10]
 513:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = (uint16_t) duty_ch2;
 1956              	 .loc 2 513 0
 1957 00a6 FB68     	 ldr r3,[r7,#12]
 1958 00a8 3B81     	 strh r3,[r7,#8]
 514:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 515:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 1959              	 .loc 2 515 0
 1960 00aa 7B68     	 ldr r3,[r7,#4]
 1961 00ac 9A68     	 ldr r2,[r3,#8]
 1962 00ae BB69     	 ldr r3,[r7,#24]
 1963 00b0 9BB2     	 uxth r3,r3
 1964 00b2 013B     	 subs r3,r3,#1
 1965 00b4 9BB2     	 uxth r3,r3
 1966 00b6 1046     	 mov r0,r2
 1967 00b8 1946     	 mov r1,r3
 1968 00ba FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 516:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 1969              	 .loc 2 516 0
 1970 00be 7B68     	 ldr r3,[r7,#4]
 1971 00c0 9A68     	 ldr r2,[r3,#8]
 1972 00c2 7B89     	 ldrh r3,[r7,#10]
 1973 00c4 1046     	 mov r0,r2
 1974 00c6 0021     	 movs r1,#0
 1975 00c8 1A46     	 mov r2,r3
 1976 00ca FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 517:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 1977              	 .loc 2 517 0
 1978 00ce 7B68     	 ldr r3,[r7,#4]
 1979 00d0 9A68     	 ldr r2,[r3,#8]
 1980 00d2 3B89     	 ldrh r3,[r7,#8]
 1981 00d4 1046     	 mov r0,r2
 1982 00d6 0121     	 movs r1,#1
 1983 00d8 1A46     	 mov r2,r3
 1984 00da FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 518:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 1985              	 .loc 2 518 0
 1986 00de 7B68     	 ldr r3,[r7,#4]
 1987 00e0 5A68     	 ldr r2,[r3,#4]
 1988 00e2 7B68     	 ldr r3,[r7,#4]
 1989 00e4 1B69     	 ldr r3,[r3,#16]
 1990 00e6 1046     	 mov r0,r2
 1991 00e8 1946     	 mov r1,r3
 1992 00ea FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 519:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetPwmFreq:frequency set");
 520:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 1993              	 .loc 2 520 0
 1994 00ee 0023     	 movs r3,#0
 1995 00f0 FB77     	 strb r3,[r7,#31]
 1996              	.L68:
 521:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 522:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 523:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 524:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 1997              	 .loc 2 524 0
 1998 00f2 FB7F     	 ldrb r3,[r7,#31]
 525:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 526:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_SetFreqSymmetric() api */
 1999              	 .loc 2 526 0
 2000 00f4 1846     	 mov r0,r3
 2001 00f6 2037     	 adds r7,r7,#32
 2002              	.LCFI127:
 2003              	 .cfi_def_cfa_offset 8
 2004 00f8 BD46     	 mov sp,r7
 2005              	.LCFI128:
 2006              	 .cfi_def_cfa_register 13
 2007              	 
 2008 00fa 80BD     	 pop {r7,pc}
 2009              	.L72:
 2010              	 .align 2
 2011              	.L71:
 2012 00fc 5917B7D1 	 .word -776530087
 2013              	 .cfi_endproc
 2014              	.LFE249:
 2016              	 .section .text.PWM_CCU8_SetDutyCycleSymmetric,"ax",%progbits
 2017              	 .align 2
 2018              	 .global PWM_CCU8_SetDutyCycleSymmetric
 2019              	 .thumb
 2020              	 .thumb_func
 2022              	PWM_CCU8_SetDutyCycleSymmetric:
 2023              	.LFB250:
 527:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 528:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 529:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 530:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the duty cycle (uint32_t) for CCU8_CC8 slice. */
 531:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetDutyCycleSymmetric(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_COMPARE_CHA
 532:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                  uint32_t duty_cycle)
 533:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2024              	 .loc 2 533 0
 2025              	 .cfi_startproc
 2026              	 
 2027              	 
 2028 0000 80B5     	 push {r7,lr}
 2029              	.LCFI129:
 2030              	 .cfi_def_cfa_offset 8
 2031              	 .cfi_offset 7,-8
 2032              	 .cfi_offset 14,-4
 2033 0002 88B0     	 sub sp,sp,#32
 2034              	.LCFI130:
 2035              	 .cfi_def_cfa_offset 40
 2036 0004 00AF     	 add r7,sp,#0
 2037              	.LCFI131:
 2038              	 .cfi_def_cfa_register 7
 2039 0006 F860     	 str r0,[r7,#12]
 2040 0008 0B46     	 mov r3,r1
 2041 000a 7A60     	 str r2,[r7,#4]
 2042 000c FB72     	 strb r3,[r7,#11]
 534:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 535:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 536:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare;
 537:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 538:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2043              	 .loc 2 538 0
 2044 000e 0123     	 movs r3,#1
 2045 0010 FB77     	 strb r3,[r7,#31]
 539:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDutyCycleSymmetric:handle_ptr NULL", (handle_ptr != NULL));
 540:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2046              	 .loc 2 540 0
 2047 0012 FB68     	 ldr r3,[r7,#12]
 2048 0014 1B7F     	 ldrb r3,[r3,#28]
 2049 0016 002B     	 cmp r3,#0
 2050 0018 36D0     	 beq .L74
 541:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 542:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* duty cycle has to be in between 0 and 100 */
 543:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if ((duty_cycle > PWM_CCU8_SYM_DUTY_MAX))
 2051              	 .loc 2 543 0
 2052 001a 7B68     	 ldr r3,[r7,#4]
 2053 001c 42F21072 	 movw r2,#10000
 2054 0020 9342     	 cmp r3,r2
 2055 0022 31D8     	 bhi .L74
 544:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 545:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetDutyCycleSymmetric:Cannot set duty cycle > 100%");
 546:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 547:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 548:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 549:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = (uint32_t) XMC_CCU8_SLICE_GetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr) + 1U;
 2056              	 .loc 2 549 0
 2057 0024 FB68     	 ldr r3,[r7,#12]
 2058 0026 9B68     	 ldr r3,[r3,#8]
 2059 0028 1846     	 mov r0,r3
 2060 002a FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerPeriodMatch
 2061 002e 0346     	 mov r3,r0
 2062 0030 0133     	 adds r3,r3,#1
 2063 0032 BB61     	 str r3,[r7,#24]
 550:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 551:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Duty Cycle(symmetric) = ((PR + 1)- CR) / (PR + 1) */
 552:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       compare = ((period * (PWM_CCU8_DUTY_FULL_SCALE - duty_cycle)) / PWM_CCU8_DUTY_FULL_SCALE);
 2064              	 .loc 2 552 0
 2065 0034 7B68     	 ldr r3,[r7,#4]
 2066 0036 C3F51C53 	 rsb r3,r3,#9984
 2067 003a 1033     	 adds r3,r3,#16
 2068 003c BA69     	 ldr r2,[r7,#24]
 2069 003e 02FB03F3 	 mul r3,r2,r3
 2070 0042 144A     	 ldr r2,.L78
 2071 0044 A2FB0323 	 umull r2,r3,r2,r3
 2072 0048 5B0B     	 lsrs r3,r3,#13
 2073 004a 7B61     	 str r3,[r7,#20]
 553:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 554:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, channel, (uint16_t) compare);
 2074              	 .loc 2 554 0
 2075 004c FB68     	 ldr r3,[r7,#12]
 2076 004e 9968     	 ldr r1,[r3,#8]
 2077 0050 7B69     	 ldr r3,[r7,#20]
 2078 0052 9BB2     	 uxth r3,r3
 2079 0054 FA7A     	 ldrb r2,[r7,#11]
 2080 0056 0846     	 mov r0,r1
 2081 0058 1146     	 mov r1,r2
 2082 005a 1A46     	 mov r2,r3
 2083 005c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 555:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2084              	 .loc 2 555 0
 2085 0060 FB68     	 ldr r3,[r7,#12]
 2086 0062 5A68     	 ldr r2,[r3,#4]
 2087 0064 FB68     	 ldr r3,[r7,#12]
 2088 0066 1B69     	 ldr r3,[r3,#16]
 2089 0068 1046     	 mov r0,r2
 2090 006a 1946     	 mov r1,r3
 2091 006c FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 556:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 557:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2092              	 .loc 2 557 0
 2093 0070 FB7A     	 ldrb r3,[r7,#11]
 2094 0072 002B     	 cmp r3,#0
 2095 0074 03D1     	 bne .L75
 558:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 559:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty1 = duty_cycle;
 2096              	 .loc 2 559 0
 2097 0076 FB68     	 ldr r3,[r7,#12]
 2098 0078 7A68     	 ldr r2,[r7,#4]
 2099 007a 5A62     	 str r2,[r3,#36]
 2100 007c 02E0     	 b .L76
 2101              	.L75:
 560:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 561:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 562:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 563:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty2 = duty_cycle;
 2102              	 .loc 2 563 0
 2103 007e FB68     	 ldr r3,[r7,#12]
 2104 0080 7A68     	 ldr r2,[r7,#4]
 2105 0082 9A62     	 str r2,[r3,#40]
 2106              	.L76:
 564:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 565:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 566:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetDutyCycleSymmetric:dutycycle set");
 567:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       status = PWM_CCU8_STATUS_SUCCESS;
 2107              	 .loc 2 567 0
 2108 0084 0023     	 movs r3,#0
 2109 0086 FB77     	 strb r3,[r7,#31]
 2110              	.L74:
 568:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 569:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 570:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2111              	 .loc 2 570 0
 2112 0088 FB7F     	 ldrb r3,[r7,#31]
 571:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_SetDutyCycleSymmetric() api */
 2113              	 .loc 2 571 0
 2114 008a 1846     	 mov r0,r3
 2115 008c 2037     	 adds r7,r7,#32
 2116              	.LCFI132:
 2117              	 .cfi_def_cfa_offset 8
 2118 008e BD46     	 mov sp,r7
 2119              	.LCFI133:
 2120              	 .cfi_def_cfa_register 13
 2121              	 
 2122 0090 80BD     	 pop {r7,pc}
 2123              	.L79:
 2124 0092 00BF     	 .align 2
 2125              	.L78:
 2126 0094 5917B7D1 	 .word -776530087
 2127              	 .cfi_endproc
 2128              	.LFE250:
 2130              	 .section .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric,"ax",%progbits
 2131              	 .align 2
 2132              	 .global PWM_CCU8_SetFreqAndDutyCycleSymmetric
 2133              	 .thumb
 2134              	 .thumb_func
 2136              	PWM_CCU8_SetFreqAndDutyCycleSymmetric:
 2137              	.LFB251:
 572:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 573:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 574:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 575:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency and duty cycle for CCU8_CC8 slice Symmetric Mode. */
 576:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqAndDutyCycleSymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_h
 577:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                         uint32_t duty_ch2)
 578:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2138              	 .loc 2 578 0
 2139              	 .cfi_startproc
 2140              	 
 2141              	 
 2142 0000 80B5     	 push {r7,lr}
 2143              	.LCFI134:
 2144              	 .cfi_def_cfa_offset 8
 2145              	 .cfi_offset 7,-8
 2146              	 .cfi_offset 14,-4
 2147 0002 8AB0     	 sub sp,sp,#40
 2148              	.LCFI135:
 2149              	 .cfi_def_cfa_offset 48
 2150 0004 00AF     	 add r7,sp,#0
 2151              	.LCFI136:
 2152              	 .cfi_def_cfa_register 7
 2153 0006 F860     	 str r0,[r7,#12]
 2154 0008 B960     	 str r1,[r7,#8]
 2155 000a 7A60     	 str r2,[r7,#4]
 2156 000c 3B60     	 str r3,[r7]
 579:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 580:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 581:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 582:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 583:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 584:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 585:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 586:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2157              	 .loc 2 586 0
 2158 000e 0123     	 movs r3,#1
 2159 0010 87F82730 	 strb r3,[r7,#39]
 587:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 2160              	 .loc 2 587 0
 2161 0014 0023     	 movs r3,#0
 2162 0016 FB61     	 str r3,[r7,#28]
 588:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqAndDutyCycleSymmetric:handle_ptr NULL", (handle_ptr != NULL));
 589:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2163              	 .loc 2 589 0
 2164 0018 FB68     	 ldr r3,[r7,#12]
 2165 001a 1B7F     	 ldrb r3,[r3,#28]
 2166 001c 002B     	 cmp r3,#0
 2167 001e 6CD0     	 beq .L81
 590:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 591:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 2168              	 .loc 2 591 0
 2169 0020 BB68     	 ldr r3,[r7,#8]
 2170 0022 002B     	 cmp r3,#0
 2171 0024 69D0     	 beq .L81
 592:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 593:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleSymmetric:cannot set frequency 0Hz");
 594:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 595:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else if ((duty_ch1 > PWM_CCU8_SYM_DUTY_MAX) || (duty_ch2 > PWM_CCU8_SYM_DUTY_MAX))
 2172              	 .loc 2 595 0
 2173 0026 7B68     	 ldr r3,[r7,#4]
 2174 0028 42F21072 	 movw r2,#10000
 2175 002c 9342     	 cmp r3,r2
 2176 002e 64D8     	 bhi .L81
 2177              	 .loc 2 595 0 is_stmt 0 discriminator 1
 2178 0030 3B68     	 ldr r3,[r7]
 2179 0032 42F21072 	 movw r2,#10000
 2180 0036 9342     	 cmp r3,r2
 2181 0038 5FD8     	 bhi .L81
 596:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 597:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleSymmetric:duty > 100%");
 598:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 599:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 600:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 601:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 2182              	 .loc 2 601 0 is_stmt 1
 2183 003a FB68     	 ldr r3,[r7,#12]
 2184 003c 1B6A     	 ldr r3,[r3,#32]
 2185 003e FB61     	 str r3,[r7,#28]
 602:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 2186              	 .loc 2 602 0
 2187 0040 FA69     	 ldr r2,[r7,#28]
 2188 0042 BB68     	 ldr r3,[r7,#8]
 2189 0044 B2FBF3F3 	 udiv r3,r2,r3
 2190 0048 3B62     	 str r3,[r7,#32]
 603:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 604:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 2191              	 .loc 2 604 0
 2192 004a FB68     	 ldr r3,[r7,#12]
 2193 004c 1B68     	 ldr r3,[r3]
 2194 004e 9B6C     	 ldr r3,[r3,#72]
 2195 0050 1B78     	 ldrb r3,[r3]
 2196 0052 03F00103 	 and r3,r3,#1
 2197 0056 DBB2     	 uxtb r3,r3
 2198 0058 002B     	 cmp r3,#0
 2199 005a 02D0     	 beq .L82
 605:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 606:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = period >> 1U;/*divide by 2*/
 2200              	 .loc 2 606 0
 2201 005c 3B6A     	 ldr r3,[r7,#32]
 2202 005e 5B08     	 lsrs r3,r3,#1
 2203 0060 3B62     	 str r3,[r7,#32]
 2204              	.L82:
 607:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 608:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 609:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 2205              	 .loc 2 609 0
 2206 0062 3B6A     	 ldr r3,[r7,#32]
 2207 0064 002B     	 cmp r3,#0
 2208 0066 48D0     	 beq .L81
 2209              	 .loc 2 609 0 is_stmt 0 discriminator 1
 2210 0068 3B6A     	 ldr r3,[r7,#32]
 2211 006a B3F5803F 	 cmp r3,#65536
 2212 006e 44D2     	 bcs .L81
 610:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 611:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         /*Calculate the current duty cycle in no-timer concatenation mode*/
 612:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = ((period * (PWM_CCU8_DUTY_FULL_SCALE - duty_ch1)) / PWM_CCU8_DUTY_FULL_SCALE)
 2213              	 .loc 2 612 0 is_stmt 1
 2214 0070 7B68     	 ldr r3,[r7,#4]
 2215 0072 C3F51C53 	 rsb r3,r3,#9984
 2216 0076 1033     	 adds r3,r3,#16
 2217 0078 3A6A     	 ldr r2,[r7,#32]
 2218 007a 02FB03F3 	 mul r3,r2,r3
 2219 007e 224A     	 ldr r2,.L84
 2220 0080 A2FB0323 	 umull r2,r3,r2,r3
 2221 0084 5B0B     	 lsrs r3,r3,#13
 2222 0086 BB61     	 str r3,[r7,#24]
 613:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = ((period * (PWM_CCU8_DUTY_FULL_SCALE - duty_ch2)) / PWM_CCU8_DUTY_FULL_SCALE)
 2223              	 .loc 2 613 0
 2224 0088 3B68     	 ldr r3,[r7]
 2225 008a C3F51C53 	 rsb r3,r3,#9984
 2226 008e 1033     	 adds r3,r3,#16
 2227 0090 3A6A     	 ldr r2,[r7,#32]
 2228 0092 02FB03F3 	 mul r3,r2,r3
 2229 0096 1C4A     	 ldr r2,.L84
 2230 0098 A2FB0323 	 umull r2,r3,r2,r3
 2231 009c 5B0B     	 lsrs r3,r3,#13
 2232 009e 7B61     	 str r3,[r7,#20]
 614:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 615:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 2233              	 .loc 2 615 0
 2234 00a0 FB68     	 ldr r3,[r7,#12]
 2235 00a2 9A68     	 ldr r2,[r3,#8]
 2236 00a4 3B6A     	 ldr r3,[r7,#32]
 2237 00a6 9BB2     	 uxth r3,r3
 2238 00a8 013B     	 subs r3,r3,#1
 2239 00aa 9BB2     	 uxth r3,r3
 2240 00ac 1046     	 mov r0,r2
 2241 00ae 1946     	 mov r1,r3
 2242 00b0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 616:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2243              	 .loc 2 616 0
 2244 00b4 FB68     	 ldr r3,[r7,#12]
 2245 00b6 9A68     	 ldr r2,[r3,#8]
 2246 00b8 BB69     	 ldr r3,[r7,#24]
 2247 00ba 9BB2     	 uxth r3,r3
 2248 00bc 1046     	 mov r0,r2
 2249 00be 0021     	 movs r1,#0
 2250 00c0 1A46     	 mov r2,r3
 2251 00c2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 617:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch1);
 618:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2252              	 .loc 2 618 0
 2253 00c6 FB68     	 ldr r3,[r7,#12]
 2254 00c8 9A68     	 ldr r2,[r3,#8]
 2255 00ca 7B69     	 ldr r3,[r7,#20]
 2256 00cc 9BB2     	 uxth r3,r3
 2257 00ce 1046     	 mov r0,r2
 2258 00d0 0121     	 movs r1,#1
 2259 00d2 1A46     	 mov r2,r3
 2260 00d4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 619:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch2);
 620:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2261              	 .loc 2 620 0
 2262 00d8 FB68     	 ldr r3,[r7,#12]
 2263 00da 5A68     	 ldr r2,[r3,#4]
 2264 00dc FB68     	 ldr r3,[r7,#12]
 2265 00de 1B69     	 ldr r3,[r3,#16]
 2266 00e0 1046     	 mov r0,r2
 2267 00e2 1946     	 mov r1,r3
 2268 00e4 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 621:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 622:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty1 = duty_ch1;
 2269              	 .loc 2 622 0
 2270 00e8 FB68     	 ldr r3,[r7,#12]
 2271 00ea 7A68     	 ldr r2,[r7,#4]
 2272 00ec 5A62     	 str r2,[r3,#36]
 623:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty2 = duty_ch2;
 2273              	 .loc 2 623 0
 2274 00ee FB68     	 ldr r3,[r7,#12]
 2275 00f0 3A68     	 ldr r2,[r7]
 2276 00f2 9A62     	 str r2,[r3,#40]
 624:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 625:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleSymmetric:frequency set");
 626:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 2277              	 .loc 2 626 0
 2278 00f4 0023     	 movs r3,#0
 2279 00f6 87F82730 	 strb r3,[r7,#39]
 2280              	.L81:
 627:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 628:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 629:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 630:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2281              	 .loc 2 630 0
 2282 00fa 97F82730 	 ldrb r3,[r7,#39]
 631:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 632:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetFreqAndDutyCycleSymmetric() api */
 2283              	 .loc 2 632 0
 2284 00fe 1846     	 mov r0,r3
 2285 0100 2837     	 adds r7,r7,#40
 2286              	.LCFI137:
 2287              	 .cfi_def_cfa_offset 8
 2288 0102 BD46     	 mov sp,r7
 2289              	.LCFI138:
 2290              	 .cfi_def_cfa_register 13
 2291              	 
 2292 0104 80BD     	 pop {r7,pc}
 2293              	.L85:
 2294 0106 00BF     	 .align 2
 2295              	.L84:
 2296 0108 5917B7D1 	 .word -776530087
 2297              	 .cfi_endproc
 2298              	.LFE251:
 2300              	 .section .text.PWM_CCU8_SetFreqAsymmetric,"ax",%progbits
 2301              	 .align 2
 2302              	 .global PWM_CCU8_SetFreqAsymmetric
 2303              	 .thumb
 2304              	 .thumb_func
 2306              	PWM_CCU8_SetFreqAsymmetric:
 2307              	.LFB252:
 633:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 634:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 635:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 636:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency for CCU8_CC8 slice Asymmetric Mode. */
 637:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqAsymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_hz)
 638:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2308              	 .loc 2 638 0
 2309              	 .cfi_startproc
 2310              	 
 2311              	 
 2312 0000 80B5     	 push {r7,lr}
 2313              	.LCFI139:
 2314              	 .cfi_def_cfa_offset 8
 2315              	 .cfi_offset 7,-8
 2316              	 .cfi_offset 14,-4
 2317 0002 8AB0     	 sub sp,sp,#40
 2318              	.LCFI140:
 2319              	 .cfi_def_cfa_offset 48
 2320 0004 00AF     	 add r7,sp,#0
 2321              	.LCFI141:
 2322              	 .cfi_def_cfa_register 7
 2323 0006 7860     	 str r0,[r7,#4]
 2324 0008 3960     	 str r1,[r7]
 639:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 640:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 641:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 642:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t duty_cycle;
 643:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t shift;
 644:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 645:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 646:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 647:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2325              	 .loc 2 647 0
 2326 000a 0123     	 movs r3,#1
 2327 000c 87F82730 	 strb r3,[r7,#39]
 648:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 2328              	 .loc 2 648 0
 2329 0010 0023     	 movs r3,#0
 2330 0012 3B62     	 str r3,[r7,#32]
 649:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqAsymmetric:handle_ptr NULL", (handle_ptr != NULL));
 650:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2331              	 .loc 2 650 0
 2332 0014 7B68     	 ldr r3,[r7,#4]
 2333 0016 1B7F     	 ldrb r3,[r3,#28]
 2334 0018 002B     	 cmp r3,#0
 2335 001a 00F0AF80 	 beq .L87
 651:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 652:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 2336              	 .loc 2 652 0
 2337 001e 3B68     	 ldr r3,[r7]
 2338 0020 002B     	 cmp r3,#0
 2339 0022 00F0AB80 	 beq .L87
 653:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 654:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetPwmFreq:cannot set frequency 0Hz");
 655:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 656:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 657:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 658:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 2340              	 .loc 2 658 0
 2341 0026 7B68     	 ldr r3,[r7,#4]
 2342 0028 1B6A     	 ldr r3,[r3,#32]
 2343 002a 3B62     	 str r3,[r7,#32]
 659:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 2344              	 .loc 2 659 0
 2345 002c 3A6A     	 ldr r2,[r7,#32]
 2346 002e 3B68     	 ldr r3,[r7]
 2347 0030 B2FBF3F3 	 udiv r3,r2,r3
 2348 0034 FB61     	 str r3,[r7,#28]
 660:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 661:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       duty_cycle = handle_ptr->asym_duty;
 2349              	 .loc 2 661 0
 2350 0036 7B68     	 ldr r3,[r7,#4]
 2351 0038 DB6A     	 ldr r3,[r3,#44]
 2352 003a BB61     	 str r3,[r7,#24]
 662:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       shift = handle_ptr->asym_shift;
 2353              	 .loc 2 662 0
 2354 003c 7B68     	 ldr r3,[r7,#4]
 2355 003e 1B6B     	 ldr r3,[r3,#48]
 2356 0040 7B61     	 str r3,[r7,#20]
 663:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 664:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 2357              	 .loc 2 664 0
 2358 0042 7B68     	 ldr r3,[r7,#4]
 2359 0044 1B68     	 ldr r3,[r3]
 2360 0046 9B6C     	 ldr r3,[r3,#72]
 2361 0048 1B78     	 ldrb r3,[r3]
 2362 004a 03F00103 	 and r3,r3,#1
 2363 004e DBB2     	 uxtb r3,r3
 2364 0050 002B     	 cmp r3,#0
 2365 0052 50D0     	 beq .L88
 665:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 666:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = period >> 1U;/*divide by 2*/
 2366              	 .loc 2 666 0
 2367 0054 FB69     	 ldr r3,[r7,#28]
 2368 0056 5B08     	 lsrs r3,r3,#1
 2369 0058 FB61     	 str r3,[r7,#28]
 667:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 668:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 2370              	 .loc 2 668 0
 2371 005a FB69     	 ldr r3,[r7,#28]
 2372 005c 002B     	 cmp r3,#0
 2373 005e 00F08D80 	 beq .L87
 2374              	 .loc 2 668 0 is_stmt 0 discriminator 1
 2375 0062 FB69     	 ldr r3,[r7,#28]
 2376 0064 B3F5803F 	 cmp r3,#65536
 2377 0068 80F08880 	 bcs .L87
 669:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 670:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = (2U * period * shift);
 2378              	 .loc 2 670 0 is_stmt 1
 2379 006c FB69     	 ldr r3,[r7,#28]
 2380 006e 7A69     	 ldr r2,[r7,#20]
 2381 0070 02FB03F3 	 mul r3,r2,r3
 2382 0074 5B00     	 lsls r3,r3,#1
 2383 0076 3B61     	 str r3,[r7,#16]
 671:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = compare_ch1 / PWM_CCU8_DUTY_FULL_SCALE;
 2384              	 .loc 2 671 0
 2385 0078 3B69     	 ldr r3,[r7,#16]
 2386 007a 434A     	 ldr r2,.L91
 2387 007c A2FB0323 	 umull r2,r3,r2,r3
 2388 0080 5B0B     	 lsrs r3,r3,#13
 2389 0082 3B61     	 str r3,[r7,#16]
 672:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = (2U * period * (PWM_CCU8_DUTY_FULL_SCALE - (shift + duty_cycle)));
 2390              	 .loc 2 672 0
 2391 0084 7A69     	 ldr r2,[r7,#20]
 2392 0086 BB69     	 ldr r3,[r7,#24]
 2393 0088 1344     	 add r3,r3,r2
 2394 008a C3F51C53 	 rsb r3,r3,#9984
 2395 008e 1033     	 adds r3,r3,#16
 2396 0090 FA69     	 ldr r2,[r7,#28]
 2397 0092 02FB03F3 	 mul r3,r2,r3
 2398 0096 5B00     	 lsls r3,r3,#1
 2399 0098 FB60     	 str r3,[r7,#12]
 673:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = compare_ch2 / PWM_CCU8_DUTY_FULL_SCALE;
 2400              	 .loc 2 673 0
 2401 009a FB68     	 ldr r3,[r7,#12]
 2402 009c 3A4A     	 ldr r2,.L91
 2403 009e A2FB0323 	 umull r2,r3,r2,r3
 2404 00a2 5B0B     	 lsrs r3,r3,#13
 2405 00a4 FB60     	 str r3,[r7,#12]
 674:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 675:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 2406              	 .loc 2 675 0
 2407 00a6 7B68     	 ldr r3,[r7,#4]
 2408 00a8 9A68     	 ldr r2,[r3,#8]
 2409 00aa FB69     	 ldr r3,[r7,#28]
 2410 00ac 9BB2     	 uxth r3,r3
 2411 00ae 013B     	 subs r3,r3,#1
 2412 00b0 9BB2     	 uxth r3,r3
 2413 00b2 1046     	 mov r0,r2
 2414 00b4 1946     	 mov r1,r3
 2415 00b6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 676:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2416              	 .loc 2 676 0
 2417 00ba 7B68     	 ldr r3,[r7,#4]
 2418 00bc 9A68     	 ldr r2,[r3,#8]
 2419 00be 3B69     	 ldr r3,[r7,#16]
 2420 00c0 9BB2     	 uxth r3,r3
 2421 00c2 1046     	 mov r0,r2
 2422 00c4 0021     	 movs r1,#0
 2423 00c6 1A46     	 mov r2,r3
 2424 00c8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 677:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch1);
 678:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2425              	 .loc 2 678 0
 2426 00cc 7B68     	 ldr r3,[r7,#4]
 2427 00ce 9A68     	 ldr r2,[r3,#8]
 2428 00d0 FB68     	 ldr r3,[r7,#12]
 2429 00d2 9BB2     	 uxth r3,r3
 2430 00d4 1046     	 mov r0,r2
 2431 00d6 0121     	 movs r1,#1
 2432 00d8 1A46     	 mov r2,r3
 2433 00da FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 679:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch2);
 680:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2434              	 .loc 2 680 0
 2435 00de 7B68     	 ldr r3,[r7,#4]
 2436 00e0 5A68     	 ldr r2,[r3,#4]
 2437 00e2 7B68     	 ldr r3,[r7,#4]
 2438 00e4 1B69     	 ldr r3,[r3,#16]
 2439 00e6 1046     	 mov r0,r2
 2440 00e8 1946     	 mov r1,r3
 2441 00ea FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 681:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetPwmFreq:frequency set center aligned mode");
 682:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           status = PWM_CCU8_STATUS_SUCCESS;
 2442              	 .loc 2 682 0
 2443 00ee 0023     	 movs r3,#0
 2444 00f0 87F82730 	 strb r3,[r7,#39]
 2445 00f4 42E0     	 b .L87
 2446              	.L88:
 683:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 684:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 685:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 686:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 687:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if (period <= PWM_CCU8_MAX_TIMER_COUNT)
 2447              	 .loc 2 687 0
 2448 00f6 FB69     	 ldr r3,[r7,#28]
 2449 00f8 B3F5803F 	 cmp r3,#65536
 2450 00fc 3ED2     	 bcs .L87
 688:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 689:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = period * shift;
 2451              	 .loc 2 689 0
 2452 00fe FB69     	 ldr r3,[r7,#28]
 2453 0100 7A69     	 ldr r2,[r7,#20]
 2454 0102 02FB03F3 	 mul r3,r2,r3
 2455 0106 3B61     	 str r3,[r7,#16]
 690:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = compare_ch1 / PWM_CCU8_DUTY_FULL_SCALE;
 2456              	 .loc 2 690 0
 2457 0108 3B69     	 ldr r3,[r7,#16]
 2458 010a 1F4A     	 ldr r2,.L91
 2459 010c A2FB0323 	 umull r2,r3,r2,r3
 2460 0110 5B0B     	 lsrs r3,r3,#13
 2461 0112 3B61     	 str r3,[r7,#16]
 691:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = period * (shift + duty_cycle);
 2462              	 .loc 2 691 0
 2463 0114 7A69     	 ldr r2,[r7,#20]
 2464 0116 BB69     	 ldr r3,[r7,#24]
 2465 0118 1344     	 add r3,r3,r2
 2466 011a FA69     	 ldr r2,[r7,#28]
 2467 011c 02FB03F3 	 mul r3,r2,r3
 2468 0120 FB60     	 str r3,[r7,#12]
 692:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = compare_ch2 / PWM_CCU8_DUTY_FULL_SCALE;
 2469              	 .loc 2 692 0
 2470 0122 FB68     	 ldr r3,[r7,#12]
 2471 0124 184A     	 ldr r2,.L91
 2472 0126 A2FB0323 	 umull r2,r3,r2,r3
 2473 012a 5B0B     	 lsrs r3,r3,#13
 2474 012c FB60     	 str r3,[r7,#12]
 693:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 694:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 2475              	 .loc 2 694 0
 2476 012e 7B68     	 ldr r3,[r7,#4]
 2477 0130 9A68     	 ldr r2,[r3,#8]
 2478 0132 FB69     	 ldr r3,[r7,#28]
 2479 0134 9BB2     	 uxth r3,r3
 2480 0136 013B     	 subs r3,r3,#1
 2481 0138 9BB2     	 uxth r3,r3
 2482 013a 1046     	 mov r0,r2
 2483 013c 1946     	 mov r1,r3
 2484 013e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 695:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2485              	 .loc 2 695 0
 2486 0142 7B68     	 ldr r3,[r7,#4]
 2487 0144 9A68     	 ldr r2,[r3,#8]
 2488 0146 3B69     	 ldr r3,[r7,#16]
 2489 0148 9BB2     	 uxth r3,r3
 2490 014a 1046     	 mov r0,r2
 2491 014c 0021     	 movs r1,#0
 2492 014e 1A46     	 mov r2,r3
 2493 0150 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 696:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch1);
 697:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2494              	 .loc 2 697 0
 2495 0154 7B68     	 ldr r3,[r7,#4]
 2496 0156 9A68     	 ldr r2,[r3,#8]
 2497 0158 FB68     	 ldr r3,[r7,#12]
 2498 015a 9BB2     	 uxth r3,r3
 2499 015c 1046     	 mov r0,r2
 2500 015e 0121     	 movs r1,#1
 2501 0160 1A46     	 mov r2,r3
 2502 0162 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 698:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch2);
 699:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2503              	 .loc 2 699 0
 2504 0166 7B68     	 ldr r3,[r7,#4]
 2505 0168 5A68     	 ldr r2,[r3,#4]
 2506 016a 7B68     	 ldr r3,[r7,#4]
 2507 016c 1B69     	 ldr r3,[r3,#16]
 2508 016e 1046     	 mov r0,r2
 2509 0170 1946     	 mov r1,r3
 2510 0172 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 700:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetPwmFreq:frequency set edge aligned mode");
 701:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           status = PWM_CCU8_STATUS_SUCCESS;
 2511              	 .loc 2 701 0
 2512 0176 0023     	 movs r3,#0
 2513 0178 87F82730 	 strb r3,[r7,#39]
 2514              	.L87:
 702:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 703:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 704:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 705:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 706:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2515              	 .loc 2 706 0
 2516 017c 97F82730 	 ldrb r3,[r7,#39]
 707:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetFreqAsymmetric() api */
 2517              	 .loc 2 707 0
 2518 0180 1846     	 mov r0,r3
 2519 0182 2837     	 adds r7,r7,#40
 2520              	.LCFI142:
 2521              	 .cfi_def_cfa_offset 8
 2522 0184 BD46     	 mov sp,r7
 2523              	.LCFI143:
 2524              	 .cfi_def_cfa_register 13
 2525              	 
 2526 0186 80BD     	 pop {r7,pc}
 2527              	.L92:
 2528              	 .align 2
 2529              	.L91:
 2530 0188 5917B7D1 	 .word -776530087
 2531              	 .cfi_endproc
 2532              	.LFE252:
 2534              	 .section .text.PWM_CCU8_SetDutyCycleAsymmetric,"ax",%progbits
 2535              	 .align 2
 2536              	 .global PWM_CCU8_SetDutyCycleAsymmetric
 2537              	 .thumb
 2538              	 .thumb_func
 2540              	PWM_CCU8_SetDutyCycleAsymmetric:
 2541              	.LFB253:
 708:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 709:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 710:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 711:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the duty cycle and shift (uint32_t) for CCU8_CC8 slice in Asymmetric mode. */
 712:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*(shift + duty_cycle <= 100)  and (shift + duty_cycle >= 50) */
 713:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetDutyCycleAsymmetric(PWM_CCU8_t* handle_ptr, uint32_t shift, uint32_t 
 714:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2542              	 .loc 2 714 0
 2543              	 .cfi_startproc
 2544              	 
 2545              	 
 2546 0000 80B5     	 push {r7,lr}
 2547              	.LCFI144:
 2548              	 .cfi_def_cfa_offset 8
 2549              	 .cfi_offset 7,-8
 2550              	 .cfi_offset 14,-4
 2551 0002 88B0     	 sub sp,sp,#32
 2552              	.LCFI145:
 2553              	 .cfi_def_cfa_offset 40
 2554 0004 00AF     	 add r7,sp,#0
 2555              	.LCFI146:
 2556              	 .cfi_def_cfa_register 7
 2557 0006 F860     	 str r0,[r7,#12]
 2558 0008 B960     	 str r1,[r7,#8]
 2559 000a 7A60     	 str r2,[r7,#4]
 715:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 716:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 717:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 718:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 719:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 720:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2560              	 .loc 2 720 0
 2561 000c 0123     	 movs r3,#1
 2562 000e FB77     	 strb r3,[r7,#31]
 721:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDutyCycleAsymmetric:handle_ptr NULL", (handle_ptr != NULL));
 722:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2563              	 .loc 2 722 0
 2564 0010 FB68     	 ldr r3,[r7,#12]
 2565 0012 1B7F     	 ldrb r3,[r3,#28]
 2566 0014 002B     	 cmp r3,#0
 2567 0016 00F0A680 	 beq .L94
 723:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 724:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_tim
 2568              	 .loc 2 724 0
 2569 001a FB68     	 ldr r3,[r7,#12]
 2570 001c 1B68     	 ldr r3,[r3]
 2571 001e 9B6C     	 ldr r3,[r3,#72]
 2572 0020 1B78     	 ldrb r3,[r3]
 2573 0022 03F00103 	 and r3,r3,#1
 2574 0026 DBB2     	 uxtb r3,r3
 2575 0028 002B     	 cmp r3,#0
 2576 002a 58D0     	 beq .L95
 725:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 726:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /*center aligned mode*/
 727:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if (((shift + duty_cycle) > PWM_CCU8_ASYM_CA_MAX) || ((shift + duty_cycle) < PWM_CCU8_ASYM_CA
 2577              	 .loc 2 727 0
 2578 002c BA68     	 ldr r2,[r7,#8]
 2579 002e 7B68     	 ldr r3,[r7,#4]
 2580 0030 1344     	 add r3,r3,r2
 2581 0032 42F21072 	 movw r2,#10000
 2582 0036 9342     	 cmp r3,r2
 2583 0038 00F29580 	 bhi .L94
 2584              	 .loc 2 727 0 is_stmt 0 discriminator 1
 2585 003c BA68     	 ldr r2,[r7,#8]
 2586 003e 7B68     	 ldr r3,[r7,#4]
 2587 0040 1344     	 add r3,r3,r2
 2588 0042 41F28732 	 movw r2,#4999
 2589 0046 9342     	 cmp r3,r2
 2590 0048 40F28D80 	 bls .L94
 728:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 729:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode 50% < (shift + du
 730:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 731:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else if (shift >= PWM_CCU8_ASYM_CA_SHIFT_MAX)
 2591              	 .loc 2 731 0 is_stmt 1
 2592 004c BB68     	 ldr r3,[r7,#8]
 2593 004e 41F28732 	 movw r2,#4999
 2594 0052 9342     	 cmp r3,r2
 2595 0054 00F28780 	 bhi .L94
 732:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 733:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode shift > 50%");
 734:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 735:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 736:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 737:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = (uint32_t) XMC_CCU8_SLICE_GetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr);
 2596              	 .loc 2 737 0
 2597 0058 FB68     	 ldr r3,[r7,#12]
 2598 005a 9B68     	 ldr r3,[r3,#8]
 2599 005c 1846     	 mov r0,r3
 2600 005e FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerPeriodMatch
 2601 0062 0346     	 mov r3,r0
 2602 0064 BB61     	 str r3,[r7,#24]
 738:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 739:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = ((2U * period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2603              	 .loc 2 739 0
 2604 0066 BB69     	 ldr r3,[r7,#24]
 2605 0068 BA68     	 ldr r2,[r7,#8]
 2606 006a 02FB03F3 	 mul r3,r2,r3
 2607 006e 5B00     	 lsls r3,r3,#1
 2608 0070 3F4A     	 ldr r2,.L98
 2609 0072 A2FB0323 	 umull r2,r3,r2,r3
 2610 0076 5B0B     	 lsrs r3,r3,#13
 2611 0078 7B61     	 str r3,[r7,#20]
 740:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = ((2U * period * (PWM_CCU8_DUTY_FULL_SCALE - (shift + duty_cycle))) / PWM_CCU8
 2612              	 .loc 2 740 0
 2613 007a BA68     	 ldr r2,[r7,#8]
 2614 007c 7B68     	 ldr r3,[r7,#4]
 2615 007e 1344     	 add r3,r3,r2
 2616 0080 C3F51C53 	 rsb r3,r3,#9984
 2617 0084 1033     	 adds r3,r3,#16
 2618 0086 BA69     	 ldr r2,[r7,#24]
 2619 0088 02FB03F3 	 mul r3,r2,r3
 2620 008c 5B00     	 lsls r3,r3,#1
 2621 008e 384A     	 ldr r2,.L98
 2622 0090 A2FB0323 	 umull r2,r3,r2,r3
 2623 0094 5B0B     	 lsrs r3,r3,#13
 2624 0096 3B61     	 str r3,[r7,#16]
 741:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 742:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2625              	 .loc 2 742 0
 2626 0098 FB68     	 ldr r3,[r7,#12]
 2627 009a 9A68     	 ldr r2,[r3,#8]
 2628 009c 7B69     	 ldr r3,[r7,#20]
 2629 009e 9BB2     	 uxth r3,r3
 2630 00a0 1046     	 mov r0,r2
 2631 00a2 0021     	 movs r1,#0
 2632 00a4 1A46     	 mov r2,r3
 2633 00a6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 743:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch1);
 744:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2634              	 .loc 2 744 0
 2635 00aa FB68     	 ldr r3,[r7,#12]
 2636 00ac 9A68     	 ldr r2,[r3,#8]
 2637 00ae 3B69     	 ldr r3,[r7,#16]
 2638 00b0 9BB2     	 uxth r3,r3
 2639 00b2 1046     	 mov r0,r2
 2640 00b4 0121     	 movs r1,#1
 2641 00b6 1A46     	 mov r2,r3
 2642 00b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 745:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch2);
 746:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2643              	 .loc 2 746 0
 2644 00bc FB68     	 ldr r3,[r7,#12]
 2645 00be 5A68     	 ldr r2,[r3,#4]
 2646 00c0 FB68     	 ldr r3,[r7,#12]
 2647 00c2 1B69     	 ldr r3,[r3,#16]
 2648 00c4 1046     	 mov r0,r2
 2649 00c6 1946     	 mov r1,r3
 2650 00c8 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 747:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 748:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_duty = duty_cycle;
 2651              	 .loc 2 748 0
 2652 00cc FB68     	 ldr r3,[r7,#12]
 2653 00ce 7A68     	 ldr r2,[r7,#4]
 2654 00d0 DA62     	 str r2,[r3,#44]
 749:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_shift = shift;
 2655              	 .loc 2 749 0
 2656 00d2 FB68     	 ldr r3,[r7,#12]
 2657 00d4 BA68     	 ldr r2,[r7,#8]
 2658 00d6 1A63     	 str r2,[r3,#48]
 750:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 751:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:dutycycle set center aligned mode");
 752:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 2659              	 .loc 2 752 0
 2660 00d8 0023     	 movs r3,#0
 2661 00da FB77     	 strb r3,[r7,#31]
 2662 00dc 43E0     	 b .L94
 2663              	.L95:
 753:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 754:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 755:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 756:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 757:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 758:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /*edge aligned mode*/
 759:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if (((shift + duty_cycle) > PWM_CCU8_ASYM_EA_MAX))
 2664              	 .loc 2 759 0
 2665 00de BA68     	 ldr r2,[r7,#8]
 2666 00e0 7B68     	 ldr r3,[r7,#4]
 2667 00e2 1344     	 add r3,r3,r2
 2668 00e4 42F21072 	 movw r2,#10000
 2669 00e8 9342     	 cmp r3,r2
 2670 00ea 3CD8     	 bhi .L94
 760:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 761:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set edge aligned mode (shift + duty_cycle
 762:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 763:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 764:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 765:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = (uint32_t) XMC_CCU8_SLICE_GetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr);
 2671              	 .loc 2 765 0
 2672 00ec FB68     	 ldr r3,[r7,#12]
 2673 00ee 9B68     	 ldr r3,[r3,#8]
 2674 00f0 1846     	 mov r0,r3
 2675 00f2 FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerPeriodMatch
 2676 00f6 0346     	 mov r3,r0
 2677 00f8 BB61     	 str r3,[r7,#24]
 766:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 767:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = ((period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2678              	 .loc 2 767 0
 2679 00fa BB69     	 ldr r3,[r7,#24]
 2680 00fc BA68     	 ldr r2,[r7,#8]
 2681 00fe 02FB03F3 	 mul r3,r2,r3
 2682 0102 1B4A     	 ldr r2,.L98
 2683 0104 A2FB0323 	 umull r2,r3,r2,r3
 2684 0108 5B0B     	 lsrs r3,r3,#13
 2685 010a 7B61     	 str r3,[r7,#20]
 768:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = ((period * (shift + duty_cycle)) / PWM_CCU8_DUTY_FULL_SCALE);
 2686              	 .loc 2 768 0
 2687 010c BA68     	 ldr r2,[r7,#8]
 2688 010e 7B68     	 ldr r3,[r7,#4]
 2689 0110 1344     	 add r3,r3,r2
 2690 0112 BA69     	 ldr r2,[r7,#24]
 2691 0114 02FB03F3 	 mul r3,r2,r3
 2692 0118 154A     	 ldr r2,.L98
 2693 011a A2FB0323 	 umull r2,r3,r2,r3
 2694 011e 5B0B     	 lsrs r3,r3,#13
 2695 0120 3B61     	 str r3,[r7,#16]
 769:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 770:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2696              	 .loc 2 770 0
 2697 0122 FB68     	 ldr r3,[r7,#12]
 2698 0124 9A68     	 ldr r2,[r3,#8]
 2699 0126 7B69     	 ldr r3,[r7,#20]
 2700 0128 9BB2     	 uxth r3,r3
 2701 012a 1046     	 mov r0,r2
 2702 012c 0021     	 movs r1,#0
 2703 012e 1A46     	 mov r2,r3
 2704 0130 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 771:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch1);
 772:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2705              	 .loc 2 772 0
 2706 0134 FB68     	 ldr r3,[r7,#12]
 2707 0136 9A68     	 ldr r2,[r3,#8]
 2708 0138 3B69     	 ldr r3,[r7,#16]
 2709 013a 9BB2     	 uxth r3,r3
 2710 013c 1046     	 mov r0,r2
 2711 013e 0121     	 movs r1,#1
 2712 0140 1A46     	 mov r2,r3
 2713 0142 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 773:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch2);
 774:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2714              	 .loc 2 774 0
 2715 0146 FB68     	 ldr r3,[r7,#12]
 2716 0148 5A68     	 ldr r2,[r3,#4]
 2717 014a FB68     	 ldr r3,[r7,#12]
 2718 014c 1B69     	 ldr r3,[r3,#16]
 2719 014e 1046     	 mov r0,r2
 2720 0150 1946     	 mov r1,r3
 2721 0152 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 775:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 776:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_duty = duty_cycle;
 2722              	 .loc 2 776 0
 2723 0156 FB68     	 ldr r3,[r7,#12]
 2724 0158 7A68     	 ldr r2,[r7,#4]
 2725 015a DA62     	 str r2,[r3,#44]
 777:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_shift = shift;
 2726              	 .loc 2 777 0
 2727 015c FB68     	 ldr r3,[r7,#12]
 2728 015e BA68     	 ldr r2,[r7,#8]
 2729 0160 1A63     	 str r2,[r3,#48]
 778:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 779:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:dutycycle set edge aligned mode");
 780:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 2730              	 .loc 2 780 0
 2731 0162 0023     	 movs r3,#0
 2732 0164 FB77     	 strb r3,[r7,#31]
 2733              	.L94:
 781:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 782:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 783:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 784:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2734              	 .loc 2 784 0
 2735 0166 FB7F     	 ldrb r3,[r7,#31]
 785:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetDutyCycleAsymmetric() api */
 2736              	 .loc 2 785 0
 2737 0168 1846     	 mov r0,r3
 2738 016a 2037     	 adds r7,r7,#32
 2739              	.LCFI147:
 2740              	 .cfi_def_cfa_offset 8
 2741 016c BD46     	 mov sp,r7
 2742              	.LCFI148:
 2743              	 .cfi_def_cfa_register 13
 2744              	 
 2745 016e 80BD     	 pop {r7,pc}
 2746              	.L99:
 2747              	 .align 2
 2748              	.L98:
 2749 0170 5917B7D1 	 .word -776530087
 2750              	 .cfi_endproc
 2751              	.LFE253:
 2753              	 .section .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric,"ax",%progbits
 2754              	 .align 2
 2755              	 .global PWM_CCU8_SetFreqAndDutyCycleAsymmetric
 2756              	 .thumb
 2757              	 .thumb_func
 2759              	PWM_CCU8_SetFreqAndDutyCycleAsymmetric:
 2760              	.LFB254:
 786:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 787:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 788:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 789:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency, (uint32_t)shift and (uint32_t)duty cycle for CCU8_CC8 slice Asymmetric Mode. 
 790:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqAndDutyCycleAsymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_
 791:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                          uint32_t duty_cycle)
 792:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2761              	 .loc 2 792 0
 2762              	 .cfi_startproc
 2763              	 
 2764              	 
 2765 0000 80B5     	 push {r7,lr}
 2766              	.LCFI149:
 2767              	 .cfi_def_cfa_offset 8
 2768              	 .cfi_offset 7,-8
 2769              	 .cfi_offset 14,-4
 2770 0002 8AB0     	 sub sp,sp,#40
 2771              	.LCFI150:
 2772              	 .cfi_def_cfa_offset 48
 2773 0004 00AF     	 add r7,sp,#0
 2774              	.LCFI151:
 2775              	 .cfi_def_cfa_register 7
 2776 0006 F860     	 str r0,[r7,#12]
 2777 0008 B960     	 str r1,[r7,#8]
 2778 000a 7A60     	 str r2,[r7,#4]
 2779 000c 3B60     	 str r3,[r7]
 793:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 794:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 795:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 796:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 797:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 798:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 799:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2780              	 .loc 2 799 0
 2781 000e 0123     	 movs r3,#1
 2782 0010 87F82730 	 strb r3,[r7,#39]
 800:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 2783              	 .loc 2 800 0
 2784 0014 0023     	 movs r3,#0
 2785 0016 3B62     	 str r3,[r7,#32]
 801:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:handle_ptr NULL", (handle_ptr != NULL));
 802:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2786              	 .loc 2 802 0
 2787 0018 FB68     	 ldr r3,[r7,#12]
 2788 001a 1B7F     	 ldrb r3,[r3,#28]
 2789 001c 002B     	 cmp r3,#0
 2790 001e 00F0CA80 	 beq .L101
 803:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 804:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 2791              	 .loc 2 804 0
 2792 0022 BB68     	 ldr r3,[r7,#8]
 2793 0024 002B     	 cmp r3,#0
 2794 0026 00F0C680 	 beq .L101
 805:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 806:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:cannot set frequency 0Hz");
 807:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 808:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 809:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 810:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 2795              	 .loc 2 810 0
 2796 002a FB68     	 ldr r3,[r7,#12]
 2797 002c 1B6A     	 ldr r3,[r3,#32]
 2798 002e 3B62     	 str r3,[r7,#32]
 811:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 2799              	 .loc 2 811 0
 2800 0030 3A6A     	 ldr r2,[r7,#32]
 2801 0032 BB68     	 ldr r3,[r7,#8]
 2802 0034 B2FBF3F3 	 udiv r3,r2,r3
 2803 0038 FB61     	 str r3,[r7,#28]
 812:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 813:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 2804              	 .loc 2 813 0
 2805 003a FB68     	 ldr r3,[r7,#12]
 2806 003c 1B68     	 ldr r3,[r3]
 2807 003e 9B6C     	 ldr r3,[r3,#72]
 2808 0040 1B78     	 ldrb r3,[r3]
 2809 0042 03F00103 	 and r3,r3,#1
 2810 0046 DBB2     	 uxtb r3,r3
 2811 0048 002B     	 cmp r3,#0
 2812 004a 68D0     	 beq .L102
 814:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 815:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if (((shift + duty_cycle) > PWM_CCU8_ASYM_CA_MAX) || ((shift + duty_cycle) < PWM_CCU8_ASYM_
 2813              	 .loc 2 815 0
 2814 004c 7A68     	 ldr r2,[r7,#4]
 2815 004e 3B68     	 ldr r3,[r7]
 2816 0050 1344     	 add r3,r3,r2
 2817 0052 42F21072 	 movw r2,#10000
 2818 0056 9342     	 cmp r3,r2
 2819 0058 00F2AD80 	 bhi .L101
 2820              	 .loc 2 815 0 is_stmt 0 discriminator 1
 2821 005c 7A68     	 ldr r2,[r7,#4]
 2822 005e 3B68     	 ldr r3,[r7]
 2823 0060 1344     	 add r3,r3,r2
 2824 0062 41F28732 	 movw r2,#4999
 2825 0066 9342     	 cmp r3,r2
 2826 0068 40F2A580 	 bls .L101
 816:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 817:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode 50% < (shift + 
 818:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 819:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         else if (shift >= PWM_CCU8_ASYM_CA_SHIFT_MAX)
 2827              	 .loc 2 819 0 is_stmt 1
 2828 006c 7B68     	 ldr r3,[r7,#4]
 2829 006e 41F28732 	 movw r2,#4999
 2830 0072 9342     	 cmp r3,r2
 2831 0074 00F29F80 	 bhi .L101
 820:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 821:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode shift > 50%");
 822:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 823:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         else
 824:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 825:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           period = period >> 1U;/*divide by 2*/
 2832              	 .loc 2 825 0
 2833 0078 FB69     	 ldr r3,[r7,#28]
 2834 007a 5B08     	 lsrs r3,r3,#1
 2835 007c FB61     	 str r3,[r7,#28]
 826:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 827:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 2836              	 .loc 2 827 0
 2837 007e FB69     	 ldr r3,[r7,#28]
 2838 0080 002B     	 cmp r3,#0
 2839 0082 00F09880 	 beq .L101
 2840              	 .loc 2 827 0 is_stmt 0 discriminator 1
 2841 0086 FB69     	 ldr r3,[r7,#28]
 2842 0088 B3F5803F 	 cmp r3,#65536
 2843 008c 80F09380 	 bcs .L101
 828:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           {
 829:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch1 = ((2U * period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2844              	 .loc 2 829 0 is_stmt 1
 2845 0090 FB69     	 ldr r3,[r7,#28]
 2846 0092 7A68     	 ldr r2,[r7,#4]
 2847 0094 02FB03F3 	 mul r3,r2,r3
 2848 0098 5B00     	 lsls r3,r3,#1
 2849 009a 4A4A     	 ldr r2,.L105
 2850 009c A2FB0323 	 umull r2,r3,r2,r3
 2851 00a0 5B0B     	 lsrs r3,r3,#13
 2852 00a2 BB61     	 str r3,[r7,#24]
 830:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch2 =
 831:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                 ((2U * period * (PWM_CCU8_DUTY_FULL_SCALE - (shift + duty_cycle))) / PWM_CCU8_DUTY_
 2853              	 .loc 2 831 0
 2854 00a4 7A68     	 ldr r2,[r7,#4]
 2855 00a6 3B68     	 ldr r3,[r7]
 2856 00a8 1344     	 add r3,r3,r2
 2857 00aa C3F51C53 	 rsb r3,r3,#9984
 2858 00ae 1033     	 adds r3,r3,#16
 2859 00b0 FA69     	 ldr r2,[r7,#28]
 2860 00b2 02FB03F3 	 mul r3,r2,r3
 2861 00b6 5B00     	 lsls r3,r3,#1
 830:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch2 =
 2862              	 .loc 2 830 0
 2863 00b8 424A     	 ldr r2,.L105
 2864 00ba A2FB0323 	 umull r2,r3,r2,r3
 2865 00be 5B0B     	 lsrs r3,r3,#13
 2866 00c0 7B61     	 str r3,[r7,#20]
 832:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 833:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U))
 2867              	 .loc 2 833 0
 2868 00c2 FB68     	 ldr r3,[r7,#12]
 2869 00c4 9A68     	 ldr r2,[r3,#8]
 2870 00c6 FB69     	 ldr r3,[r7,#28]
 2871 00c8 9BB2     	 uxth r3,r3
 2872 00ca 013B     	 subs r3,r3,#1
 2873 00cc 9BB2     	 uxth r3,r3
 2874 00ce 1046     	 mov r0,r2
 2875 00d0 1946     	 mov r1,r3
 2876 00d2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 834:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2877              	 .loc 2 834 0
 2878 00d6 FB68     	 ldr r3,[r7,#12]
 2879 00d8 9A68     	 ldr r2,[r3,#8]
 2880 00da BB69     	 ldr r3,[r7,#24]
 2881 00dc 9BB2     	 uxth r3,r3
 2882 00de 1046     	 mov r0,r2
 2883 00e0 0021     	 movs r1,#0
 2884 00e2 1A46     	 mov r2,r3
 2885 00e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 835:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch1);
 836:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2886              	 .loc 2 836 0
 2887 00e8 FB68     	 ldr r3,[r7,#12]
 2888 00ea 9A68     	 ldr r2,[r3,#8]
 2889 00ec 7B69     	 ldr r3,[r7,#20]
 2890 00ee 9BB2     	 uxth r3,r3
 2891 00f0 1046     	 mov r0,r2
 2892 00f2 0121     	 movs r1,#1
 2893 00f4 1A46     	 mov r2,r3
 2894 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 837:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch2);
 838:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk)
 2895              	 .loc 2 838 0
 2896 00fa FB68     	 ldr r3,[r7,#12]
 2897 00fc 5A68     	 ldr r2,[r3,#4]
 2898 00fe FB68     	 ldr r3,[r7,#12]
 2899 0100 1B69     	 ldr r3,[r3,#16]
 2900 0102 1046     	 mov r0,r2
 2901 0104 1946     	 mov r1,r3
 2902 0106 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 839:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 840:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_duty = duty_cycle;
 2903              	 .loc 2 840 0
 2904 010a FB68     	 ldr r3,[r7,#12]
 2905 010c 3A68     	 ldr r2,[r7]
 2906 010e DA62     	 str r2,[r3,#44]
 841:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_shift = shift;
 2907              	 .loc 2 841 0
 2908 0110 FB68     	 ldr r3,[r7,#12]
 2909 0112 7A68     	 ldr r2,[r7,#4]
 2910 0114 1A63     	 str r2,[r3,#48]
 842:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 843:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:frequency and duty set center aligned
 844:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             status = PWM_CCU8_STATUS_SUCCESS;
 2911              	 .loc 2 844 0
 2912 0116 0023     	 movs r3,#0
 2913 0118 87F82730 	 strb r3,[r7,#39]
 2914 011c 4BE0     	 b .L101
 2915              	.L102:
 845:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           }
 846:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 847:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 848:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 849:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 850:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if (period <= PWM_CCU8_MAX_TIMER_COUNT)
 2916              	 .loc 2 850 0
 2917 011e FB69     	 ldr r3,[r7,#28]
 2918 0120 B3F5803F 	 cmp r3,#65536
 2919 0124 47D2     	 bcs .L101
 851:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 852:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           if (((shift + duty_cycle) > PWM_CCU8_ASYM_EA_MAX))
 2920              	 .loc 2 852 0
 2921 0126 7A68     	 ldr r2,[r7,#4]
 2922 0128 3B68     	 ldr r3,[r7]
 2923 012a 1344     	 add r3,r3,r2
 2924 012c 42F21072 	 movw r2,#10000
 2925 0130 9342     	 cmp r3,r2
 2926 0132 40D8     	 bhi .L101
 853:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           {
 854:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set edge aligned mode (shift + duty_c
 855:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           }
 856:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           else
 857:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           {
 858:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch1 = ((period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2927              	 .loc 2 858 0
 2928 0134 FB69     	 ldr r3,[r7,#28]
 2929 0136 7A68     	 ldr r2,[r7,#4]
 2930 0138 02FB03F3 	 mul r3,r2,r3
 2931 013c 214A     	 ldr r2,.L105
 2932 013e A2FB0323 	 umull r2,r3,r2,r3
 2933 0142 5B0B     	 lsrs r3,r3,#13
 2934 0144 BB61     	 str r3,[r7,#24]
 859:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch2 = ((period * (shift + duty_cycle)) / PWM_CCU8_DUTY_FULL_SCALE);
 2935              	 .loc 2 859 0
 2936 0146 7A68     	 ldr r2,[r7,#4]
 2937 0148 3B68     	 ldr r3,[r7]
 2938 014a 1344     	 add r3,r3,r2
 2939 014c FA69     	 ldr r2,[r7,#28]
 2940 014e 02FB03F3 	 mul r3,r2,r3
 2941 0152 1C4A     	 ldr r2,.L105
 2942 0154 A2FB0323 	 umull r2,r3,r2,r3
 2943 0158 5B0B     	 lsrs r3,r3,#13
 2944 015a 7B61     	 str r3,[r7,#20]
 860:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 861:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U))
 2945              	 .loc 2 861 0
 2946 015c FB68     	 ldr r3,[r7,#12]
 2947 015e 9A68     	 ldr r2,[r3,#8]
 2948 0160 FB69     	 ldr r3,[r7,#28]
 2949 0162 9BB2     	 uxth r3,r3
 2950 0164 013B     	 subs r3,r3,#1
 2951 0166 9BB2     	 uxth r3,r3
 2952 0168 1046     	 mov r0,r2
 2953 016a 1946     	 mov r1,r3
 2954 016c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 862:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2955              	 .loc 2 862 0
 2956 0170 FB68     	 ldr r3,[r7,#12]
 2957 0172 9A68     	 ldr r2,[r3,#8]
 2958 0174 BB69     	 ldr r3,[r7,#24]
 2959 0176 9BB2     	 uxth r3,r3
 2960 0178 1046     	 mov r0,r2
 2961 017a 0021     	 movs r1,#0
 2962 017c 1A46     	 mov r2,r3
 2963 017e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 863:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch1);
 864:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2964              	 .loc 2 864 0
 2965 0182 FB68     	 ldr r3,[r7,#12]
 2966 0184 9A68     	 ldr r2,[r3,#8]
 2967 0186 7B69     	 ldr r3,[r7,#20]
 2968 0188 9BB2     	 uxth r3,r3
 2969 018a 1046     	 mov r0,r2
 2970 018c 0121     	 movs r1,#1
 2971 018e 1A46     	 mov r2,r3
 2972 0190 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 865:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch2);
 866:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk)
 2973              	 .loc 2 866 0
 2974 0194 FB68     	 ldr r3,[r7,#12]
 2975 0196 5A68     	 ldr r2,[r3,#4]
 2976 0198 FB68     	 ldr r3,[r7,#12]
 2977 019a 1B69     	 ldr r3,[r3,#16]
 2978 019c 1046     	 mov r0,r2
 2979 019e 1946     	 mov r1,r3
 2980 01a0 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 867:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 868:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_duty = duty_cycle;
 2981              	 .loc 2 868 0
 2982 01a4 FB68     	 ldr r3,[r7,#12]
 2983 01a6 3A68     	 ldr r2,[r7]
 2984 01a8 DA62     	 str r2,[r3,#44]
 869:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_shift = shift;
 2985              	 .loc 2 869 0
 2986 01aa FB68     	 ldr r3,[r7,#12]
 2987 01ac 7A68     	 ldr r2,[r7,#4]
 2988 01ae 1A63     	 str r2,[r3,#48]
 870:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 871:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:frequency and duty set edge aligned m
 872:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             status = PWM_CCU8_STATUS_SUCCESS;
 2989              	 .loc 2 872 0
 2990 01b0 0023     	 movs r3,#0
 2991 01b2 87F82730 	 strb r3,[r7,#39]
 2992              	.L101:
 873:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           }
 874:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 875:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 876:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 877:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 878:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 879:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2993              	 .loc 2 879 0
 2994 01b6 97F82730 	 ldrb r3,[r7,#39]
 880:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetFreqAndDutyCycleAsymmetric() api */
 2995              	 .loc 2 880 0
 2996 01ba 1846     	 mov r0,r3
 2997 01bc 2837     	 adds r7,r7,#40
 2998              	.LCFI152:
 2999              	 .cfi_def_cfa_offset 8
 3000 01be BD46     	 mov sp,r7
 3001              	.LCFI153:
 3002              	 .cfi_def_cfa_register 13
 3003              	 
 3004 01c0 80BD     	 pop {r7,pc}
 3005              	.L106:
 3006 01c2 00BF     	 .align 2
 3007              	.L105:
 3008 01c4 5917B7D1 	 .word -776530087
 3009              	 .cfi_endproc
 3010              	.LFE254:
 3012              	 .section .text.PWM_CCU8_SetDither,"ax",%progbits
 3013              	 .align 2
 3014              	 .global PWM_CCU8_SetDither
 3015              	 .thumb
 3016              	 .thumb_func
 3018              	PWM_CCU8_SetDither:
 3019              	.LFB255:
 881:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 882:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 883:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 884:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the dither value, enables the dither. */
 885:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_SetDither(PWM_CCU8_t* handle_ptr, bool dither_period, bool dither_comp, uint8_t dithe
 886:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3020              	 .loc 2 886 0
 3021              	 .cfi_startproc
 3022              	 
 3023              	 
 3024 0000 80B5     	 push {r7,lr}
 3025              	.LCFI154:
 3026              	 .cfi_def_cfa_offset 8
 3027              	 .cfi_offset 7,-8
 3028              	 .cfi_offset 14,-4
 3029 0002 82B0     	 sub sp,sp,#8
 3030              	.LCFI155:
 3031              	 .cfi_def_cfa_offset 16
 3032 0004 00AF     	 add r7,sp,#0
 3033              	.LCFI156:
 3034              	 .cfi_def_cfa_register 7
 3035 0006 7860     	 str r0,[r7,#4]
 3036 0008 0846     	 mov r0,r1
 3037 000a 1146     	 mov r1,r2
 3038 000c 1A46     	 mov r2,r3
 3039 000e 0346     	 mov r3,r0
 3040 0010 FB70     	 strb r3,[r7,#3]
 3041 0012 0B46     	 mov r3,r1
 3042 0014 BB70     	 strb r3,[r7,#2]
 3043 0016 1346     	 mov r3,r2
 3044 0018 7B70     	 strb r3,[r7,#1]
 887:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 888:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDither:handle_ptr NULL", (handle_ptr != NULL));
 889:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_EnableDithering(handle_ptr->ccu8_slice_ptr, dither_period, dither_comp, dither_val
 3045              	 .loc 2 889 0
 3046 001a 7B68     	 ldr r3,[r7,#4]
 3047 001c 9868     	 ldr r0,[r3,#8]
 3048 001e F978     	 ldrb r1,[r7,#3]
 3049 0020 BA78     	 ldrb r2,[r7,#2]
 3050 0022 7B78     	 ldrb r3,[r7,#1]
 3051 0024 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableDithering
 890:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->dither_shadow_txfr_msk);
 3052              	 .loc 2 890 0
 3053 0028 7B68     	 ldr r3,[r7,#4]
 3054 002a 5A68     	 ldr r2,[r3,#4]
 3055 002c 7B68     	 ldr r3,[r7,#4]
 3056 002e 5B69     	 ldr r3,[r3,#20]
 3057 0030 1046     	 mov r0,r2
 3058 0032 1946     	 mov r1,r3
 3059 0034 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 891:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_SetDither:dither compare value set");
 892:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 893:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetDither() api */
 3060              	 .loc 2 893 0
 3061 0038 0837     	 adds r7,r7,#8
 3062              	.LCFI157:
 3063              	 .cfi_def_cfa_offset 8
 3064 003a BD46     	 mov sp,r7
 3065              	.LCFI158:
 3066              	 .cfi_def_cfa_register 13
 3067              	 
 3068 003c 80BD     	 pop {r7,pc}
 3069              	 .cfi_endproc
 3070              	.LFE255:
 3072 003e 00BF     	 .section .text.PWM_CCU8_ClearTrap,"ax",%progbits
 3073              	 .align 2
 3074              	 .global PWM_CCU8_ClearTrap
 3075              	 .thumb
 3076              	 .thumb_func
 3078              	PWM_CCU8_ClearTrap:
 3079              	.LFB256:
 894:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 895:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*exits trap condition if trap signal is inactive */
 896:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_ClearTrap(PWM_CCU8_t* handle_ptr)
 897:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3080              	 .loc 2 897 0
 3081              	 .cfi_startproc
 3082              	 
 3083              	 
 3084 0000 80B5     	 push {r7,lr}
 3085              	.LCFI159:
 3086              	 .cfi_def_cfa_offset 8
 3087              	 .cfi_offset 7,-8
 3088              	 .cfi_offset 14,-4
 3089 0002 82B0     	 sub sp,sp,#8
 3090              	.LCFI160:
 3091              	 .cfi_def_cfa_offset 16
 3092 0004 00AF     	 add r7,sp,#0
 3093              	.LCFI161:
 3094              	 .cfi_def_cfa_register 7
 3095 0006 7860     	 str r0,[r7,#4]
 898:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 899:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_ClearTrap:handle_ptr NULL", (handle_ptr != NULL));
 900:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ClearEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2);
 3096              	 .loc 2 900 0
 3097 0008 7B68     	 ldr r3,[r7,#4]
 3098 000a 9B68     	 ldr r3,[r3,#8]
 3099 000c 1846     	 mov r0,r3
 3100 000e 0A21     	 movs r1,#10
 3101 0010 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 901:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_ClearTrap:trap event cleared");
 902:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 903:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_ClearTrap() api */
 3102              	 .loc 2 903 0
 3103 0014 0837     	 adds r7,r7,#8
 3104              	.LCFI162:
 3105              	 .cfi_def_cfa_offset 8
 3106 0016 BD46     	 mov sp,r7
 3107              	.LCFI163:
 3108              	 .cfi_def_cfa_register 13
 3109              	 
 3110 0018 80BD     	 pop {r7,pc}
 3111              	 .cfi_endproc
 3112              	.LFE256:
 3114 001a 00BF     	 .section .text.PWM_CCU8_SetDeadTime,"ax",%progbits
 3115              	 .align 2
 3116              	 .global PWM_CCU8_SetDeadTime
 3117              	 .thumb
 3118              	 .thumb_func
 3120              	PWM_CCU8_SetDeadTime:
 3121              	.LFB257:
 904:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 905:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the dead time*/
 906:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_SetDeadTime(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel, uint8_t
 907:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                           uint8_t fall_value)
 908:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3122              	 .loc 2 908 0
 3123              	 .cfi_startproc
 3124              	 
 3125              	 
 3126 0000 80B5     	 push {r7,lr}
 3127              	.LCFI164:
 3128              	 .cfi_def_cfa_offset 8
 3129              	 .cfi_offset 7,-8
 3130              	 .cfi_offset 14,-4
 3131 0002 82B0     	 sub sp,sp,#8
 3132              	.LCFI165:
 3133              	 .cfi_def_cfa_offset 16
 3134 0004 00AF     	 add r7,sp,#0
 3135              	.LCFI166:
 3136              	 .cfi_def_cfa_register 7
 3137 0006 7860     	 str r0,[r7,#4]
 3138 0008 0846     	 mov r0,r1
 3139 000a 1146     	 mov r1,r2
 3140 000c 1A46     	 mov r2,r3
 3141 000e 0346     	 mov r3,r0
 3142 0010 FB70     	 strb r3,[r7,#3]
 3143 0012 0B46     	 mov r3,r1
 3144 0014 BB70     	 strb r3,[r7,#2]
 3145 0016 1346     	 mov r3,r2
 3146 0018 7B70     	 strb r3,[r7,#1]
 909:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDeadTime:handle_ptr NULL", (handle_ptr != NULL));
 910:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetDeadTimeValue(handle_ptr->ccu8_slice_ptr, channel, rise_value, fall_value);
 3147              	 .loc 2 910 0
 3148 001a 7B68     	 ldr r3,[r7,#4]
 3149 001c 9868     	 ldr r0,[r3,#8]
 3150 001e F978     	 ldrb r1,[r7,#3]
 3151 0020 BA78     	 ldrb r2,[r7,#2]
 3152 0022 7B78     	 ldrb r3,[r7,#1]
 3153 0024 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDeadTimeValue
 911:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_SetDeadTime:dead time set");
 912:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetDeadTime() api */
 3154              	 .loc 2 912 0
 3155 0028 0837     	 adds r7,r7,#8
 3156              	.LCFI167:
 3157              	 .cfi_def_cfa_offset 8
 3158 002a BD46     	 mov sp,r7
 3159              	.LCFI168:
 3160              	 .cfi_def_cfa_register 13
 3161              	 
 3162 002c 80BD     	 pop {r7,pc}
 3163              	 .cfi_endproc
 3164              	.LFE257:
 3166 002e 00BF     	 .section .text.PWM_CCU8_GetInterruptStatus,"ax",%progbits
 3167              	 .align 2
 3168              	 .global PWM_CCU8_GetInterruptStatus
 3169              	 .thumb
 3170              	 .thumb_func
 3172              	PWM_CCU8_GetInterruptStatus:
 3173              	.LFB258:
 913:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 914:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Gets the interrupt status of  CCU8_CC8 slice. */
 915:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** bool PWM_CCU8_GetInterruptStatus(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_IRQ_ID_t pwm_interrupt)
 916:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3174              	 .loc 2 916 0
 3175              	 .cfi_startproc
 3176              	 
 3177              	 
 3178 0000 80B5     	 push {r7,lr}
 3179              	.LCFI169:
 3180              	 .cfi_def_cfa_offset 8
 3181              	 .cfi_offset 7,-8
 3182              	 .cfi_offset 14,-4
 3183 0002 84B0     	 sub sp,sp,#16
 3184              	.LCFI170:
 3185              	 .cfi_def_cfa_offset 24
 3186 0004 00AF     	 add r7,sp,#0
 3187              	.LCFI171:
 3188              	 .cfi_def_cfa_register 7
 3189 0006 7860     	 str r0,[r7,#4]
 3190 0008 0B46     	 mov r3,r1
 3191 000a FB70     	 strb r3,[r7,#3]
 917:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   bool status = (bool) false;
 3192              	 .loc 2 917 0
 3193 000c 0023     	 movs r3,#0
 3194 000e FB73     	 strb r3,[r7,#15]
 918:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_GetInterruptStatus:handle_ptr NULL", (handle_ptr != NULL));
 919:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = XMC_CCU8_SLICE_GetEvent(handle_ptr->ccu8_slice_ptr, pwm_interrupt);
 3195              	 .loc 2 919 0
 3196 0010 7B68     	 ldr r3,[r7,#4]
 3197 0012 9A68     	 ldr r2,[r3,#8]
 3198 0014 FB78     	 ldrb r3,[r7,#3]
 3199 0016 1046     	 mov r0,r2
 3200 0018 1946     	 mov r1,r3
 3201 001a FFF7FEFF 	 bl XMC_CCU8_SLICE_GetEvent
 3202 001e 0346     	 mov r3,r0
 3203 0020 FB73     	 strb r3,[r7,#15]
 920:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 3204              	 .loc 2 920 0
 3205 0022 FB7B     	 ldrb r3,[r7,#15]
 921:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_GetInterruptStatus() api */
 3206              	 .loc 2 921 0
 3207 0024 1846     	 mov r0,r3
 3208 0026 1037     	 adds r7,r7,#16
 3209              	.LCFI172:
 3210              	 .cfi_def_cfa_offset 8
 3211 0028 BD46     	 mov sp,r7
 3212              	.LCFI173:
 3213              	 .cfi_def_cfa_register 13
 3214              	 
 3215 002a 80BD     	 pop {r7,pc}
 3216              	 .cfi_endproc
 3217              	.LFE258:
 3219              	 .section .text.PWM_CCU8_ClearEvent,"ax",%progbits
 3220              	 .align 2
 3221              	 .global PWM_CCU8_ClearEvent
 3222              	 .thumb
 3223              	 .thumb_func
 3225              	PWM_CCU8_ClearEvent:
 3226              	.LFB259:
 922:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 923:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Acknowledges the interrupt of  CCU8_CC8 slice. */
 924:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_ClearEvent(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_IRQ_ID_t pwm_interrupt)
 925:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3227              	 .loc 2 925 0
 3228              	 .cfi_startproc
 3229              	 
 3230              	 
 3231 0000 80B5     	 push {r7,lr}
 3232              	.LCFI174:
 3233              	 .cfi_def_cfa_offset 8
 3234              	 .cfi_offset 7,-8
 3235              	 .cfi_offset 14,-4
 3236 0002 82B0     	 sub sp,sp,#8
 3237              	.LCFI175:
 3238              	 .cfi_def_cfa_offset 16
 3239 0004 00AF     	 add r7,sp,#0
 3240              	.LCFI176:
 3241              	 .cfi_def_cfa_register 7
 3242 0006 7860     	 str r0,[r7,#4]
 3243 0008 0B46     	 mov r3,r1
 3244 000a FB70     	 strb r3,[r7,#3]
 926:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_ClearEvent:handle_ptr NULL", (handle_ptr != NULL));
 927:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ClearEvent(handle_ptr->ccu8_slice_ptr, pwm_interrupt);
 3245              	 .loc 2 927 0
 3246 000c 7B68     	 ldr r3,[r7,#4]
 3247 000e 9A68     	 ldr r2,[r3,#8]
 3248 0010 FB78     	 ldrb r3,[r7,#3]
 3249 0012 1046     	 mov r0,r2
 3250 0014 1946     	 mov r1,r3
 3251 0016 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 928:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_ClearEvent:Acknowledge Interrupt");
 929:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_ClearEvent() api */
 3252              	 .loc 2 929 0
 3253 001a 0837     	 adds r7,r7,#8
 3254              	.LCFI177:
 3255              	 .cfi_def_cfa_offset 8
 3256 001c BD46     	 mov sp,r7
 3257              	.LCFI178:
 3258              	 .cfi_def_cfa_register 13
 3259              	 
 3260 001e 80BD     	 pop {r7,pc}
 3261              	 .cfi_endproc
 3262              	.LFE259:
 3264              	 .text
 3265              	.Letext0:
 3266              	 .file 3 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3267              	 .file 4 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3268              	 .file 5 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 3269              	 .file 6 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc/xmc_gpio.h"
 3270              	 .file 7 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc/xmc4_gpio.h"
 3271              	 .file 8 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc/xmc4_scu.h"
 3272              	 .file 9 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/DAVE_Common.h"
 3273              	 .file 10 "../Dave/Generated/PWM_CCU8/../GLOBAL_CCU8/global_ccu8.h"
 3274              	 .file 11 "../Dave/Generated/PWM_CCU8/pwm_ccu8.h"
 3275              	 .file 12 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/CMSIS/Include/core_cm4.h"
 3276              	 .file 13 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/CMSIS/Infineon/XMC4800_series/Include/system_XMC4800.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm_ccu8.c
    {standard input}:20     .text.XMC_CCU8_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU8_EnableClock:00000000 XMC_CCU8_EnableClock
    {standard input}:71     .text.XMC_CCU8_SLICE_EnableTrap:00000000 $t
    {standard input}:75     .text.XMC_CCU8_SLICE_EnableTrap:00000000 XMC_CCU8_SLICE_EnableTrap
    {standard input}:119    .text.XMC_CCU8_SLICE_IsTimerRunning:00000000 $t
    {standard input}:123    .text.XMC_CCU8_SLICE_IsTimerRunning:00000000 XMC_CCU8_SLICE_IsTimerRunning
    {standard input}:168    .text.XMC_CCU8_SLICE_StartTimer:00000000 $t
    {standard input}:172    .text.XMC_CCU8_SLICE_StartTimer:00000000 XMC_CCU8_SLICE_StartTimer
    {standard input}:211    .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:215    .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:254    .text.XMC_CCU8_SLICE_ClearTimer:00000000 $t
    {standard input}:258    .text.XMC_CCU8_SLICE_ClearTimer:00000000 XMC_CCU8_SLICE_ClearTimer
    {standard input}:297    .text.XMC_CCU8_SLICE_GetTimerPeriodMatch:00000000 $t
    {standard input}:301    .text.XMC_CCU8_SLICE_GetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_GetTimerPeriodMatch
    {standard input}:341    .text.XMC_CCU8_EnableShadowTransfer:00000000 $t
    {standard input}:345    .text.XMC_CCU8_EnableShadowTransfer:00000000 XMC_CCU8_EnableShadowTransfer
    {standard input}:385    .text.XMC_CCU8_SLICE_GetTimerValue:00000000 $t
    {standard input}:389    .text.XMC_CCU8_SLICE_GetTimerValue:00000000 XMC_CCU8_SLICE_GetTimerValue
    {standard input}:429    .text.XMC_CCU8_SLICE_EnableEvent:00000000 $t
    {standard input}:433    .text.XMC_CCU8_SLICE_EnableEvent:00000000 XMC_CCU8_SLICE_EnableEvent
    {standard input}:479    .text.XMC_CCU8_SLICE_ClearEvent:00000000 $t
    {standard input}:483    .text.XMC_CCU8_SLICE_ClearEvent:00000000 XMC_CCU8_SLICE_ClearEvent
    {standard input}:529    .text.XMC_CCU8_SLICE_GetEvent:00000000 $t
    {standard input}:533    .text.XMC_CCU8_SLICE_GetEvent:00000000 XMC_CCU8_SLICE_GetEvent
    {standard input}:582    .text.XMC_CCU8_SLICE_SetShadowTransferMode:00000000 $t
    {standard input}:586    .text.XMC_CCU8_SLICE_SetShadowTransferMode:00000000 XMC_CCU8_SLICE_SetShadowTransferMode
    {standard input}:635    .text.PWM_CCU8_GetAppVersion:00000000 $t
    {standard input}:640    .text.PWM_CCU8_GetAppVersion:00000000 PWM_CCU8_GetAppVersion
    {standard input}:701    .text.PWM_CCU8_Init:00000000 $t
    {standard input}:706    .text.PWM_CCU8_Init:00000000 PWM_CCU8_Init
    {standard input}:1324   .text.PWM_CCU8_lConfigure_Events:00000000 PWM_CCU8_lConfigure_Events
    {standard input}:937    .text.PWM_CCU8_lInit_Interrupt:00000000 PWM_CCU8_lInit_Interrupt
    {standard input}:1197   .text.PWM_CCU8_lInit_GPIO:00000000 PWM_CCU8_lInit_GPIO
    {standard input}:1610   .text.PWM_CCU8_Start:00000000 PWM_CCU8_Start
    {standard input}:933    .text.PWM_CCU8_lInit_Interrupt:00000000 $t
    {standard input}:1193   .text.PWM_CCU8_lInit_GPIO:00000000 $t
    {standard input}:1320   .text.PWM_CCU8_lConfigure_Events:00000000 $t
    {standard input}:1605   .text.PWM_CCU8_Start:00000000 $t
    {standard input}:1686   .text.PWM_CCU8_Stop:00000000 $t
    {standard input}:1691   .text.PWM_CCU8_Stop:00000000 PWM_CCU8_Stop
    {standard input}:1751   .text.PWM_CCU8_GetTimerValue:00000000 $t
    {standard input}:1756   .text.PWM_CCU8_GetTimerValue:00000000 PWM_CCU8_GetTimerValue
    {standard input}:1797   .text.PWM_CCU8_GetTimerStatus:00000000 $t
    {standard input}:1802   .text.PWM_CCU8_GetTimerStatus:00000000 PWM_CCU8_GetTimerStatus
    {standard input}:1843   .text.PWM_CCU8_SetFreqSymmetric:00000000 $t
    {standard input}:1848   .text.PWM_CCU8_SetFreqSymmetric:00000000 PWM_CCU8_SetFreqSymmetric
    {standard input}:2012   .text.PWM_CCU8_SetFreqSymmetric:000000fc $d
    {standard input}:2017   .text.PWM_CCU8_SetDutyCycleSymmetric:00000000 $t
    {standard input}:2022   .text.PWM_CCU8_SetDutyCycleSymmetric:00000000 PWM_CCU8_SetDutyCycleSymmetric
    {standard input}:2126   .text.PWM_CCU8_SetDutyCycleSymmetric:00000094 $d
    {standard input}:2131   .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric:00000000 $t
    {standard input}:2136   .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric:00000000 PWM_CCU8_SetFreqAndDutyCycleSymmetric
    {standard input}:2296   .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric:00000108 $d
    {standard input}:2301   .text.PWM_CCU8_SetFreqAsymmetric:00000000 $t
    {standard input}:2306   .text.PWM_CCU8_SetFreqAsymmetric:00000000 PWM_CCU8_SetFreqAsymmetric
    {standard input}:2530   .text.PWM_CCU8_SetFreqAsymmetric:00000188 $d
    {standard input}:2535   .text.PWM_CCU8_SetDutyCycleAsymmetric:00000000 $t
    {standard input}:2540   .text.PWM_CCU8_SetDutyCycleAsymmetric:00000000 PWM_CCU8_SetDutyCycleAsymmetric
    {standard input}:2749   .text.PWM_CCU8_SetDutyCycleAsymmetric:00000170 $d
    {standard input}:2754   .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric:00000000 $t
    {standard input}:2759   .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric:00000000 PWM_CCU8_SetFreqAndDutyCycleAsymmetric
    {standard input}:3008   .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric:000001c4 $d
    {standard input}:3013   .text.PWM_CCU8_SetDither:00000000 $t
    {standard input}:3018   .text.PWM_CCU8_SetDither:00000000 PWM_CCU8_SetDither
    {standard input}:3073   .text.PWM_CCU8_ClearTrap:00000000 $t
    {standard input}:3078   .text.PWM_CCU8_ClearTrap:00000000 PWM_CCU8_ClearTrap
    {standard input}:3115   .text.PWM_CCU8_SetDeadTime:00000000 $t
    {standard input}:3120   .text.PWM_CCU8_SetDeadTime:00000000 PWM_CCU8_SetDeadTime
    {standard input}:3167   .text.PWM_CCU8_GetInterruptStatus:00000000 $t
    {standard input}:3172   .text.PWM_CCU8_GetInterruptStatus:00000000 PWM_CCU8_GetInterruptStatus
    {standard input}:3220   .text.PWM_CCU8_ClearEvent:00000000 $t
    {standard input}:3225   .text.PWM_CCU8_ClearEvent:00000000 PWM_CCU8_ClearEvent
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GLOBAL_CCU8_Init
XMC_CCU8_SLICE_CompareInit
XMC_CCU8_SLICE_SetTimerPeriodMatch
XMC_CCU8_SLICE_SetTimerCompareMatch
XMC_CCU8_SetMultiChannelShadowTransferMode
XMC_CCU8_SLICE_DeadTimeInit
XMC_CCU8_SLICE_SetInterruptNode
XMC_GPIO_Init
XMC_CCU8_SLICE_ConfigureEvent
XMC_CCU8_SLICE_StartConfig
XMC_CCU8_SLICE_StopConfig
XMC_CCU8_SLICE_DirectionConfig
XMC_CCU8_SLICE_GateConfig
XMC_CCU8_SLICE_CountConfig
XMC_CCU8_SLICE_LoadConfig
XMC_CCU8_SLICE_LoadSelector
XMC_CCU8_SLICE_ModulationConfig
XMC_CCU8_SLICE_TrapConfig
XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
XMC_CCU8_SLICE_StatusBitOverrideConfig
XMC_CCU8_SLICE_EnableDithering
XMC_CCU8_SLICE_SetDeadTimeValue
