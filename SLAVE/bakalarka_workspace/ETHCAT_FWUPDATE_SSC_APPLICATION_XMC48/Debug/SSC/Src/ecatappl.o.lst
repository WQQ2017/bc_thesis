   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "ecatappl.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ECAT_GetALEventRegister,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ECAT_GetALEventRegister:
  25              	.LFB136:
  26              	 .file 1 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc/xmc_ecat.h"
   1:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
   2:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
   3:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @file xmc_ecat.h
   4:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @date 2015-12-27
   5:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
   6:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @cond
   7:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
   8:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   9:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  10:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  11:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * All rights reserved.                        
  12:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                             
  13:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * following conditions are met:   
  15:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  16:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * disclaimer.                        
  18:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * 
  19:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * 
  22:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  25:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  33:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  36:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  37:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Change History
  38:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * --------------
  39:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  40:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * 2015-12-27:
  41:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *     - Initial Version<br>
  42:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  43:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @endcond
  44:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  45:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  46:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  47:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @addtogroup XMClib XMC Peripheral Library
  48:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @{
  49:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  50:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  51:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  52:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @addtogroup ECAT
  53:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @brief EtherCAT Low level driver for XMC4800/XMC4300 series.
  54:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  55:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * EtherCAT is an Ethernet-based fieldbus system.
  56:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The EtherCAT Slave Controller (ECAT) read the data addressed to them while the telegram passes t
  57:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * An EtherCAT Slave Controller (ESC) takes care of the EtherCAT communication as an interface betw
  58:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * fieldbus and the slave application. EtherCAT uses standard IEEE 802.3 Ethernet frames, thus a st
  59:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * controller can be used and no special hardware is required on master side. EtherCAT has a reserv
  60:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * 0x88A4 that distinguishes it from other Ethernet frames. Thus, EtherCAT can run in parallel to o
  61:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * protocols. EtherCAT does not require the IP protocol, however it can be encapsulated in IP/UDP. 
  62:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Slave Controller processes the frame in hardware. Thus, communication performance is independent
  63:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * power.
  64:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  65:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The XMC_ECAT low level driver provides functions to configure and initialize the ECAT hardware p
  66:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * For EHTERCAT stack integration, the necessary hardware accees layer APIs shall be explicitly imp
  67:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * upon the stack provider. The XMC_ECAT lld layer provides only the hardware initialization functi
  68:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * basic functionalities.
  69:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @{
  70:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  71:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  72:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #ifndef XMC_ECAT_H
  73:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #define XMC_ECAT_H
  74:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  75:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  76:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * HEADER FILES
  77:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  78:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  79:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #include "xmc_common.h"
  80:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  81:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (ECAT0)
  82:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  83:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #include "xmc_ecat_map.h"
  84:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  85:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  86:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * MACROS
  87:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  88:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  89:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  90:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * ENUMS
  91:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  92:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
  93:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  94:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT status return values
  95:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  96:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** typedef enum XMC_ECAT_STATUS
  97:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** {
  98:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_OK    = 0U, /**< Driver accepted application request */
  99:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_BUSY  = 1U, /**< Driver is busy and cannot handle request */
 100:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_ERROR = 2U  /**< Driver could not fulfil application request */
 101:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_STATUS_t;
 102:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 103:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 104:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * EtherCAT event enumeration types
 105:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 106:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** typedef enum XMC_ECAT_EVENT
 107:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** {
 108:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_AL_CONTROL = ECAT_AL_EVENT_MASK_AL_CE_MASK_Msk, /**< Application control event mas
 109:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_LATCH = ECAT_AL_EVENT_MASK_DC_LE_MASK_Msk,  /**< Distributed Clock latch event 
 110:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_SYNC0 = ECAT_AL_EVENT_MASK_ST_S0_MASK_Msk, /**< State of distributed clock sync
 111:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_SYNC1 = ECAT_AL_EVENT_MASK_ST_S1_MASK_Msk, /**< State of distributed clock sync
 112:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM_ACTIVATION_REGISTER = ECAT_AL_EVENT_MASK_SM_A_MASK_Msk, /**< SyncManager activa
 113:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_EEPROM = ECAT_AL_EVENT_MASK_EEP_E_MASK_Msk, /**< EEPROM Emulation event mask*/
 114:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_WATCHDOG = ECAT_AL_EVENT_MASK_WP_D_MASK_Msk, /**< WATCHDOG process data event mask
 115:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM0 = ECAT_AL_EVENT_MASK_SMI_0_MASK_Msk, /**< Sync Manager 0 event mask*/
 116:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM1 = ECAT_AL_EVENT_MASK_SMI_1_MASK_Msk, /**< Sync Manager 1 event mask*/
 117:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM2 = ECAT_AL_EVENT_MASK_SMI_2_MASK_Msk, /**< Sync Manager 2 event mask*/
 118:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM3 = ECAT_AL_EVENT_MASK_SMI_3_MASK_Msk, /**< Sync Manager 3 event mask*/
 119:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM4 = ECAT_AL_EVENT_MASK_SMI_4_MASK_Msk, /**< Sync Manager 4 event mask*/
 120:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM5 = ECAT_AL_EVENT_MASK_SMI_5_MASK_Msk, /**< Sync Manager 5 event mask*/
 121:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM6 = ECAT_AL_EVENT_MASK_SMI_6_MASK_Msk, /**< Sync Manager 6 event mask*/
 122:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM7 = ECAT_AL_EVENT_MASK_SMI_7_MASK_Msk  /**< Sync Manager 7 event mask*/
 123:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_EVENT_t;
 124:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 125:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
 126:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * DATA STRUCTURES
 127:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
 128:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 129:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /* Anonymous structure/union guard start */
 130:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (__CC_ARM)
 131:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma push
 132:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma anon_unions
 133:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #elif defined (__TASKING__)
 134:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma warning 586
 135:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 136:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 137:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 138:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT port control data structure
 139:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 140:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** typedef struct XMC_ECAT_PORT_CTRL
 141:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** {
 142:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 143:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   {
 144:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 145:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 146:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t enable_rstreq: 1;     /**< Master can trigger a reset of the XMC4700 / XMC4800 (::bo
 147:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 7;                   /**< Reserved bits */
 148:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t latch_input0: 2;      /**< Latch input 0 selection (::XMC_ECAT_PORT_LATCHIN0_t) */
 149:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;                   /**< Reserved bits */
 150:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t latch_input1: 2;      /**< Latch input 1 selection (::XMC_ECAT_PORT_LATCHIN1_t) */
 151:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;                   /**< Reserved bits */
 152:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t phyaddr_offset: 5;    /**< Ethernet PHY address offset, address of port 0 */
 153:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 1;                   /**< Reserved bits */
 154:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t mdio: 2;              /**< Bidirectional, push-pull management data I/O line (::XMC_
 155:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 8;                   /**< Reserved bits */
 156:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 157:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 158:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 159:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   } common;
 160:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 161:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 162:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   {  
 163:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 164:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 165:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ECAT_PORT0_CTRL_RXD0_t) */
 166:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ECAT_PORT0_CTRL_RXD1_t) */
 167:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd2: 2;     /**< Receive data bit 2 (::XMC_ECAT_PORT0_CTRL_RXD2_t) */
 168:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd3: 2;     /**< Receive data bit 3 (::XMC_ECAT_PORT0_CTRL_RXD3_t) */
 169:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_err: 2;   /**< RX Error (::XMC_ECAT_PORT0_CTRL_RX_ERR_t) */
 170:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_dv: 2;    /**< RX Data valid (::XMC_ECAT_PORT0_CTRL_RX_DV_t) */
 171:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_clk: 2;   /**< RX Clock (::XMC_ECAT_PORT0_CTRL_RX_CLK_t) */
 172:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;          /**< Reserved bits */
 173:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t link: 2;     /**< Link status (::XMC_ECAT_PORT0_CTRL_LINK_t) */
 174:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 10;         /**< Reserved bits */
 175:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_clk: 2;   /**< TX Clock (::XMC_ECAT_PORT0_CTRL_TX_CLK_t) */
 176:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_shift: 2; /**< TX signal delay (::XMC_ECAT_PORT0_CTRL_TX_SHIFT_t) */
 177:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 178:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 179:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 180:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   } port0;
 181:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 182:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 183:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   {      
 184:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 185:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 186:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ECAT_PORT_CTRL_RXD0_t) */
 187:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ECAT_PORT_CTRL_RXD1_t) */
 188:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd2: 2;     /**< Receive data bit 2 (::XMC_ECAT_PORT_CTRL_RXD2_t) */
 189:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd3: 2;     /**< Receive data bit 3 (::XMC_ECAT_PORT_CTRL_RXD3_t) */
 190:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_err: 2;   /**< RX Error (::XMC_ECAT_PORT_CTRL_RX_ERR_t) */
 191:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_dv: 2;    /**< RX Data valid (::XMC_ECAT_PORT_CTRL_RX_DV_t) */
 192:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_clk: 2;   /**< RX Clock (::XMC_ECAT_PORT_CTRL_RX_CLK_t) */
 193:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;          /**< Reserved bits */
 194:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t link: 2;     /**< Link status (::XMC_ECAT_PORT_CTRL_LINK_t) */
 195:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 10;         /**< Reserved bits */
 196:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_clk: 2;   /**< TX Clock (::XMC_ECAT_PORT_CTRL_TX_CLK_t) */
 197:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_shift: 2; /**< TX signal delay (::XMC_ECAT_PORT1_CTRL_TX_SHIFT_t) */
 198:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 199:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 200:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 201:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   } port1;
 202:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   
 203:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_PORT_CTRL_t;
 204:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 205:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 206:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT EEPROM configuration area data structure
 207:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 208:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** typedef union XMC_ECAT_CONFIG
 209:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** {
 210:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   struct
 211:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   {
 212:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 8;
 213:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 214:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 2;
 215:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_dc_sync_out : 1;
 216:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_dc_latch_in : 1;
 217:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_enhanced_link_p0 : 1;
 218:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_enhanced_link_p1 : 1;
 219:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 2;
 220:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 221:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 16;
 222:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 223:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t sync_pulse_length; /**< Initialization value for Pulse Length of SYNC Signals register
 224:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 225:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 16;
 226:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 227:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t station_alias; /**< Initialization value for Configured Station Alias Address register
 228:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 229:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t : 16;
 230:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 231:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t : 16;
 232:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 233:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t checksum;
 234:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   };
 235:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 236:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   uint32_t dword[4]; /**< Four 32 bit double word equivalent to 8 16 bit configuration area word. *
 237:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_CONFIG_t;
 238:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 239:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /* Anonymous structure/union guard end */
 240:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (__CC_ARM)
 241:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma pop
 242:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #elif defined (__TASKING__)
 243:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma warning restore
 244:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 245:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 246:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
 247:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * API PROTOTYPES
 248:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
 249:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 250:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #ifdef __cplusplus
 251:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** extern "C" {
 252:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 253:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 254:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 255:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param config XMC_ECAT_CONFIG_t
 256:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t ECAT Initialization status
 257:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 258:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 259:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Initialize the Ethernet MAC peripheral <br>
 260:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 261:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 262:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 263:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * and loop-back settings.
 264:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 265:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Init(XMC_ECAT_CONFIG_t *const config);
 266:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 267:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 268:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 269:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 270:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 271:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 272:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enable the EtherCAT peripheral <br>
 273:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 274:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 275:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function de-asserts the peripheral reset.
 276:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 277:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Enable(void);
 278:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 279:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 280:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 281:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 282:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 283:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 284:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disable the EtherCAT peripheral <br>
 285:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 286:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 287:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function asserts the peripheral reset.
 288:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 289:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Disable(void);
 290:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 291:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 292:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param phy_addr PHY address
 293:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param reg_addr Register address
 294:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param data The destination to which the read data needs to be copied to.
 295:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 296:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t EtherCAT Read PHY API return status
 297:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 298:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 299:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Read a PHY register <br>
 300:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 301:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 302:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function reads a PHY register. It essentially polls busy bit during max
 303:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * PHY_TIMEOUT time and reads the information into 'data' when not busy.
 304:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 305:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** XMC_ECAT_STATUS_t XMC_ECAT_ReadPhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t *data);
 306:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 307:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 308:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param phy_addr PHY address
 309:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param reg_addr Register address
 310:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param data The data to write
 311:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t EtherCAT Write PHY API return status
 312:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 313:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 314:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Write a PHY register <br>
 315:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 316:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 317:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function reads a PHY register. It essentially writes the data and polls
 318:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * the busy bit until it is no longer busy.
 319:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 320:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** XMC_ECAT_STATUS_t XMC_ECAT_WritePhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t data);
 321:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 322:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 323:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param port_ctrl Port control configuration
 324:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 325:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 326:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 327:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Set port control configuration <br>
 328:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 329:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 330:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function sets the port control by writing the configuration into the ECAT CON register.
 331:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 332:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 333:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** __STATIC_INLINE void XMC_ECAT_SetPortControl(const XMC_ECAT_PORT_CTRL_t port_ctrl)
 334:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** {
 335:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CON = (uint32_t)port_ctrl.common.raw;
 336:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CONP0 = (uint32_t)port_ctrl.port0.raw;
 337:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CONP1 = (uint32_t)port_ctrl.port1.raw;
 338:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** }
 339:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 340:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 341:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param event Single or logically OR'd events specified in the enum type @refXMC_ECAT_EVENT_t
 342:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 343:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 344:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 345:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enable ECAT event(s) <br>
 346:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 347:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 348:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function can be used to enable ECAT event(s).
 349:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 350:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_EnableEvent(uint32_t event);
 351:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 352:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 353:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param event Single or logically OR'd events specified in the enum type @refXMC_ECAT_EVENT_t
 354:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 355:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 356:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 357:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disable an ECAT event(s) <br>
 358:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 359:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 360:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function can be used to disable ECAT event(s).
 361:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 362:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_DisableEvent(uint32_t event);
 363:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 364:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 365:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 366:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return uint32_t Event status
 367:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 368:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 369:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Get event status <br>
 370:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 371:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 372:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function returns the ECAT status and interrupt status as a single word. The user
 373:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * can then check the status of the events by using an appropriate mask.
 374:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 375:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** uint32_t XMC_ECAT_GetEventStatus(void);
 376:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 377:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 378:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 379:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param channel SyncManager channel number.
 380:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 381:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 382:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 383:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disables selected SyncManager channel <br>
 384:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 385:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 386:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Sets bit 0 of the corresponding 0x807 register.
 387:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 388:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_DisableSyncManChannel(const uint8_t channel);
 389:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 390:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 391:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param channel SyncManager channel number.
 392:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 393:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 394:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 395:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enables selected SyncManager channel <br>
 396:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 397:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 398:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Resets bit 0 of the corresponding 0x807 register.
 399:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 400:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_EnableSyncManChannel(const uint8_t channel);
 401:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** 
 402:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 403:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 404:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return uint16_t Content of register 0x220-0x221
 405:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 406:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 407:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Get content of AL event register <br>
 408:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 409:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 410:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  * Get the first two bytes of the AL Event register (0x220-0x221).
 411:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 412:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** __STATIC_INLINE uint16_t XMC_ECAT_GetALEventRegister(void)
 413:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** {
  27              	 .loc 1 413 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
 414:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h ****   return ((uint16_t)ECAT0->AL_EVENT_REQ);
  39              	 .loc 1 414 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 D3F82032 	 ldr r3,[r3,#544]
  42 000a 9BB2     	 uxth r3,r3
 415:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/XMCLib/inc\xmc_ecat.h **** }
  43              	 .loc 1 415 0
  44 000c 1846     	 mov r0,r3
  45 000e BD46     	 mov sp,r7
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 13
  48              	 
  49 0010 5DF8047B 	 ldr r7,[sp],#4
  50              	.LCFI3:
  51              	 .cfi_restore 7
  52              	 .cfi_def_cfa_offset 0
  53 0014 7047     	 bx lr
  54              	.L4:
  55 0016 00BF     	 .align 2
  56              	.L3:
  57 0018 00000154 	 .word 1409351680
  58              	 .cfi_endproc
  59              	.LFE136:
  61              	 .section .text.HW_EscRead,"ax",%progbits
  62              	 .align 2
  63              	 .thumb
  64              	 .thumb_func
  66              	HW_EscRead:
  67              	.LFB169:
  68              	 .file 2 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC/xmc_eschw.h"
   1:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
   2:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @file xmc_eschw.h
   3:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @date 2018-01-24
   4:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
   5:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * NOTE:
   6:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * This file is copied by DAVE. Any manual modification done to this file will be lost when the cod
   7:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
   8:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @cond
   9:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  10:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * ECAT_SSC v4.0.18 - ECAT_SSC APP initializes the XMC ESC and sets up the interface for Beckhoff E
  11:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  12:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Copyright (c) 2016-2018, Infineon Technologies AG
  13:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * All rights reserved.
  14:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  15:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * following conditions are met:
  17:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  18:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   disclaimer.
  20:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  21:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  23:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  24:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   products derived from this software without specific prior written permission.
  26:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  27:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  35:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  38:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  39:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Change History
  40:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * --------------
  41:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  42:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * 2016-02-05:
  43:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *     - Initial version
  44:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  45:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * 2018-01-24:
  46:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *     - Added HW_ClearTimer()
  47:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  48:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @endcond
  49:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  50:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
  51:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  52:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #ifndef XMC_ESCHW_H
  53:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define XMC_ESCHW_H
  54:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  55:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**************************************************************************************************
  56:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * HEADER FILES
  57:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  58:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #include "SSC/Src/esc.h"
  59:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #include "xmc_ecat.h"
  60:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #include "../E_EEPROM_XMC4/e_eeprom_xmc4.h"
  61:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  62:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  /*************************************************************************************************
  63:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   * MACROS
  64:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   *************************************************************************************************
  65:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  66:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define ECAT_TIMER_INC_P_MS (1U) /**< Timer increment value */
  67:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  68:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define pEsc ((uint8_t *)ECAT0)  /**< EtherCAT module address */
  69:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  70:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** extern uint8_t aEepromData[];
  71:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  72:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**************************************************************************************************
  73:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * API Prototypes
  74:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  75:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  76:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #ifdef __cplusplus
  77:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** extern "C" {
  78:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #endif
  79:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  80:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
  81:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @ingroup ECAT_SSC_apidoc
  82:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @{
  83:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
  84:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  85:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadDWord(DWordValue, Address)     ((DWordValue) = (UINT32)(((volatile UINT32 *)pEsc)
  86:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  87:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadDWordIsr(DWordValue, Address)  HW_EscReadDWord(DWordValue, Address)              
  88:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  89:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadWord(WordValue, Address)       ((WordValue) = (((volatile UINT16 *)pEsc)[((Addres
  90:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  91:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadWordIsr(WordValue, Address)    HW_EscReadWord(WordValue, Address)                
  92:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  93:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadByte(ByteValue, Address)       ((ByteValue) = (((volatile UINT8 *)pEsc)[(Address)
  94:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  95:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadByteIsr(ByteValue, Address)    HW_EscReadByte(ByteValue, Address)                
  96:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  97:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteDWord(DWordValue, Address)    ((((volatile UINT32 *)pEsc)[(Address>>2)]) = (DWor
  98:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  99:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteDWordIsr(DWordValue, Address) HW_EscWriteWord(DWordValue, Address)              
 100:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 101:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteWord(WordValue, Address)      ((((volatile UINT16 *)pEsc)[((Address)>>1)]) = (Wo
 102:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 103:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteWordIsr(WordValue, Address)   HW_EscWriteWord(WordValue, Address)               
 104:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 105:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteByte(ByteValue, Address)      ((((volatile UINT8 *)pEsc)[(Address)]) = (ByteValu
 106:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 107:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteByteIsr(ByteValue, Address)   HW_EscWriteByte(ByteValue, Address)               
 108:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 109:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 110:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief 16Bit ESC read access
 111:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 112:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local destination buffer.
 113:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 114:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 115:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 116:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 117:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 118:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 119:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 120:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Reads from the EtherCAT Slave Controller. This function is used to access ESC registers and the 
 121:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 122:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 123:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscRead(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 124:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
  69              	 .loc 2 124 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73 0000 80B5     	 push {r7,lr}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 8
  76              	 .cfi_offset 7,-8
  77              	 .cfi_offset 14,-4
  78 0002 82B0     	 sub sp,sp,#8
  79              	.LCFI5:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 7
  84 0006 7860     	 str r0,[r7,#4]
  85 0008 0B46     	 mov r3,r1
  86 000a 7B80     	 strh r3,[r7,#2]
  87 000c 1346     	 mov r3,r2
  88 000e 3B80     	 strh r3,[r7]
 125:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   memcpy(pData, &pEsc[Address], Len);
  89              	 .loc 2 125 0
  90 0010 7B88     	 ldrh r3,[r7,#2]
  91 0012 03F1A843 	 add r3,r3,#1409286144
  92 0016 03F58033 	 add r3,r3,#65536
  93 001a 3A88     	 ldrh r2,[r7]
  94 001c 7868     	 ldr r0,[r7,#4]
  95 001e 1946     	 mov r1,r3
  96 0020 FFF7FEFF 	 bl memcpy
 126:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
  97              	 .loc 2 126 0
  98 0024 0837     	 adds r7,r7,#8
  99              	.LCFI7:
 100              	 .cfi_def_cfa_offset 8
 101 0026 BD46     	 mov sp,r7
 102              	.LCFI8:
 103              	 .cfi_def_cfa_register 13
 104              	 
 105 0028 80BD     	 pop {r7,pc}
 106              	 .cfi_endproc
 107              	.LFE169:
 109 002a 00BF     	 .section .text.HW_EscReadIsr,"ax",%progbits
 110              	 .align 2
 111              	 .thumb
 112              	 .thumb_func
 114              	HW_EscReadIsr:
 115              	.LFB170:
 127:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 128:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 129:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Interrupt specific 16Bit ESC read access
 130:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 131:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local destination buffer.
 132:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 133:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 134:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 135:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 136:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 137:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 138:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 139:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Reads from the EtherCAT Slave Controller. This function is used to access ESC registers and the 
 140:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 141:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 142:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscReadIsr(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 143:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 116              	 .loc 2 143 0
 117              	 .cfi_startproc
 118              	 
 119              	 
 120 0000 80B5     	 push {r7,lr}
 121              	.LCFI9:
 122              	 .cfi_def_cfa_offset 8
 123              	 .cfi_offset 7,-8
 124              	 .cfi_offset 14,-4
 125 0002 82B0     	 sub sp,sp,#8
 126              	.LCFI10:
 127              	 .cfi_def_cfa_offset 16
 128 0004 00AF     	 add r7,sp,#0
 129              	.LCFI11:
 130              	 .cfi_def_cfa_register 7
 131 0006 7860     	 str r0,[r7,#4]
 132 0008 0B46     	 mov r3,r1
 133 000a 7B80     	 strh r3,[r7,#2]
 134 000c 1346     	 mov r3,r2
 135 000e 3B80     	 strh r3,[r7]
 144:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscRead(pData, Address, Len);
 136              	 .loc 2 144 0
 137 0010 7A88     	 ldrh r2,[r7,#2]
 138 0012 3B88     	 ldrh r3,[r7]
 139 0014 7868     	 ldr r0,[r7,#4]
 140 0016 1146     	 mov r1,r2
 141 0018 1A46     	 mov r2,r3
 142 001a FFF7FEFF 	 bl HW_EscRead
 145:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 143              	 .loc 2 145 0
 144 001e 0837     	 adds r7,r7,#8
 145              	.LCFI12:
 146              	 .cfi_def_cfa_offset 8
 147 0020 BD46     	 mov sp,r7
 148              	.LCFI13:
 149              	 .cfi_def_cfa_register 13
 150              	 
 151 0022 80BD     	 pop {r7,pc}
 152              	 .cfi_endproc
 153              	.LFE170:
 155              	 .section .text.HW_EscWrite,"ax",%progbits
 156              	 .align 2
 157              	 .thumb
 158              	 .thumb_func
 160              	HW_EscWrite:
 161              	.LFB172:
 146:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 147:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 148:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Reads data from the ESC and copies to slave mailbox memory.
 149:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 150:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local destination buffer.
 151:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 152:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 153:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 154:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 155:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 156:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 157:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 158:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Reads data from the ESC and copies to slave mailbox memory. If the local mailbox memory is also 
 159:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * application memory this function is equal to HW_EscRead.
 160:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 161:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 162:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscReadMbxMem(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 163:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 164:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscRead(pData, Address, Len);
 165:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 166:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 167:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 168:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief 16Bit ESC write access
 169:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 170:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local source buffer.
 171:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 172:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 173:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 174:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 175:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 176:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 177:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 178:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Writes from the EtherCAT Slave Controller. This function is used to access ESC registers and the
 179:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 180:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 181:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscWrite(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 182:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 162              	 .loc 2 182 0
 163              	 .cfi_startproc
 164              	 
 165              	 
 166 0000 80B5     	 push {r7,lr}
 167              	.LCFI14:
 168              	 .cfi_def_cfa_offset 8
 169              	 .cfi_offset 7,-8
 170              	 .cfi_offset 14,-4
 171 0002 82B0     	 sub sp,sp,#8
 172              	.LCFI15:
 173              	 .cfi_def_cfa_offset 16
 174 0004 00AF     	 add r7,sp,#0
 175              	.LCFI16:
 176              	 .cfi_def_cfa_register 7
 177 0006 7860     	 str r0,[r7,#4]
 178 0008 0B46     	 mov r3,r1
 179 000a 7B80     	 strh r3,[r7,#2]
 180 000c 1346     	 mov r3,r2
 181 000e 3B80     	 strh r3,[r7]
 183:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   memcpy(&pEsc[Address], pData, Len);
 182              	 .loc 2 183 0
 183 0010 7B88     	 ldrh r3,[r7,#2]
 184 0012 03F1A843 	 add r3,r3,#1409286144
 185 0016 03F58033 	 add r3,r3,#65536
 186 001a 3A88     	 ldrh r2,[r7]
 187 001c 1846     	 mov r0,r3
 188 001e 7968     	 ldr r1,[r7,#4]
 189 0020 FFF7FEFF 	 bl memcpy
 184:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 190              	 .loc 2 184 0
 191 0024 0837     	 adds r7,r7,#8
 192              	.LCFI17:
 193              	 .cfi_def_cfa_offset 8
 194 0026 BD46     	 mov sp,r7
 195              	.LCFI18:
 196              	 .cfi_def_cfa_register 13
 197              	 
 198 0028 80BD     	 pop {r7,pc}
 199              	 .cfi_endproc
 200              	.LFE172:
 202 002a 00BF     	 .section .text.HW_EscWriteIsr,"ax",%progbits
 203              	 .align 2
 204              	 .thumb
 205              	 .thumb_func
 207              	HW_EscWriteIsr:
 208              	.LFB173:
 185:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 186:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 187:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Interrupt specific 16Bit ESC write access
 188:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 189:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local source buffer.
 190:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 191:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 192:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 193:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 194:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 195:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 196:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 197:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Writes from the EtherCAT Slave Controller. This function is used to access ESC registers and the
 198:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 199:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 200:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscWriteIsr(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 201:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 209              	 .loc 2 201 0
 210              	 .cfi_startproc
 211              	 
 212              	 
 213 0000 80B5     	 push {r7,lr}
 214              	.LCFI19:
 215              	 .cfi_def_cfa_offset 8
 216              	 .cfi_offset 7,-8
 217              	 .cfi_offset 14,-4
 218 0002 82B0     	 sub sp,sp,#8
 219              	.LCFI20:
 220              	 .cfi_def_cfa_offset 16
 221 0004 00AF     	 add r7,sp,#0
 222              	.LCFI21:
 223              	 .cfi_def_cfa_register 7
 224 0006 7860     	 str r0,[r7,#4]
 225 0008 0B46     	 mov r3,r1
 226 000a 7B80     	 strh r3,[r7,#2]
 227 000c 1346     	 mov r3,r2
 228 000e 3B80     	 strh r3,[r7]
 202:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscWrite(pData, Address, Len);
 229              	 .loc 2 202 0
 230 0010 7A88     	 ldrh r2,[r7,#2]
 231 0012 3B88     	 ldrh r3,[r7]
 232 0014 7868     	 ldr r0,[r7,#4]
 233 0016 1146     	 mov r1,r2
 234 0018 1A46     	 mov r2,r3
 235 001a FFF7FEFF 	 bl HW_EscWrite
 203:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 236              	 .loc 2 203 0
 237 001e 0837     	 adds r7,r7,#8
 238              	.LCFI22:
 239              	 .cfi_def_cfa_offset 8
 240 0020 BD46     	 mov sp,r7
 241              	.LCFI23:
 242              	 .cfi_def_cfa_register 13
 243              	 
 244 0022 80BD     	 pop {r7,pc}
 245              	 .cfi_endproc
 246              	.LFE173:
 248              	 .section .text.HW_GetALEventRegister,"ax",%progbits
 249              	 .align 2
 250              	 .thumb
 251              	 .thumb_func
 253              	HW_GetALEventRegister:
 254              	.LFB175:
 204:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 205:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 206:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Writes data from the slave mailbox memory to ESC memory.
 207:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 208:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local source mailbox buffer.
 209:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 210:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 211:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 212:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 213:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 214:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 215:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 216:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Writes data from the slave mailbox memory to ESC memory. If the local mailbox memory is also loc
 217:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * application memory this function is equal to HW_EscWrite.
 218:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 219:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 220:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscWriteMbxMem(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 221:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 222:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscWrite(pData, Address, Len);
 223:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 224:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 225:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 226:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Get the first two bytes of the AL Event register
 227:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 228:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param None
 229:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 230:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return Content of register 0x220-0x221
 231:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 232:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 233:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 234:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 235:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 236:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 237:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE UINT16 HW_GetALEventRegister(void)
 238:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 255              	 .loc 2 238 0
 256              	 .cfi_startproc
 257              	 
 258              	 
 259 0000 80B5     	 push {r7,lr}
 260              	.LCFI24:
 261              	 .cfi_def_cfa_offset 8
 262              	 .cfi_offset 7,-8
 263              	 .cfi_offset 14,-4
 264 0002 00AF     	 add r7,sp,#0
 265              	.LCFI25:
 266              	 .cfi_def_cfa_register 7
 239:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   return XMC_ECAT_GetALEventRegister();
 267              	 .loc 2 239 0
 268 0004 FFF7FEFF 	 bl XMC_ECAT_GetALEventRegister
 269 0008 0346     	 mov r3,r0
 240:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 270              	 .loc 2 240 0
 271 000a 1846     	 mov r0,r3
 272 000c 80BD     	 pop {r7,pc}
 273              	 .cfi_endproc
 274              	.LFE175:
 276 000e 00BF     	 .section .text.HW_GetALEventRegister_Isr,"ax",%progbits
 277              	 .align 2
 278              	 .thumb
 279              	 .thumb_func
 281              	HW_GetALEventRegister_Isr:
 282              	.LFB176:
 241:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 242:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 243:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Get the first two bytes of the AL Event register from ISR.
 244:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 245:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param None
 246:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 247:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 248:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 249:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 250:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 251:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Special function for ESC access from interrupt service routines if required, otherwise this func
 252:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * HW_GetALEventRegister.
 253:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 254:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 255:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE UINT16 HW_GetALEventRegister_Isr(void)
 256:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 283              	 .loc 2 256 0
 284              	 .cfi_startproc
 285              	 
 286              	 
 287 0000 80B5     	 push {r7,lr}
 288              	.LCFI26:
 289              	 .cfi_def_cfa_offset 8
 290              	 .cfi_offset 7,-8
 291              	 .cfi_offset 14,-4
 292 0002 00AF     	 add r7,sp,#0
 293              	.LCFI27:
 294              	 .cfi_def_cfa_register 7
 257:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   return HW_GetALEventRegister();
 295              	 .loc 2 257 0
 296 0004 FFF7FEFF 	 bl HW_GetALEventRegister
 297 0008 0346     	 mov r3,r0
 258:C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 298              	 .loc 2 258 0
 299 000a 1846     	 mov r0,r3
 300 000c 80BD     	 pop {r7,pc}
 301              	 .cfi_endproc
 302              	.LFE176:
 304              	 .comm pEEPROM,4,4
 305              	 .comm bEcatWaitForInputUpdate,1,1
 306              	 .comm bEtherCATRunLed,1,1
 307              	 .comm bEtherCATErrorLed,1,1
 308              	 .comm bRunApplication,1,1
 309              	 .comm EepromReadSize,2,2
 310              	 .comm pAPPL_EEPROM_Read,4,4
 311              	 .comm pAPPL_EEPROM_Write,4,4
 312              	 .comm pAPPL_EEPROM_Reload,4,4
 313              	 .comm pAPPL_EEPROM_Store,4,4
 314              	 .comm pAPPL_FoeRead,4,4
 315              	 .comm pAPPL_FoeReadData,4,4
 316              	 .comm pAPPL_FoeError,4,4
 317              	 .comm pAPPL_FoeWrite,4,4
 318              	 .comm pAPPL_FoeWriteData,4,4
 319              	 .comm pAPPL_MainLoop,4,4
 320              	 .global aEepromData
 321 000e 00BF     	 .section .data.aEepromData,"aw",%progbits
 322              	 .align 2
 325              	aEepromData:
 326 0000 00       	 .byte 0
 327 0001 3C       	 .byte 60
 328 0002 00       	 .byte 0
 329 0003 00       	 .byte 0
 330 0004 FF       	 .byte -1
 331 0005 01       	 .byte 1
 332 0006 00       	 .byte 0
 333 0007 00       	 .byte 0
 334 0008 00       	 .byte 0
 335 0009 00       	 .byte 0
 336 000a 00       	 .byte 0
 337 000b 00       	 .byte 0
 338 000c 00       	 .byte 0
 339 000d 00       	 .byte 0
 340 000e 07       	 .byte 7
 341 000f 00       	 .byte 0
 342 0010 4E       	 .byte 78
 343 0011 03       	 .byte 3
 344 0012 00       	 .byte 0
 345 0013 00       	 .byte 0
 346 0014 00       	 .byte 0
 347 0015 00       	 .byte 0
 348 0016 00       	 .byte 0
 349 0017 00       	 .byte 0
 350 0018 00       	 .byte 0
 351 0019 00       	 .byte 0
 352 001a 00       	 .byte 0
 353 001b 00       	 .byte 0
 354 001c 00       	 .byte 0
 355 001d 00       	 .byte 0
 356 001e 00       	 .byte 0
 357 001f 00       	 .byte 0
 358 0020 00       	 .byte 0
 359 0021 00       	 .byte 0
 360 0022 00       	 .byte 0
 361 0023 00       	 .byte 0
 362 0024 00       	 .byte 0
 363 0025 00       	 .byte 0
 364 0026 00       	 .byte 0
 365 0027 00       	 .byte 0
 366 0028 00       	 .byte 0
 367 0029 10       	 .byte 16
 368 002a 80       	 .byte -128
 369 002b 00       	 .byte 0
 370 002c 80       	 .byte -128
 371 002d 10       	 .byte 16
 372 002e 80       	 .byte -128
 373 002f 00       	 .byte 0
 374 0030 00       	 .byte 0
 375 0031 10       	 .byte 16
 376 0032 80       	 .byte -128
 377 0033 00       	 .byte 0
 378 0034 80       	 .byte -128
 379 0035 10       	 .byte 16
 380 0036 80       	 .byte -128
 381 0037 00       	 .byte 0
 382 0038 0C       	 .byte 12
 383 0039 00       	 .byte 0
 384 003a 00       	 .byte 0
 385 003b 00       	 .byte 0
 386 003c 00       	 .byte 0
 387 003d 00       	 .byte 0
 388 003e 00       	 .byte 0
 389 003f 00       	 .byte 0
 390 0040 00       	 .byte 0
 391 0041 00       	 .byte 0
 392 0042 00       	 .byte 0
 393 0043 00       	 .byte 0
 394 0044 00       	 .byte 0
 395 0045 00       	 .byte 0
 396 0046 00       	 .byte 0
 397 0047 00       	 .byte 0
 398 0048 00       	 .byte 0
 399 0049 00       	 .byte 0
 400 004a 00       	 .byte 0
 401 004b 00       	 .byte 0
 402 004c 00       	 .byte 0
 403 004d 00       	 .byte 0
 404 004e 00       	 .byte 0
 405 004f 00       	 .byte 0
 406 0050 00       	 .byte 0
 407 0051 00       	 .byte 0
 408 0052 00       	 .byte 0
 409 0053 00       	 .byte 0
 410 0054 00       	 .byte 0
 411 0055 00       	 .byte 0
 412 0056 00       	 .byte 0
 413 0057 00       	 .byte 0
 414 0058 00       	 .byte 0
 415 0059 00       	 .byte 0
 416 005a 00       	 .byte 0
 417 005b 00       	 .byte 0
 418 005c 00       	 .byte 0
 419 005d 00       	 .byte 0
 420 005e 00       	 .byte 0
 421 005f 00       	 .byte 0
 422 0060 00       	 .byte 0
 423 0061 00       	 .byte 0
 424 0062 00       	 .byte 0
 425 0063 00       	 .byte 0
 426 0064 00       	 .byte 0
 427 0065 00       	 .byte 0
 428 0066 00       	 .byte 0
 429 0067 00       	 .byte 0
 430 0068 00       	 .byte 0
 431 0069 00       	 .byte 0
 432 006a 00       	 .byte 0
 433 006b 00       	 .byte 0
 434 006c 00       	 .byte 0
 435 006d 00       	 .byte 0
 436 006e 00       	 .byte 0
 437 006f 00       	 .byte 0
 438 0070 00       	 .byte 0
 439 0071 00       	 .byte 0
 440 0072 00       	 .byte 0
 441 0073 00       	 .byte 0
 442 0074 00       	 .byte 0
 443 0075 00       	 .byte 0
 444 0076 00       	 .byte 0
 445 0077 00       	 .byte 0
 446 0078 00       	 .byte 0
 447 0079 00       	 .byte 0
 448 007a 00       	 .byte 0
 449 007b 00       	 .byte 0
 450 007c 0F       	 .byte 15
 451 007d 00       	 .byte 0
 452 007e 01       	 .byte 1
 453 007f 00       	 .byte 0
 454 0080 0A       	 .byte 10
 455 0081 00       	 .byte 0
 456 0082 CD       	 .byte -51
 457 0083 00       	 .byte 0
 458 0084 1E       	 .byte 30
 459 0085 0E       	 .byte 14
 460 0086 49       	 .byte 73
 461 0087 6E       	 .byte 110
 462 0088 66       	 .byte 102
 463 0089 69       	 .byte 105
 464 008a 6E       	 .byte 110
 465 008b 65       	 .byte 101
 466 008c 6F       	 .byte 111
 467 008d 6E       	 .byte 110
 468 008e 20       	 .byte 32
 469 008f 73       	 .byte 115
 470 0090 6C       	 .byte 108
 471 0091 61       	 .byte 97
 472 0092 76       	 .byte 118
 473 0093 65       	 .byte 101
 474 0094 07       	 .byte 7
 475 0095 58       	 .byte 88
 476 0096 4D       	 .byte 77
 477 0097 43       	 .byte 67
 478 0098 5F       	 .byte 95
 479 0099 45       	 .byte 69
 480 009a 53       	 .byte 83
 481 009b 43       	 .byte 67
 482 009c 08       	 .byte 8
 483 009d 53       	 .byte 83
 484 009e 79       	 .byte 121
 485 009f 6E       	 .byte 110
 486 00a0 63       	 .byte 99
 487 00a1 68       	 .byte 104
 488 00a2 72       	 .byte 114
 489 00a3 6F       	 .byte 111
 490 00a4 6E       	 .byte 110
 491 00a5 0B       	 .byte 11
 492 00a6 53       	 .byte 83
 493 00a7 4D       	 .byte 77
 494 00a8 2D       	 .byte 45
 495 00a9 53       	 .byte 83
 496 00aa 79       	 .byte 121
 497 00ab 6E       	 .byte 110
 498 00ac 63       	 .byte 99
 499 00ad 68       	 .byte 104
 500 00ae 72       	 .byte 114
 501 00af 6F       	 .byte 111
 502 00b0 6E       	 .byte 110
 503 00b1 1F       	 .byte 31
 504 00b2 49       	 .byte 73
 505 00b3 4E       	 .byte 78
 506 00b4 5F       	 .byte 95
 507 00b5 47       	 .byte 71
 508 00b6 45       	 .byte 69
 509 00b7 4E       	 .byte 78
 510 00b8 45       	 .byte 69
 511 00b9 52       	 .byte 82
 512 00ba 49       	 .byte 73
 513 00bb 43       	 .byte 67
 514 00bc 20       	 .byte 32
 515 00bd 70       	 .byte 112
 516 00be 72       	 .byte 114
 517 00bf 6F       	 .byte 111
 518 00c0 63       	 .byte 99
 519 00c1 65       	 .byte 101
 520 00c2 73       	 .byte 115
 521 00c3 73       	 .byte 115
 522 00c4 20       	 .byte 32
 523 00c5 64       	 .byte 100
 524 00c6 61       	 .byte 97
 525 00c7 74       	 .byte 116
 526 00c8 61       	 .byte 97
 527 00c9 20       	 .byte 32
 528 00ca 6D       	 .byte 109
 529 00cb 61       	 .byte 97
 530 00cc 70       	 .byte 112
 531 00cd 70       	 .byte 112
 532 00ce 69       	 .byte 105
 533 00cf 6E       	 .byte 110
 534 00d0 67       	 .byte 103
 535 00d1 0B       	 .byte 11
 536 00d2 49       	 .byte 73
 537 00d3 4E       	 .byte 78
 538 00d4 5F       	 .byte 95
 539 00d5 47       	 .byte 71
 540 00d6 45       	 .byte 69
 541 00d7 4E       	 .byte 78
 542 00d8 5F       	 .byte 95
 543 00d9 49       	 .byte 73
 544 00da 4E       	 .byte 78
 545 00db 54       	 .byte 84
 546 00dc 31       	 .byte 49
 547 00dd 0B       	 .byte 11
 548 00de 49       	 .byte 73
 549 00df 4E       	 .byte 78
 550 00e0 5F       	 .byte 95
 551 00e1 47       	 .byte 71
 552 00e2 45       	 .byte 69
 553 00e3 4E       	 .byte 78
 554 00e4 5F       	 .byte 95
 555 00e5 49       	 .byte 73
 556 00e6 4E       	 .byte 78
 557 00e7 54       	 .byte 84
 558 00e8 32       	 .byte 50
 559 00e9 0B       	 .byte 11
 560 00ea 49       	 .byte 73
 561 00eb 4E       	 .byte 78
 562 00ec 5F       	 .byte 95
 563 00ed 47       	 .byte 71
 564 00ee 45       	 .byte 69
 565 00ef 4E       	 .byte 78
 566 00f0 5F       	 .byte 95
 567 00f1 49       	 .byte 73
 568 00f2 4E       	 .byte 78
 569 00f3 54       	 .byte 84
 570 00f4 33       	 .byte 51
 571 00f5 0B       	 .byte 11
 572 00f6 49       	 .byte 73
 573 00f7 4E       	 .byte 78
 574 00f8 5F       	 .byte 95
 575 00f9 47       	 .byte 71
 576 00fa 45       	 .byte 69
 577 00fb 4E       	 .byte 78
 578 00fc 5F       	 .byte 95
 579 00fd 49       	 .byte 73
 580 00fe 4E       	 .byte 78
 581 00ff 54       	 .byte 84
 582 0100 34       	 .byte 52
 583 0101 0B       	 .byte 11
 584 0102 49       	 .byte 73
 585 0103 4E       	 .byte 78
 586 0104 5F       	 .byte 95
 587 0105 47       	 .byte 71
 588 0106 45       	 .byte 69
 589 0107 4E       	 .byte 78
 590 0108 5F       	 .byte 95
 591 0109 42       	 .byte 66
 592 010a 69       	 .byte 105
 593 010b 74       	 .byte 116
 594 010c 31       	 .byte 49
 595 010d 0B       	 .byte 11
 596 010e 49       	 .byte 73
 597 010f 4E       	 .byte 78
 598 0110 5F       	 .byte 95
 599 0111 47       	 .byte 71
 600 0112 45       	 .byte 69
 601 0113 4E       	 .byte 78
 602 0114 5F       	 .byte 95
 603 0115 42       	 .byte 66
 604 0116 69       	 .byte 105
 605 0117 74       	 .byte 116
 606 0118 32       	 .byte 50
 607 0119 0B       	 .byte 11
 608 011a 49       	 .byte 73
 609 011b 4E       	 .byte 78
 610 011c 5F       	 .byte 95
 611 011d 47       	 .byte 71
 612 011e 45       	 .byte 69
 613 011f 4E       	 .byte 78
 614 0120 5F       	 .byte 95
 615 0121 42       	 .byte 66
 616 0122 69       	 .byte 105
 617 0123 74       	 .byte 116
 618 0124 33       	 .byte 51
 619 0125 0B       	 .byte 11
 620 0126 49       	 .byte 73
 621 0127 4E       	 .byte 78
 622 0128 5F       	 .byte 95
 623 0129 47       	 .byte 71
 624 012a 45       	 .byte 69
 625 012b 4E       	 .byte 78
 626 012c 5F       	 .byte 95
 627 012d 42       	 .byte 66
 628 012e 69       	 .byte 105
 629 012f 74       	 .byte 116
 630 0130 34       	 .byte 52
 631 0131 0B       	 .byte 11
 632 0132 49       	 .byte 73
 633 0133 4E       	 .byte 78
 634 0134 5F       	 .byte 95
 635 0135 47       	 .byte 71
 636 0136 45       	 .byte 69
 637 0137 4E       	 .byte 78
 638 0138 5F       	 .byte 95
 639 0139 42       	 .byte 66
 640 013a 69       	 .byte 105
 641 013b 74       	 .byte 116
 642 013c 35       	 .byte 53
 643 013d 0B       	 .byte 11
 644 013e 49       	 .byte 73
 645 013f 4E       	 .byte 78
 646 0140 5F       	 .byte 95
 647 0141 47       	 .byte 71
 648 0142 45       	 .byte 69
 649 0143 4E       	 .byte 78
 650 0144 5F       	 .byte 95
 651 0145 42       	 .byte 66
 652 0146 69       	 .byte 105
 653 0147 74       	 .byte 116
 654 0148 36       	 .byte 54
 655 0149 0B       	 .byte 11
 656 014a 49       	 .byte 73
 657 014b 4E       	 .byte 78
 658 014c 5F       	 .byte 95
 659 014d 47       	 .byte 71
 660 014e 45       	 .byte 69
 661 014f 4E       	 .byte 78
 662 0150 5F       	 .byte 95
 663 0151 42       	 .byte 66
 664 0152 69       	 .byte 105
 665 0153 74       	 .byte 116
 666 0154 37       	 .byte 55
 667 0155 0B       	 .byte 11
 668 0156 49       	 .byte 73
 669 0157 4E       	 .byte 78
 670 0158 5F       	 .byte 95
 671 0159 47       	 .byte 71
 672 015a 45       	 .byte 69
 673 015b 4E       	 .byte 78
 674 015c 5F       	 .byte 95
 675 015d 42       	 .byte 66
 676 015e 69       	 .byte 105
 677 015f 74       	 .byte 116
 678 0160 38       	 .byte 56
 679 0161 20       	 .byte 32
 680 0162 4F       	 .byte 79
 681 0163 55       	 .byte 85
 682 0164 54       	 .byte 84
 683 0165 5F       	 .byte 95
 684 0166 47       	 .byte 71
 685 0167 45       	 .byte 69
 686 0168 4E       	 .byte 78
 687 0169 45       	 .byte 69
 688 016a 52       	 .byte 82
 689 016b 49       	 .byte 73
 690 016c 43       	 .byte 67
 691 016d 20       	 .byte 32
 692 016e 70       	 .byte 112
 693 016f 72       	 .byte 114
 694 0170 6F       	 .byte 111
 695 0171 63       	 .byte 99
 696 0172 65       	 .byte 101
 697 0173 73       	 .byte 115
 698 0174 73       	 .byte 115
 699 0175 20       	 .byte 32
 700 0176 64       	 .byte 100
 701 0177 61       	 .byte 97
 702 0178 74       	 .byte 116
 703 0179 61       	 .byte 97
 704 017a 20       	 .byte 32
 705 017b 6D       	 .byte 109
 706 017c 61       	 .byte 97
 707 017d 70       	 .byte 112
 708 017e 70       	 .byte 112
 709 017f 69       	 .byte 105
 710 0180 6E       	 .byte 110
 711 0181 67       	 .byte 103
 712 0182 0C       	 .byte 12
 713 0183 4F       	 .byte 79
 714 0184 55       	 .byte 85
 715 0185 54       	 .byte 84
 716 0186 5F       	 .byte 95
 717 0187 47       	 .byte 71
 718 0188 45       	 .byte 69
 719 0189 4E       	 .byte 78
 720 018a 5F       	 .byte 95
 721 018b 49       	 .byte 73
 722 018c 4E       	 .byte 78
 723 018d 54       	 .byte 84
 724 018e 31       	 .byte 49
 725 018f 0C       	 .byte 12
 726 0190 4F       	 .byte 79
 727 0191 55       	 .byte 85
 728 0192 54       	 .byte 84
 729 0193 5F       	 .byte 95
 730 0194 47       	 .byte 71
 731 0195 45       	 .byte 69
 732 0196 4E       	 .byte 78
 733 0197 5F       	 .byte 95
 734 0198 49       	 .byte 73
 735 0199 4E       	 .byte 78
 736 019a 54       	 .byte 84
 737 019b 32       	 .byte 50
 738 019c 0C       	 .byte 12
 739 019d 4F       	 .byte 79
 740 019e 55       	 .byte 85
 741 019f 54       	 .byte 84
 742 01a0 5F       	 .byte 95
 743 01a1 47       	 .byte 71
 744 01a2 45       	 .byte 69
 745 01a3 4E       	 .byte 78
 746 01a4 5F       	 .byte 95
 747 01a5 49       	 .byte 73
 748 01a6 4E       	 .byte 78
 749 01a7 54       	 .byte 84
 750 01a8 33       	 .byte 51
 751 01a9 0C       	 .byte 12
 752 01aa 4F       	 .byte 79
 753 01ab 55       	 .byte 85
 754 01ac 54       	 .byte 84
 755 01ad 5F       	 .byte 95
 756 01ae 47       	 .byte 71
 757 01af 45       	 .byte 69
 758 01b0 4E       	 .byte 78
 759 01b1 5F       	 .byte 95
 760 01b2 49       	 .byte 73
 761 01b3 4E       	 .byte 78
 762 01b4 54       	 .byte 84
 763 01b5 34       	 .byte 52
 764 01b6 0C       	 .byte 12
 765 01b7 4F       	 .byte 79
 766 01b8 55       	 .byte 85
 767 01b9 54       	 .byte 84
 768 01ba 5F       	 .byte 95
 769 01bb 47       	 .byte 71
 770 01bc 45       	 .byte 69
 771 01bd 4E       	 .byte 78
 772 01be 5F       	 .byte 95
 773 01bf 42       	 .byte 66
 774 01c0 69       	 .byte 105
 775 01c1 74       	 .byte 116
 776 01c2 31       	 .byte 49
 777 01c3 0C       	 .byte 12
 778 01c4 4F       	 .byte 79
 779 01c5 55       	 .byte 85
 780 01c6 54       	 .byte 84
 781 01c7 5F       	 .byte 95
 782 01c8 47       	 .byte 71
 783 01c9 45       	 .byte 69
 784 01ca 4E       	 .byte 78
 785 01cb 5F       	 .byte 95
 786 01cc 42       	 .byte 66
 787 01cd 69       	 .byte 105
 788 01ce 74       	 .byte 116
 789 01cf 32       	 .byte 50
 790 01d0 0C       	 .byte 12
 791 01d1 4F       	 .byte 79
 792 01d2 55       	 .byte 85
 793 01d3 54       	 .byte 84
 794 01d4 5F       	 .byte 95
 795 01d5 47       	 .byte 71
 796 01d6 45       	 .byte 69
 797 01d7 4E       	 .byte 78
 798 01d8 5F       	 .byte 95
 799 01d9 42       	 .byte 66
 800 01da 69       	 .byte 105
 801 01db 74       	 .byte 116
 802 01dc 33       	 .byte 51
 803 01dd 0C       	 .byte 12
 804 01de 4F       	 .byte 79
 805 01df 55       	 .byte 85
 806 01e0 54       	 .byte 84
 807 01e1 5F       	 .byte 95
 808 01e2 47       	 .byte 71
 809 01e3 45       	 .byte 69
 810 01e4 4E       	 .byte 78
 811 01e5 5F       	 .byte 95
 812 01e6 42       	 .byte 66
 813 01e7 69       	 .byte 105
 814 01e8 74       	 .byte 116
 815 01e9 34       	 .byte 52
 816 01ea 0C       	 .byte 12
 817 01eb 4F       	 .byte 79
 818 01ec 55       	 .byte 85
 819 01ed 54       	 .byte 84
 820 01ee 5F       	 .byte 95
 821 01ef 47       	 .byte 71
 822 01f0 45       	 .byte 69
 823 01f1 4E       	 .byte 78
 824 01f2 5F       	 .byte 95
 825 01f3 42       	 .byte 66
 826 01f4 69       	 .byte 105
 827 01f5 74       	 .byte 116
 828 01f6 35       	 .byte 53
 829 01f7 0C       	 .byte 12
 830 01f8 4F       	 .byte 79
 831 01f9 55       	 .byte 85
 832 01fa 54       	 .byte 84
 833 01fb 5F       	 .byte 95
 834 01fc 47       	 .byte 71
 835 01fd 45       	 .byte 69
 836 01fe 4E       	 .byte 78
 837 01ff 5F       	 .byte 95
 838 0200 42       	 .byte 66
 839 0201 69       	 .byte 105
 840 0202 74       	 .byte 116
 841 0203 36       	 .byte 54
 842 0204 0C       	 .byte 12
 843 0205 4F       	 .byte 79
 844 0206 55       	 .byte 85
 845 0207 54       	 .byte 84
 846 0208 5F       	 .byte 95
 847 0209 47       	 .byte 71
 848 020a 45       	 .byte 69
 849 020b 4E       	 .byte 78
 850 020c 5F       	 .byte 95
 851 020d 42       	 .byte 66
 852 020e 69       	 .byte 105
 853 020f 74       	 .byte 116
 854 0210 37       	 .byte 55
 855 0211 0C       	 .byte 12
 856 0212 4F       	 .byte 79
 857 0213 55       	 .byte 85
 858 0214 54       	 .byte 84
 859 0215 5F       	 .byte 95
 860 0216 47       	 .byte 71
 861 0217 45       	 .byte 69
 862 0218 4E       	 .byte 78
 863 0219 5F       	 .byte 95
 864 021a 42       	 .byte 66
 865 021b 69       	 .byte 105
 866 021c 74       	 .byte 116
 867 021d 38       	 .byte 56
 868 021e 1E       	 .byte 30
 869 021f 00       	 .byte 0
 870 0220 10       	 .byte 16
 871 0221 00       	 .byte 0
 872 0222 01       	 .byte 1
 873 0223 00       	 .byte 0
 874 0224 02       	 .byte 2
 875 0225 02       	 .byte 2
 876 0226 00       	 .byte 0
 877 0227 23       	 .byte 35
 878 0228 01       	 .byte 1
 879 0229 00       	 .byte 0
 880 022a 00       	 .byte 0
 881 022b 00       	 .byte 0
 882 022c 00       	 .byte 0
 883 022d 04       	 .byte 4
 884 022e 00       	 .byte 0
 885 022f 00       	 .byte 0
 886 0230 01       	 .byte 1
 887 0231 00       	 .byte 0
 888 0232 11       	 .byte 17
 889 0233 00       	 .byte 0
 890 0234 00       	 .byte 0
 891 0235 00       	 .byte 0
 892 0236 00       	 .byte 0
 893 0237 00       	 .byte 0
 894 0238 00       	 .byte 0
 895 0239 00       	 .byte 0
 896 023a 00       	 .byte 0
 897 023b 00       	 .byte 0
 898 023c 00       	 .byte 0
 899 023d 00       	 .byte 0
 900 023e 00       	 .byte 0
 901 023f 00       	 .byte 0
 902 0240 00       	 .byte 0
 903 0241 00       	 .byte 0
 904 0242 28       	 .byte 40
 905 0243 00       	 .byte 0
 906 0244 02       	 .byte 2
 907 0245 00       	 .byte 0
 908 0246 01       	 .byte 1
 909 0247 02       	 .byte 2
 910 0248 03       	 .byte 3
 911 0249 FF       	 .byte -1
 912 024a 29       	 .byte 41
 913 024b 00       	 .byte 0
 914 024c 10       	 .byte 16
 915 024d 00       	 .byte 0
 916 024e 00       	 .byte 0
 917 024f 10       	 .byte 16
 918 0250 80       	 .byte -128
 919 0251 00       	 .byte 0
 920 0252 26       	 .byte 38
 921 0253 00       	 .byte 0
 922 0254 01       	 .byte 1
 923 0255 01       	 .byte 1
 924 0256 80       	 .byte -128
 925 0257 10       	 .byte 16
 926 0258 80       	 .byte -128
 927 0259 00       	 .byte 0
 928 025a 22       	 .byte 34
 929 025b 00       	 .byte 0
 930 025c 01       	 .byte 1
 931 025d 02       	 .byte 2
 932 025e 00       	 .byte 0
 933 025f 11       	 .byte 17
 934 0260 09       	 .byte 9
 935 0261 00       	 .byte 0
 936 0262 64       	 .byte 100
 937 0263 00       	 .byte 0
 938 0264 01       	 .byte 1
 939 0265 03       	 .byte 3
 940 0266 00       	 .byte 0
 941 0267 14       	 .byte 20
 942 0268 09       	 .byte 9
 943 0269 00       	 .byte 0
 944 026a 20       	 .byte 32
 945 026b 00       	 .byte 0
 946 026c 01       	 .byte 1
 947 026d 04       	 .byte 4
 948 026e 32       	 .byte 50
 949 026f 00       	 .byte 0
 950 0270 34       	 .byte 52
 951 0271 00       	 .byte 0
 952 0272 00       	 .byte 0
 953 0273 1A       	 .byte 26
 954 0274 0C       	 .byte 12
 955 0275 03       	 .byte 3
 956 0276 00       	 .byte 0
 957 0277 05       	 .byte 5
 958 0278 00       	 .byte 0
 959 0279 00       	 .byte 0
 960 027a 00       	 .byte 0
 961 027b 60       	 .byte 96
 962 027c 01       	 .byte 1
 963 027d 06       	 .byte 6
 964 027e 06       	 .byte 6
 965 027f 10       	 .byte 16
 966 0280 00       	 .byte 0
 967 0281 00       	 .byte 0
 968 0282 00       	 .byte 0
 969 0283 60       	 .byte 96
 970 0284 02       	 .byte 2
 971 0285 07       	 .byte 7
 972 0286 06       	 .byte 6
 973 0287 10       	 .byte 16
 974 0288 00       	 .byte 0
 975 0289 00       	 .byte 0
 976 028a 00       	 .byte 0
 977 028b 60       	 .byte 96
 978 028c 03       	 .byte 3
 979 028d 08       	 .byte 8
 980 028e 06       	 .byte 6
 981 028f 10       	 .byte 16
 982 0290 00       	 .byte 0
 983 0291 00       	 .byte 0
 984 0292 00       	 .byte 0
 985 0293 60       	 .byte 96
 986 0294 04       	 .byte 4
 987 0295 09       	 .byte 9
 988 0296 06       	 .byte 6
 989 0297 10       	 .byte 16
 990 0298 00       	 .byte 0
 991 0299 00       	 .byte 0
 992 029a 00       	 .byte 0
 993 029b 60       	 .byte 96
 994 029c 05       	 .byte 5
 995 029d 0A       	 .byte 10
 996 029e 01       	 .byte 1
 997 029f 01       	 .byte 1
 998 02a0 00       	 .byte 0
 999 02a1 00       	 .byte 0
 1000 02a2 00       	 .byte 0
 1001 02a3 60       	 .byte 96
 1002 02a4 06       	 .byte 6
 1003 02a5 0B       	 .byte 11
 1004 02a6 01       	 .byte 1
 1005 02a7 01       	 .byte 1
 1006 02a8 00       	 .byte 0
 1007 02a9 00       	 .byte 0
 1008 02aa 00       	 .byte 0
 1009 02ab 60       	 .byte 96
 1010 02ac 07       	 .byte 7
 1011 02ad 0C       	 .byte 12
 1012 02ae 01       	 .byte 1
 1013 02af 01       	 .byte 1
 1014 02b0 00       	 .byte 0
 1015 02b1 00       	 .byte 0
 1016 02b2 00       	 .byte 0
 1017 02b3 60       	 .byte 96
 1018 02b4 08       	 .byte 8
 1019 02b5 0D       	 .byte 13
 1020 02b6 01       	 .byte 1
 1021 02b7 01       	 .byte 1
 1022 02b8 00       	 .byte 0
 1023 02b9 00       	 .byte 0
 1024 02ba 00       	 .byte 0
 1025 02bb 60       	 .byte 96
 1026 02bc 09       	 .byte 9
 1027 02bd 0E       	 .byte 14
 1028 02be 01       	 .byte 1
 1029 02bf 01       	 .byte 1
 1030 02c0 00       	 .byte 0
 1031 02c1 00       	 .byte 0
 1032 02c2 00       	 .byte 0
 1033 02c3 60       	 .byte 96
 1034 02c4 0A       	 .byte 10
 1035 02c5 0F       	 .byte 15
 1036 02c6 01       	 .byte 1
 1037 02c7 01       	 .byte 1
 1038 02c8 00       	 .byte 0
 1039 02c9 00       	 .byte 0
 1040 02ca 00       	 .byte 0
 1041 02cb 60       	 .byte 96
 1042 02cc 0B       	 .byte 11
 1043 02cd 10       	 .byte 16
 1044 02ce 01       	 .byte 1
 1045 02cf 01       	 .byte 1
 1046 02d0 00       	 .byte 0
 1047 02d1 00       	 .byte 0
 1048 02d2 00       	 .byte 0
 1049 02d3 60       	 .byte 96
 1050 02d4 0C       	 .byte 12
 1051 02d5 11       	 .byte 17
 1052 02d6 01       	 .byte 1
 1053 02d7 01       	 .byte 1
 1054 02d8 00       	 .byte 0
 1055 02d9 00       	 .byte 0
 1056 02da 33       	 .byte 51
 1057 02db 00       	 .byte 0
 1058 02dc 34       	 .byte 52
 1059 02dd 00       	 .byte 0
 1060 02de 00       	 .byte 0
 1061 02df 16       	 .byte 22
 1062 02e0 0C       	 .byte 12
 1063 02e1 02       	 .byte 2
 1064 02e2 00       	 .byte 0
 1065 02e3 12       	 .byte 18
 1066 02e4 00       	 .byte 0
 1067 02e5 00       	 .byte 0
 1068 02e6 00       	 .byte 0
 1069 02e7 70       	 .byte 112
 1070 02e8 01       	 .byte 1
 1071 02e9 13       	 .byte 19
 1072 02ea 06       	 .byte 6
 1073 02eb 10       	 .byte 16
 1074 02ec 00       	 .byte 0
 1075 02ed 00       	 .byte 0
 1076 02ee 00       	 .byte 0
 1077 02ef 70       	 .byte 112
 1078 02f0 02       	 .byte 2
 1079 02f1 14       	 .byte 20
 1080 02f2 06       	 .byte 6
 1081 02f3 10       	 .byte 16
 1082 02f4 00       	 .byte 0
 1083 02f5 00       	 .byte 0
 1084 02f6 00       	 .byte 0
 1085 02f7 70       	 .byte 112
 1086 02f8 03       	 .byte 3
 1087 02f9 15       	 .byte 21
 1088 02fa 06       	 .byte 6
 1089 02fb 10       	 .byte 16
 1090 02fc 00       	 .byte 0
 1091 02fd 00       	 .byte 0
 1092 02fe 00       	 .byte 0
 1093 02ff 70       	 .byte 112
 1094 0300 04       	 .byte 4
 1095 0301 16       	 .byte 22
 1096 0302 06       	 .byte 6
 1097 0303 10       	 .byte 16
 1098 0304 00       	 .byte 0
 1099 0305 00       	 .byte 0
 1100 0306 00       	 .byte 0
 1101 0307 70       	 .byte 112
 1102 0308 05       	 .byte 5
 1103 0309 17       	 .byte 23
 1104 030a 01       	 .byte 1
 1105 030b 01       	 .byte 1
 1106 030c 00       	 .byte 0
 1107 030d 00       	 .byte 0
 1108 030e 00       	 .byte 0
 1109 030f 70       	 .byte 112
 1110 0310 06       	 .byte 6
 1111 0311 18       	 .byte 24
 1112 0312 01       	 .byte 1
 1113 0313 01       	 .byte 1
 1114 0314 00       	 .byte 0
 1115 0315 00       	 .byte 0
 1116 0316 00       	 .byte 0
 1117 0317 70       	 .byte 112
 1118 0318 07       	 .byte 7
 1119 0319 19       	 .byte 25
 1120 031a 01       	 .byte 1
 1121 031b 01       	 .byte 1
 1122 031c 00       	 .byte 0
 1123 031d 00       	 .byte 0
 1124 031e 00       	 .byte 0
 1125 031f 70       	 .byte 112
 1126 0320 08       	 .byte 8
 1127 0321 1A       	 .byte 26
 1128 0322 01       	 .byte 1
 1129 0323 01       	 .byte 1
 1130 0324 00       	 .byte 0
 1131 0325 00       	 .byte 0
 1132 0326 00       	 .byte 0
 1133 0327 70       	 .byte 112
 1134 0328 09       	 .byte 9
 1135 0329 1B       	 .byte 27
 1136 032a 01       	 .byte 1
 1137 032b 01       	 .byte 1
 1138 032c 00       	 .byte 0
 1139 032d 00       	 .byte 0
 1140 032e 00       	 .byte 0
 1141 032f 70       	 .byte 112
 1142 0330 0A       	 .byte 10
 1143 0331 1C       	 .byte 28
 1144 0332 01       	 .byte 1
 1145 0333 01       	 .byte 1
 1146 0334 00       	 .byte 0
 1147 0335 00       	 .byte 0
 1148 0336 00       	 .byte 0
 1149 0337 70       	 .byte 112
 1150 0338 0B       	 .byte 11
 1151 0339 1D       	 .byte 29
 1152 033a 01       	 .byte 1
 1153 033b 01       	 .byte 1
 1154 033c 00       	 .byte 0
 1155 033d 00       	 .byte 0
 1156 033e 00       	 .byte 0
 1157 033f 70       	 .byte 112
 1158 0340 0C       	 .byte 12
 1159 0341 1E       	 .byte 30
 1160 0342 01       	 .byte 1
 1161 0343 01       	 .byte 1
 1162 0344 00       	 .byte 0
 1163 0345 00       	 .byte 0
 1164 0346 3C       	 .byte 60
 1165 0347 00       	 .byte 0
 1166 0348 0C       	 .byte 12
 1167 0349 00       	 .byte 0
 1168 034a 00       	 .byte 0
 1169 034b 00       	 .byte 0
 1170 034c 00       	 .byte 0
 1171 034d 00       	 .byte 0
 1172 034e 00       	 .byte 0
 1173 034f 00       	 .byte 0
 1174 0350 00       	 .byte 0
 1175 0351 00       	 .byte 0
 1176 0352 00       	 .byte 0
 1177 0353 00       	 .byte 0
 1178 0354 00       	 .byte 0
 1179 0355 00       	 .byte 0
 1180 0356 00       	 .byte 0
 1181 0357 00       	 .byte 0
 1182 0358 00       	 .byte 0
 1183 0359 00       	 .byte 0
 1184 035a 00       	 .byte 0
 1185 035b 00       	 .byte 0
 1186 035c 03       	 .byte 3
 1187 035d 04       	 .byte 4
 1188 035e 00       	 .byte 0
 1189 035f 00       	 .byte 0
 1190 0360 00       	 .byte 0
 1191 0361 00       	 .byte 0
 1192 0362 FF       	 .byte -1
 1193 0363 FF       	 .byte -1
 1194 0364 FF       	 .byte -1
 1195 0365 FF       	 .byte -1
 1196 0366 FF       	 .byte -1
 1197 0367 FF       	 .byte -1
 1198 0368 FF       	 .byte -1
 1199 0369 FF       	 .byte -1
 1200 036a FF       	 .byte -1
 1201 036b FF       	 .byte -1
 1202 036c FF       	 .byte -1
 1203 036d FF       	 .byte -1
 1204 036e FF       	 .byte -1
 1205 036f FF       	 .byte -1
 1206 0370 FF       	 .byte -1
 1207 0371 FF       	 .byte -1
 1208 0372 FF       	 .byte -1
 1209 0373 FF       	 .byte -1
 1210 0374 FF       	 .byte -1
 1211 0375 FF       	 .byte -1
 1212 0376 FF       	 .byte -1
 1213 0377 FF       	 .byte -1
 1214 0378 FF       	 .byte -1
 1215 0379 FF       	 .byte -1
 1216 037a FF       	 .byte -1
 1217 037b FF       	 .byte -1
 1218 037c FF       	 .byte -1
 1219 037d FF       	 .byte -1
 1220 037e FF       	 .byte -1
 1221 037f FF       	 .byte -1
 1222 0380 FF       	 .byte -1
 1223 0381 FF       	 .byte -1
 1224 0382 FF       	 .byte -1
 1225 0383 FF       	 .byte -1
 1226 0384 FF       	 .byte -1
 1227 0385 FF       	 .byte -1
 1228 0386 FF       	 .byte -1
 1229 0387 FF       	 .byte -1
 1230 0388 FF       	 .byte -1
 1231 0389 FF       	 .byte -1
 1232 038a FF       	 .byte -1
 1233 038b FF       	 .byte -1
 1234 038c FF       	 .byte -1
 1235 038d FF       	 .byte -1
 1236 038e FF       	 .byte -1
 1237 038f FF       	 .byte -1
 1238 0390 FF       	 .byte -1
 1239 0391 FF       	 .byte -1
 1240 0392 FF       	 .byte -1
 1241 0393 FF       	 .byte -1
 1242 0394 FF       	 .byte -1
 1243 0395 FF       	 .byte -1
 1244 0396 FF       	 .byte -1
 1245 0397 FF       	 .byte -1
 1246 0398 FF       	 .byte -1
 1247 0399 FF       	 .byte -1
 1248 039a FF       	 .byte -1
 1249 039b FF       	 .byte -1
 1250 039c FF       	 .byte -1
 1251 039d FF       	 .byte -1
 1252 039e FF       	 .byte -1
 1253 039f FF       	 .byte -1
 1254 03a0 FF       	 .byte -1
 1255 03a1 FF       	 .byte -1
 1256 03a2 FF       	 .byte -1
 1257 03a3 FF       	 .byte -1
 1258 03a4 FF       	 .byte -1
 1259 03a5 FF       	 .byte -1
 1260 03a6 FF       	 .byte -1
 1261 03a7 FF       	 .byte -1
 1262 03a8 FF       	 .byte -1
 1263 03a9 FF       	 .byte -1
 1264 03aa FF       	 .byte -1
 1265 03ab FF       	 .byte -1
 1266 03ac FF       	 .byte -1
 1267 03ad FF       	 .byte -1
 1268 03ae FF       	 .byte -1
 1269 03af FF       	 .byte -1
 1270 03b0 FF       	 .byte -1
 1271 03b1 FF       	 .byte -1
 1272 03b2 FF       	 .byte -1
 1273 03b3 FF       	 .byte -1
 1274 03b4 FF       	 .byte -1
 1275 03b5 FF       	 .byte -1
 1276 03b6 FF       	 .byte -1
 1277 03b7 FF       	 .byte -1
 1278 03b8 FF       	 .byte -1
 1279 03b9 FF       	 .byte -1
 1280 03ba FF       	 .byte -1
 1281 03bb FF       	 .byte -1
 1282 03bc FF       	 .byte -1
 1283 03bd FF       	 .byte -1
 1284 03be FF       	 .byte -1
 1285 03bf FF       	 .byte -1
 1286 03c0 FF       	 .byte -1
 1287 03c1 FF       	 .byte -1
 1288 03c2 FF       	 .byte -1
 1289 03c3 FF       	 .byte -1
 1290 03c4 FF       	 .byte -1
 1291 03c5 FF       	 .byte -1
 1292 03c6 FF       	 .byte -1
 1293 03c7 FF       	 .byte -1
 1294 03c8 FF       	 .byte -1
 1295 03c9 FF       	 .byte -1
 1296 03ca FF       	 .byte -1
 1297 03cb FF       	 .byte -1
 1298 03cc FF       	 .byte -1
 1299 03cd FF       	 .byte -1
 1300 03ce FF       	 .byte -1
 1301 03cf FF       	 .byte -1
 1302 03d0 FF       	 .byte -1
 1303 03d1 FF       	 .byte -1
 1304 03d2 FF       	 .byte -1
 1305 03d3 FF       	 .byte -1
 1306 03d4 FF       	 .byte -1
 1307 03d5 FF       	 .byte -1
 1308 03d6 FF       	 .byte -1
 1309 03d7 FF       	 .byte -1
 1310 03d8 FF       	 .byte -1
 1311 03d9 FF       	 .byte -1
 1312 03da FF       	 .byte -1
 1313 03db FF       	 .byte -1
 1314 03dc FF       	 .byte -1
 1315 03dd FF       	 .byte -1
 1316 03de FF       	 .byte -1
 1317 03df FF       	 .byte -1
 1318 03e0 FF       	 .byte -1
 1319 03e1 FF       	 .byte -1
 1320 03e2 FF       	 .byte -1
 1321 03e3 FF       	 .byte -1
 1322 03e4 FF       	 .byte -1
 1323 03e5 FF       	 .byte -1
 1324 03e6 FF       	 .byte -1
 1325 03e7 FF       	 .byte -1
 1326 03e8 FF       	 .byte -1
 1327 03e9 FF       	 .byte -1
 1328 03ea FF       	 .byte -1
 1329 03eb FF       	 .byte -1
 1330 03ec FF       	 .byte -1
 1331 03ed FF       	 .byte -1
 1332 03ee FF       	 .byte -1
 1333 03ef FF       	 .byte -1
 1334 03f0 FF       	 .byte -1
 1335 03f1 FF       	 .byte -1
 1336 03f2 FF       	 .byte -1
 1337 03f3 FF       	 .byte -1
 1338 03f4 FF       	 .byte -1
 1339 03f5 FF       	 .byte -1
 1340 03f6 FF       	 .byte -1
 1341 03f7 FF       	 .byte -1
 1342 03f8 FF       	 .byte -1
 1343 03f9 FF       	 .byte -1
 1344 03fa FF       	 .byte -1
 1345 03fb FF       	 .byte -1
 1346 03fc FF       	 .byte -1
 1347 03fd FF       	 .byte -1
 1348 03fe FF       	 .byte -1
 1349 03ff FF       	 .byte -1
 1350 0400 FF       	 .byte -1
 1351 0401 FF       	 .byte -1
 1352 0402 FF       	 .byte -1
 1353 0403 FF       	 .byte -1
 1354 0404 FF       	 .byte -1
 1355 0405 FF       	 .byte -1
 1356 0406 FF       	 .byte -1
 1357 0407 FF       	 .byte -1
 1358 0408 FF       	 .byte -1
 1359 0409 FF       	 .byte -1
 1360 040a FF       	 .byte -1
 1361 040b FF       	 .byte -1
 1362 040c FF       	 .byte -1
 1363 040d FF       	 .byte -1
 1364 040e FF       	 .byte -1
 1365 040f FF       	 .byte -1
 1366 0410 FF       	 .byte -1
 1367 0411 FF       	 .byte -1
 1368 0412 FF       	 .byte -1
 1369 0413 FF       	 .byte -1
 1370 0414 FF       	 .byte -1
 1371 0415 FF       	 .byte -1
 1372 0416 FF       	 .byte -1
 1373 0417 FF       	 .byte -1
 1374 0418 FF       	 .byte -1
 1375 0419 FF       	 .byte -1
 1376 041a FF       	 .byte -1
 1377 041b FF       	 .byte -1
 1378 041c FF       	 .byte -1
 1379 041d FF       	 .byte -1
 1380 041e FF       	 .byte -1
 1381 041f FF       	 .byte -1
 1382 0420 FF       	 .byte -1
 1383 0421 FF       	 .byte -1
 1384 0422 FF       	 .byte -1
 1385 0423 FF       	 .byte -1
 1386 0424 FF       	 .byte -1
 1387 0425 FF       	 .byte -1
 1388 0426 FF       	 .byte -1
 1389 0427 FF       	 .byte -1
 1390 0428 FF       	 .byte -1
 1391 0429 FF       	 .byte -1
 1392 042a FF       	 .byte -1
 1393 042b FF       	 .byte -1
 1394 042c FF       	 .byte -1
 1395 042d FF       	 .byte -1
 1396 042e FF       	 .byte -1
 1397 042f FF       	 .byte -1
 1398 0430 FF       	 .byte -1
 1399 0431 FF       	 .byte -1
 1400 0432 FF       	 .byte -1
 1401 0433 FF       	 .byte -1
 1402 0434 FF       	 .byte -1
 1403 0435 FF       	 .byte -1
 1404 0436 FF       	 .byte -1
 1405 0437 FF       	 .byte -1
 1406 0438 FF       	 .byte -1
 1407 0439 FF       	 .byte -1
 1408 043a FF       	 .byte -1
 1409 043b FF       	 .byte -1
 1410 043c FF       	 .byte -1
 1411 043d FF       	 .byte -1
 1412 043e FF       	 .byte -1
 1413 043f FF       	 .byte -1
 1414 0440 FF       	 .byte -1
 1415 0441 FF       	 .byte -1
 1416 0442 FF       	 .byte -1
 1417 0443 FF       	 .byte -1
 1418 0444 FF       	 .byte -1
 1419 0445 FF       	 .byte -1
 1420 0446 FF       	 .byte -1
 1421 0447 FF       	 .byte -1
 1422 0448 FF       	 .byte -1
 1423 0449 FF       	 .byte -1
 1424 044a FF       	 .byte -1
 1425 044b FF       	 .byte -1
 1426 044c FF       	 .byte -1
 1427 044d FF       	 .byte -1
 1428 044e FF       	 .byte -1
 1429 044f FF       	 .byte -1
 1430 0450 FF       	 .byte -1
 1431 0451 FF       	 .byte -1
 1432 0452 FF       	 .byte -1
 1433 0453 FF       	 .byte -1
 1434 0454 FF       	 .byte -1
 1435 0455 FF       	 .byte -1
 1436 0456 FF       	 .byte -1
 1437 0457 FF       	 .byte -1
 1438 0458 FF       	 .byte -1
 1439 0459 FF       	 .byte -1
 1440 045a FF       	 .byte -1
 1441 045b FF       	 .byte -1
 1442 045c FF       	 .byte -1
 1443 045d FF       	 .byte -1
 1444 045e FF       	 .byte -1
 1445 045f FF       	 .byte -1
 1446 0460 FF       	 .byte -1
 1447 0461 FF       	 .byte -1
 1448 0462 FF       	 .byte -1
 1449 0463 FF       	 .byte -1
 1450 0464 FF       	 .byte -1
 1451 0465 FF       	 .byte -1
 1452 0466 FF       	 .byte -1
 1453 0467 FF       	 .byte -1
 1454 0468 FF       	 .byte -1
 1455 0469 FF       	 .byte -1
 1456 046a FF       	 .byte -1
 1457 046b FF       	 .byte -1
 1458 046c FF       	 .byte -1
 1459 046d FF       	 .byte -1
 1460 046e FF       	 .byte -1
 1461 046f FF       	 .byte -1
 1462 0470 FF       	 .byte -1
 1463 0471 FF       	 .byte -1
 1464 0472 FF       	 .byte -1
 1465 0473 FF       	 .byte -1
 1466 0474 FF       	 .byte -1
 1467 0475 FF       	 .byte -1
 1468 0476 FF       	 .byte -1
 1469 0477 FF       	 .byte -1
 1470 0478 FF       	 .byte -1
 1471 0479 FF       	 .byte -1
 1472 047a FF       	 .byte -1
 1473 047b FF       	 .byte -1
 1474 047c FF       	 .byte -1
 1475 047d FF       	 .byte -1
 1476 047e FF       	 .byte -1
 1477 047f FF       	 .byte -1
 1478 0480 FF       	 .byte -1
 1479 0481 FF       	 .byte -1
 1480 0482 FF       	 .byte -1
 1481 0483 FF       	 .byte -1
 1482 0484 FF       	 .byte -1
 1483 0485 FF       	 .byte -1
 1484 0486 FF       	 .byte -1
 1485 0487 FF       	 .byte -1
 1486 0488 FF       	 .byte -1
 1487 0489 FF       	 .byte -1
 1488 048a FF       	 .byte -1
 1489 048b FF       	 .byte -1
 1490 048c FF       	 .byte -1
 1491 048d FF       	 .byte -1
 1492 048e FF       	 .byte -1
 1493 048f FF       	 .byte -1
 1494 0490 FF       	 .byte -1
 1495 0491 FF       	 .byte -1
 1496 0492 FF       	 .byte -1
 1497 0493 FF       	 .byte -1
 1498 0494 FF       	 .byte -1
 1499 0495 FF       	 .byte -1
 1500 0496 FF       	 .byte -1
 1501 0497 FF       	 .byte -1
 1502 0498 FF       	 .byte -1
 1503 0499 FF       	 .byte -1
 1504 049a FF       	 .byte -1
 1505 049b FF       	 .byte -1
 1506 049c FF       	 .byte -1
 1507 049d FF       	 .byte -1
 1508 049e FF       	 .byte -1
 1509 049f FF       	 .byte -1
 1510 04a0 FF       	 .byte -1
 1511 04a1 FF       	 .byte -1
 1512 04a2 FF       	 .byte -1
 1513 04a3 FF       	 .byte -1
 1514 04a4 FF       	 .byte -1
 1515 04a5 FF       	 .byte -1
 1516 04a6 FF       	 .byte -1
 1517 04a7 FF       	 .byte -1
 1518 04a8 FF       	 .byte -1
 1519 04a9 FF       	 .byte -1
 1520 04aa FF       	 .byte -1
 1521 04ab FF       	 .byte -1
 1522 04ac FF       	 .byte -1
 1523 04ad FF       	 .byte -1
 1524 04ae FF       	 .byte -1
 1525 04af FF       	 .byte -1
 1526 04b0 FF       	 .byte -1
 1527 04b1 FF       	 .byte -1
 1528 04b2 FF       	 .byte -1
 1529 04b3 FF       	 .byte -1
 1530 04b4 FF       	 .byte -1
 1531 04b5 FF       	 .byte -1
 1532 04b6 FF       	 .byte -1
 1533 04b7 FF       	 .byte -1
 1534 04b8 FF       	 .byte -1
 1535 04b9 FF       	 .byte -1
 1536 04ba FF       	 .byte -1
 1537 04bb FF       	 .byte -1
 1538 04bc FF       	 .byte -1
 1539 04bd FF       	 .byte -1
 1540 04be FF       	 .byte -1
 1541 04bf FF       	 .byte -1
 1542 04c0 FF       	 .byte -1
 1543 04c1 FF       	 .byte -1
 1544 04c2 FF       	 .byte -1
 1545 04c3 FF       	 .byte -1
 1546 04c4 FF       	 .byte -1
 1547 04c5 FF       	 .byte -1
 1548 04c6 FF       	 .byte -1
 1549 04c7 FF       	 .byte -1
 1550 04c8 FF       	 .byte -1
 1551 04c9 FF       	 .byte -1
 1552 04ca FF       	 .byte -1
 1553 04cb FF       	 .byte -1
 1554 04cc FF       	 .byte -1
 1555 04cd FF       	 .byte -1
 1556 04ce FF       	 .byte -1
 1557 04cf FF       	 .byte -1
 1558 04d0 FF       	 .byte -1
 1559 04d1 FF       	 .byte -1
 1560 04d2 FF       	 .byte -1
 1561 04d3 FF       	 .byte -1
 1562 04d4 FF       	 .byte -1
 1563 04d5 FF       	 .byte -1
 1564 04d6 FF       	 .byte -1
 1565 04d7 FF       	 .byte -1
 1566 04d8 FF       	 .byte -1
 1567 04d9 FF       	 .byte -1
 1568 04da FF       	 .byte -1
 1569 04db FF       	 .byte -1
 1570 04dc FF       	 .byte -1
 1571 04dd FF       	 .byte -1
 1572 04de FF       	 .byte -1
 1573 04df FF       	 .byte -1
 1574 04e0 FF       	 .byte -1
 1575 04e1 FF       	 .byte -1
 1576 04e2 FF       	 .byte -1
 1577 04e3 FF       	 .byte -1
 1578 04e4 FF       	 .byte -1
 1579 04e5 FF       	 .byte -1
 1580 04e6 FF       	 .byte -1
 1581 04e7 FF       	 .byte -1
 1582 04e8 FF       	 .byte -1
 1583 04e9 FF       	 .byte -1
 1584 04ea FF       	 .byte -1
 1585 04eb FF       	 .byte -1
 1586 04ec FF       	 .byte -1
 1587 04ed FF       	 .byte -1
 1588 04ee FF       	 .byte -1
 1589 04ef FF       	 .byte -1
 1590 04f0 FF       	 .byte -1
 1591 04f1 FF       	 .byte -1
 1592 04f2 FF       	 .byte -1
 1593 04f3 FF       	 .byte -1
 1594 04f4 FF       	 .byte -1
 1595 04f5 FF       	 .byte -1
 1596 04f6 FF       	 .byte -1
 1597 04f7 FF       	 .byte -1
 1598 04f8 FF       	 .byte -1
 1599 04f9 FF       	 .byte -1
 1600 04fa FF       	 .byte -1
 1601 04fb FF       	 .byte -1
 1602 04fc FF       	 .byte -1
 1603 04fd FF       	 .byte -1
 1604 04fe FF       	 .byte -1
 1605 04ff FF       	 .byte -1
 1606 0500 FF       	 .byte -1
 1607 0501 FF       	 .byte -1
 1608 0502 FF       	 .byte -1
 1609 0503 FF       	 .byte -1
 1610 0504 FF       	 .byte -1
 1611 0505 FF       	 .byte -1
 1612 0506 FF       	 .byte -1
 1613 0507 FF       	 .byte -1
 1614 0508 FF       	 .byte -1
 1615 0509 FF       	 .byte -1
 1616 050a FF       	 .byte -1
 1617 050b FF       	 .byte -1
 1618 050c FF       	 .byte -1
 1619 050d FF       	 .byte -1
 1620 050e FF       	 .byte -1
 1621 050f FF       	 .byte -1
 1622 0510 FF       	 .byte -1
 1623 0511 FF       	 .byte -1
 1624 0512 FF       	 .byte -1
 1625 0513 FF       	 .byte -1
 1626 0514 FF       	 .byte -1
 1627 0515 FF       	 .byte -1
 1628 0516 FF       	 .byte -1
 1629 0517 FF       	 .byte -1
 1630 0518 FF       	 .byte -1
 1631 0519 FF       	 .byte -1
 1632 051a FF       	 .byte -1
 1633 051b FF       	 .byte -1
 1634 051c FF       	 .byte -1
 1635 051d FF       	 .byte -1
 1636 051e FF       	 .byte -1
 1637 051f FF       	 .byte -1
 1638 0520 FF       	 .byte -1
 1639 0521 FF       	 .byte -1
 1640 0522 FF       	 .byte -1
 1641 0523 FF       	 .byte -1
 1642 0524 FF       	 .byte -1
 1643 0525 FF       	 .byte -1
 1644 0526 FF       	 .byte -1
 1645 0527 FF       	 .byte -1
 1646 0528 FF       	 .byte -1
 1647 0529 FF       	 .byte -1
 1648 052a FF       	 .byte -1
 1649 052b FF       	 .byte -1
 1650 052c FF       	 .byte -1
 1651 052d FF       	 .byte -1
 1652 052e FF       	 .byte -1
 1653 052f FF       	 .byte -1
 1654 0530 FF       	 .byte -1
 1655 0531 FF       	 .byte -1
 1656 0532 FF       	 .byte -1
 1657 0533 FF       	 .byte -1
 1658 0534 FF       	 .byte -1
 1659 0535 FF       	 .byte -1
 1660 0536 FF       	 .byte -1
 1661 0537 FF       	 .byte -1
 1662 0538 FF       	 .byte -1
 1663 0539 FF       	 .byte -1
 1664 053a FF       	 .byte -1
 1665 053b FF       	 .byte -1
 1666 053c FF       	 .byte -1
 1667 053d FF       	 .byte -1
 1668 053e FF       	 .byte -1
 1669 053f FF       	 .byte -1
 1670 0540 FF       	 .byte -1
 1671 0541 FF       	 .byte -1
 1672 0542 FF       	 .byte -1
 1673 0543 FF       	 .byte -1
 1674 0544 FF       	 .byte -1
 1675 0545 FF       	 .byte -1
 1676 0546 FF       	 .byte -1
 1677 0547 FF       	 .byte -1
 1678 0548 FF       	 .byte -1
 1679 0549 FF       	 .byte -1
 1680 054a FF       	 .byte -1
 1681 054b FF       	 .byte -1
 1682 054c FF       	 .byte -1
 1683 054d FF       	 .byte -1
 1684 054e FF       	 .byte -1
 1685 054f FF       	 .byte -1
 1686 0550 FF       	 .byte -1
 1687 0551 FF       	 .byte -1
 1688 0552 FF       	 .byte -1
 1689 0553 FF       	 .byte -1
 1690 0554 FF       	 .byte -1
 1691 0555 FF       	 .byte -1
 1692 0556 FF       	 .byte -1
 1693 0557 FF       	 .byte -1
 1694 0558 FF       	 .byte -1
 1695 0559 FF       	 .byte -1
 1696 055a FF       	 .byte -1
 1697 055b FF       	 .byte -1
 1698 055c FF       	 .byte -1
 1699 055d FF       	 .byte -1
 1700 055e FF       	 .byte -1
 1701 055f FF       	 .byte -1
 1702 0560 FF       	 .byte -1
 1703 0561 FF       	 .byte -1
 1704 0562 FF       	 .byte -1
 1705 0563 FF       	 .byte -1
 1706 0564 FF       	 .byte -1
 1707 0565 FF       	 .byte -1
 1708 0566 FF       	 .byte -1
 1709 0567 FF       	 .byte -1
 1710 0568 FF       	 .byte -1
 1711 0569 FF       	 .byte -1
 1712 056a FF       	 .byte -1
 1713 056b FF       	 .byte -1
 1714 056c FF       	 .byte -1
 1715 056d FF       	 .byte -1
 1716 056e FF       	 .byte -1
 1717 056f FF       	 .byte -1
 1718 0570 FF       	 .byte -1
 1719 0571 FF       	 .byte -1
 1720 0572 FF       	 .byte -1
 1721 0573 FF       	 .byte -1
 1722 0574 FF       	 .byte -1
 1723 0575 FF       	 .byte -1
 1724 0576 FF       	 .byte -1
 1725 0577 FF       	 .byte -1
 1726 0578 FF       	 .byte -1
 1727 0579 FF       	 .byte -1
 1728 057a FF       	 .byte -1
 1729 057b FF       	 .byte -1
 1730 057c FF       	 .byte -1
 1731 057d FF       	 .byte -1
 1732 057e FF       	 .byte -1
 1733 057f FF       	 .byte -1
 1734 0580 FF       	 .byte -1
 1735 0581 FF       	 .byte -1
 1736 0582 FF       	 .byte -1
 1737 0583 FF       	 .byte -1
 1738 0584 FF       	 .byte -1
 1739 0585 FF       	 .byte -1
 1740 0586 FF       	 .byte -1
 1741 0587 FF       	 .byte -1
 1742 0588 FF       	 .byte -1
 1743 0589 FF       	 .byte -1
 1744 058a FF       	 .byte -1
 1745 058b FF       	 .byte -1
 1746 058c FF       	 .byte -1
 1747 058d FF       	 .byte -1
 1748 058e FF       	 .byte -1
 1749 058f FF       	 .byte -1
 1750 0590 FF       	 .byte -1
 1751 0591 FF       	 .byte -1
 1752 0592 FF       	 .byte -1
 1753 0593 FF       	 .byte -1
 1754 0594 FF       	 .byte -1
 1755 0595 FF       	 .byte -1
 1756 0596 FF       	 .byte -1
 1757 0597 FF       	 .byte -1
 1758 0598 FF       	 .byte -1
 1759 0599 FF       	 .byte -1
 1760 059a FF       	 .byte -1
 1761 059b FF       	 .byte -1
 1762 059c FF       	 .byte -1
 1763 059d FF       	 .byte -1
 1764 059e FF       	 .byte -1
 1765 059f FF       	 .byte -1
 1766 05a0 FF       	 .byte -1
 1767 05a1 FF       	 .byte -1
 1768 05a2 FF       	 .byte -1
 1769 05a3 FF       	 .byte -1
 1770 05a4 FF       	 .byte -1
 1771 05a5 FF       	 .byte -1
 1772 05a6 FF       	 .byte -1
 1773 05a7 FF       	 .byte -1
 1774 05a8 FF       	 .byte -1
 1775 05a9 FF       	 .byte -1
 1776 05aa FF       	 .byte -1
 1777 05ab FF       	 .byte -1
 1778 05ac FF       	 .byte -1
 1779 05ad FF       	 .byte -1
 1780 05ae FF       	 .byte -1
 1781 05af FF       	 .byte -1
 1782 05b0 FF       	 .byte -1
 1783 05b1 FF       	 .byte -1
 1784 05b2 FF       	 .byte -1
 1785 05b3 FF       	 .byte -1
 1786 05b4 FF       	 .byte -1
 1787 05b5 FF       	 .byte -1
 1788 05b6 FF       	 .byte -1
 1789 05b7 FF       	 .byte -1
 1790 05b8 FF       	 .byte -1
 1791 05b9 FF       	 .byte -1
 1792 05ba FF       	 .byte -1
 1793 05bb FF       	 .byte -1
 1794 05bc FF       	 .byte -1
 1795 05bd FF       	 .byte -1
 1796 05be FF       	 .byte -1
 1797 05bf FF       	 .byte -1
 1798 05c0 FF       	 .byte -1
 1799 05c1 FF       	 .byte -1
 1800 05c2 FF       	 .byte -1
 1801 05c3 FF       	 .byte -1
 1802 05c4 FF       	 .byte -1
 1803 05c5 FF       	 .byte -1
 1804 05c6 FF       	 .byte -1
 1805 05c7 FF       	 .byte -1
 1806 05c8 FF       	 .byte -1
 1807 05c9 FF       	 .byte -1
 1808 05ca FF       	 .byte -1
 1809 05cb FF       	 .byte -1
 1810 05cc FF       	 .byte -1
 1811 05cd FF       	 .byte -1
 1812 05ce FF       	 .byte -1
 1813 05cf FF       	 .byte -1
 1814 05d0 FF       	 .byte -1
 1815 05d1 FF       	 .byte -1
 1816 05d2 FF       	 .byte -1
 1817 05d3 FF       	 .byte -1
 1818 05d4 FF       	 .byte -1
 1819 05d5 FF       	 .byte -1
 1820 05d6 FF       	 .byte -1
 1821 05d7 FF       	 .byte -1
 1822 05d8 FF       	 .byte -1
 1823 05d9 FF       	 .byte -1
 1824 05da FF       	 .byte -1
 1825 05db FF       	 .byte -1
 1826 05dc FF       	 .byte -1
 1827 05dd FF       	 .byte -1
 1828 05de FF       	 .byte -1
 1829 05df FF       	 .byte -1
 1830 05e0 FF       	 .byte -1
 1831 05e1 FF       	 .byte -1
 1832 05e2 FF       	 .byte -1
 1833 05e3 FF       	 .byte -1
 1834 05e4 FF       	 .byte -1
 1835 05e5 FF       	 .byte -1
 1836 05e6 FF       	 .byte -1
 1837 05e7 FF       	 .byte -1
 1838 05e8 FF       	 .byte -1
 1839 05e9 FF       	 .byte -1
 1840 05ea FF       	 .byte -1
 1841 05eb FF       	 .byte -1
 1842 05ec FF       	 .byte -1
 1843 05ed FF       	 .byte -1
 1844 05ee FF       	 .byte -1
 1845 05ef FF       	 .byte -1
 1846 05f0 FF       	 .byte -1
 1847 05f1 FF       	 .byte -1
 1848 05f2 FF       	 .byte -1
 1849 05f3 FF       	 .byte -1
 1850 05f4 FF       	 .byte -1
 1851 05f5 FF       	 .byte -1
 1852 05f6 FF       	 .byte -1
 1853 05f7 FF       	 .byte -1
 1854 05f8 FF       	 .byte -1
 1855 05f9 FF       	 .byte -1
 1856 05fa FF       	 .byte -1
 1857 05fb FF       	 .byte -1
 1858 05fc FF       	 .byte -1
 1859 05fd FF       	 .byte -1
 1860 05fe FF       	 .byte -1
 1861 05ff FF       	 .byte -1
 1862 0600 FF       	 .byte -1
 1863 0601 FF       	 .byte -1
 1864 0602 FF       	 .byte -1
 1865 0603 FF       	 .byte -1
 1866 0604 FF       	 .byte -1
 1867 0605 FF       	 .byte -1
 1868 0606 FF       	 .byte -1
 1869 0607 FF       	 .byte -1
 1870 0608 FF       	 .byte -1
 1871 0609 FF       	 .byte -1
 1872 060a FF       	 .byte -1
 1873 060b FF       	 .byte -1
 1874 060c FF       	 .byte -1
 1875 060d FF       	 .byte -1
 1876 060e FF       	 .byte -1
 1877 060f FF       	 .byte -1
 1878 0610 FF       	 .byte -1
 1879 0611 FF       	 .byte -1
 1880 0612 FF       	 .byte -1
 1881 0613 FF       	 .byte -1
 1882 0614 FF       	 .byte -1
 1883 0615 FF       	 .byte -1
 1884 0616 FF       	 .byte -1
 1885 0617 FF       	 .byte -1
 1886 0618 FF       	 .byte -1
 1887 0619 FF       	 .byte -1
 1888 061a FF       	 .byte -1
 1889 061b FF       	 .byte -1
 1890 061c FF       	 .byte -1
 1891 061d FF       	 .byte -1
 1892 061e FF       	 .byte -1
 1893 061f FF       	 .byte -1
 1894 0620 FF       	 .byte -1
 1895 0621 FF       	 .byte -1
 1896 0622 FF       	 .byte -1
 1897 0623 FF       	 .byte -1
 1898 0624 FF       	 .byte -1
 1899 0625 FF       	 .byte -1
 1900 0626 FF       	 .byte -1
 1901 0627 FF       	 .byte -1
 1902 0628 FF       	 .byte -1
 1903 0629 FF       	 .byte -1
 1904 062a FF       	 .byte -1
 1905 062b FF       	 .byte -1
 1906 062c FF       	 .byte -1
 1907 062d FF       	 .byte -1
 1908 062e FF       	 .byte -1
 1909 062f FF       	 .byte -1
 1910 0630 FF       	 .byte -1
 1911 0631 FF       	 .byte -1
 1912 0632 FF       	 .byte -1
 1913 0633 FF       	 .byte -1
 1914 0634 FF       	 .byte -1
 1915 0635 FF       	 .byte -1
 1916 0636 FF       	 .byte -1
 1917 0637 FF       	 .byte -1
 1918 0638 FF       	 .byte -1
 1919 0639 FF       	 .byte -1
 1920 063a FF       	 .byte -1
 1921 063b FF       	 .byte -1
 1922 063c FF       	 .byte -1
 1923 063d FF       	 .byte -1
 1924 063e FF       	 .byte -1
 1925 063f FF       	 .byte -1
 1926 0640 FF       	 .byte -1
 1927 0641 FF       	 .byte -1
 1928 0642 FF       	 .byte -1
 1929 0643 FF       	 .byte -1
 1930 0644 FF       	 .byte -1
 1931 0645 FF       	 .byte -1
 1932 0646 FF       	 .byte -1
 1933 0647 FF       	 .byte -1
 1934 0648 FF       	 .byte -1
 1935 0649 FF       	 .byte -1
 1936 064a FF       	 .byte -1
 1937 064b FF       	 .byte -1
 1938 064c FF       	 .byte -1
 1939 064d FF       	 .byte -1
 1940 064e FF       	 .byte -1
 1941 064f FF       	 .byte -1
 1942 0650 FF       	 .byte -1
 1943 0651 FF       	 .byte -1
 1944 0652 FF       	 .byte -1
 1945 0653 FF       	 .byte -1
 1946 0654 FF       	 .byte -1
 1947 0655 FF       	 .byte -1
 1948 0656 FF       	 .byte -1
 1949 0657 FF       	 .byte -1
 1950 0658 FF       	 .byte -1
 1951 0659 FF       	 .byte -1
 1952 065a FF       	 .byte -1
 1953 065b FF       	 .byte -1
 1954 065c FF       	 .byte -1
 1955 065d FF       	 .byte -1
 1956 065e FF       	 .byte -1
 1957 065f FF       	 .byte -1
 1958 0660 FF       	 .byte -1
 1959 0661 FF       	 .byte -1
 1960 0662 FF       	 .byte -1
 1961 0663 FF       	 .byte -1
 1962 0664 FF       	 .byte -1
 1963 0665 FF       	 .byte -1
 1964 0666 FF       	 .byte -1
 1965 0667 FF       	 .byte -1
 1966 0668 FF       	 .byte -1
 1967 0669 FF       	 .byte -1
 1968 066a FF       	 .byte -1
 1969 066b FF       	 .byte -1
 1970 066c FF       	 .byte -1
 1971 066d FF       	 .byte -1
 1972 066e FF       	 .byte -1
 1973 066f FF       	 .byte -1
 1974 0670 FF       	 .byte -1
 1975 0671 FF       	 .byte -1
 1976 0672 FF       	 .byte -1
 1977 0673 FF       	 .byte -1
 1978 0674 FF       	 .byte -1
 1979 0675 FF       	 .byte -1
 1980 0676 FF       	 .byte -1
 1981 0677 FF       	 .byte -1
 1982 0678 FF       	 .byte -1
 1983 0679 FF       	 .byte -1
 1984 067a FF       	 .byte -1
 1985 067b FF       	 .byte -1
 1986 067c FF       	 .byte -1
 1987 067d FF       	 .byte -1
 1988 067e FF       	 .byte -1
 1989 067f FF       	 .byte -1
 1990 0680 FF       	 .byte -1
 1991 0681 FF       	 .byte -1
 1992 0682 FF       	 .byte -1
 1993 0683 FF       	 .byte -1
 1994 0684 FF       	 .byte -1
 1995 0685 FF       	 .byte -1
 1996 0686 FF       	 .byte -1
 1997 0687 FF       	 .byte -1
 1998 0688 FF       	 .byte -1
 1999 0689 FF       	 .byte -1
 2000 068a FF       	 .byte -1
 2001 068b FF       	 .byte -1
 2002 068c FF       	 .byte -1
 2003 068d FF       	 .byte -1
 2004 068e FF       	 .byte -1
 2005 068f FF       	 .byte -1
 2006 0690 FF       	 .byte -1
 2007 0691 FF       	 .byte -1
 2008 0692 FF       	 .byte -1
 2009 0693 FF       	 .byte -1
 2010 0694 FF       	 .byte -1
 2011 0695 FF       	 .byte -1
 2012 0696 FF       	 .byte -1
 2013 0697 FF       	 .byte -1
 2014 0698 FF       	 .byte -1
 2015 0699 FF       	 .byte -1
 2016 069a FF       	 .byte -1
 2017 069b FF       	 .byte -1
 2018 069c FF       	 .byte -1
 2019 069d FF       	 .byte -1
 2020 069e FF       	 .byte -1
 2021 069f FF       	 .byte -1
 2022 06a0 FF       	 .byte -1
 2023 06a1 FF       	 .byte -1
 2024 06a2 FF       	 .byte -1
 2025 06a3 FF       	 .byte -1
 2026 06a4 FF       	 .byte -1
 2027 06a5 FF       	 .byte -1
 2028 06a6 FF       	 .byte -1
 2029 06a7 FF       	 .byte -1
 2030 06a8 FF       	 .byte -1
 2031 06a9 FF       	 .byte -1
 2032 06aa FF       	 .byte -1
 2033 06ab FF       	 .byte -1
 2034 06ac FF       	 .byte -1
 2035 06ad FF       	 .byte -1
 2036 06ae FF       	 .byte -1
 2037 06af FF       	 .byte -1
 2038 06b0 FF       	 .byte -1
 2039 06b1 FF       	 .byte -1
 2040 06b2 FF       	 .byte -1
 2041 06b3 FF       	 .byte -1
 2042 06b4 FF       	 .byte -1
 2043 06b5 FF       	 .byte -1
 2044 06b6 FF       	 .byte -1
 2045 06b7 FF       	 .byte -1
 2046 06b8 FF       	 .byte -1
 2047 06b9 FF       	 .byte -1
 2048 06ba FF       	 .byte -1
 2049 06bb FF       	 .byte -1
 2050 06bc FF       	 .byte -1
 2051 06bd FF       	 .byte -1
 2052 06be FF       	 .byte -1
 2053 06bf FF       	 .byte -1
 2054 06c0 FF       	 .byte -1
 2055 06c1 FF       	 .byte -1
 2056 06c2 FF       	 .byte -1
 2057 06c3 FF       	 .byte -1
 2058 06c4 FF       	 .byte -1
 2059 06c5 FF       	 .byte -1
 2060 06c6 FF       	 .byte -1
 2061 06c7 FF       	 .byte -1
 2062 06c8 FF       	 .byte -1
 2063 06c9 FF       	 .byte -1
 2064 06ca FF       	 .byte -1
 2065 06cb FF       	 .byte -1
 2066 06cc FF       	 .byte -1
 2067 06cd FF       	 .byte -1
 2068 06ce FF       	 .byte -1
 2069 06cf FF       	 .byte -1
 2070 06d0 FF       	 .byte -1
 2071 06d1 FF       	 .byte -1
 2072 06d2 FF       	 .byte -1
 2073 06d3 FF       	 .byte -1
 2074 06d4 FF       	 .byte -1
 2075 06d5 FF       	 .byte -1
 2076 06d6 FF       	 .byte -1
 2077 06d7 FF       	 .byte -1
 2078 06d8 FF       	 .byte -1
 2079 06d9 FF       	 .byte -1
 2080 06da FF       	 .byte -1
 2081 06db FF       	 .byte -1
 2082 06dc FF       	 .byte -1
 2083 06dd FF       	 .byte -1
 2084 06de FF       	 .byte -1
 2085 06df FF       	 .byte -1
 2086 06e0 FF       	 .byte -1
 2087 06e1 FF       	 .byte -1
 2088 06e2 FF       	 .byte -1
 2089 06e3 FF       	 .byte -1
 2090 06e4 FF       	 .byte -1
 2091 06e5 FF       	 .byte -1
 2092 06e6 FF       	 .byte -1
 2093 06e7 FF       	 .byte -1
 2094 06e8 FF       	 .byte -1
 2095 06e9 FF       	 .byte -1
 2096 06ea FF       	 .byte -1
 2097 06eb FF       	 .byte -1
 2098 06ec FF       	 .byte -1
 2099 06ed FF       	 .byte -1
 2100 06ee FF       	 .byte -1
 2101 06ef FF       	 .byte -1
 2102 06f0 FF       	 .byte -1
 2103 06f1 FF       	 .byte -1
 2104 06f2 FF       	 .byte -1
 2105 06f3 FF       	 .byte -1
 2106 06f4 FF       	 .byte -1
 2107 06f5 FF       	 .byte -1
 2108 06f6 FF       	 .byte -1
 2109 06f7 FF       	 .byte -1
 2110 06f8 FF       	 .byte -1
 2111 06f9 FF       	 .byte -1
 2112 06fa FF       	 .byte -1
 2113 06fb FF       	 .byte -1
 2114 06fc FF       	 .byte -1
 2115 06fd FF       	 .byte -1
 2116 06fe FF       	 .byte -1
 2117 06ff FF       	 .byte -1
 2118 0700 FF       	 .byte -1
 2119 0701 FF       	 .byte -1
 2120 0702 FF       	 .byte -1
 2121 0703 FF       	 .byte -1
 2122 0704 FF       	 .byte -1
 2123 0705 FF       	 .byte -1
 2124 0706 FF       	 .byte -1
 2125 0707 FF       	 .byte -1
 2126 0708 FF       	 .byte -1
 2127 0709 FF       	 .byte -1
 2128 070a FF       	 .byte -1
 2129 070b FF       	 .byte -1
 2130 070c FF       	 .byte -1
 2131 070d FF       	 .byte -1
 2132 070e FF       	 .byte -1
 2133 070f FF       	 .byte -1
 2134 0710 FF       	 .byte -1
 2135 0711 FF       	 .byte -1
 2136 0712 FF       	 .byte -1
 2137 0713 FF       	 .byte -1
 2138 0714 FF       	 .byte -1
 2139 0715 FF       	 .byte -1
 2140 0716 FF       	 .byte -1
 2141 0717 FF       	 .byte -1
 2142 0718 FF       	 .byte -1
 2143 0719 FF       	 .byte -1
 2144 071a FF       	 .byte -1
 2145 071b FF       	 .byte -1
 2146 071c FF       	 .byte -1
 2147 071d FF       	 .byte -1
 2148 071e FF       	 .byte -1
 2149 071f FF       	 .byte -1
 2150 0720 FF       	 .byte -1
 2151 0721 FF       	 .byte -1
 2152 0722 FF       	 .byte -1
 2153 0723 FF       	 .byte -1
 2154 0724 FF       	 .byte -1
 2155 0725 FF       	 .byte -1
 2156 0726 FF       	 .byte -1
 2157 0727 FF       	 .byte -1
 2158 0728 FF       	 .byte -1
 2159 0729 FF       	 .byte -1
 2160 072a FF       	 .byte -1
 2161 072b FF       	 .byte -1
 2162 072c FF       	 .byte -1
 2163 072d FF       	 .byte -1
 2164 072e FF       	 .byte -1
 2165 072f FF       	 .byte -1
 2166 0730 FF       	 .byte -1
 2167 0731 FF       	 .byte -1
 2168 0732 FF       	 .byte -1
 2169 0733 FF       	 .byte -1
 2170 0734 FF       	 .byte -1
 2171 0735 FF       	 .byte -1
 2172 0736 FF       	 .byte -1
 2173 0737 FF       	 .byte -1
 2174 0738 FF       	 .byte -1
 2175 0739 FF       	 .byte -1
 2176 073a FF       	 .byte -1
 2177 073b FF       	 .byte -1
 2178 073c FF       	 .byte -1
 2179 073d FF       	 .byte -1
 2180 073e FF       	 .byte -1
 2181 073f FF       	 .byte -1
 2182 0740 FF       	 .byte -1
 2183 0741 FF       	 .byte -1
 2184 0742 FF       	 .byte -1
 2185 0743 FF       	 .byte -1
 2186 0744 FF       	 .byte -1
 2187 0745 FF       	 .byte -1
 2188 0746 FF       	 .byte -1
 2189 0747 FF       	 .byte -1
 2190 0748 FF       	 .byte -1
 2191 0749 FF       	 .byte -1
 2192 074a FF       	 .byte -1
 2193 074b FF       	 .byte -1
 2194 074c FF       	 .byte -1
 2195 074d FF       	 .byte -1
 2196 074e FF       	 .byte -1
 2197 074f FF       	 .byte -1
 2198 0750 FF       	 .byte -1
 2199 0751 FF       	 .byte -1
 2200 0752 FF       	 .byte -1
 2201 0753 FF       	 .byte -1
 2202 0754 FF       	 .byte -1
 2203 0755 FF       	 .byte -1
 2204 0756 FF       	 .byte -1
 2205 0757 FF       	 .byte -1
 2206 0758 FF       	 .byte -1
 2207 0759 FF       	 .byte -1
 2208 075a FF       	 .byte -1
 2209 075b FF       	 .byte -1
 2210 075c FF       	 .byte -1
 2211 075d FF       	 .byte -1
 2212 075e FF       	 .byte -1
 2213 075f FF       	 .byte -1
 2214 0760 FF       	 .byte -1
 2215 0761 FF       	 .byte -1
 2216 0762 FF       	 .byte -1
 2217 0763 FF       	 .byte -1
 2218 0764 FF       	 .byte -1
 2219 0765 FF       	 .byte -1
 2220 0766 FF       	 .byte -1
 2221 0767 FF       	 .byte -1
 2222 0768 FF       	 .byte -1
 2223 0769 FF       	 .byte -1
 2224 076a FF       	 .byte -1
 2225 076b FF       	 .byte -1
 2226 076c FF       	 .byte -1
 2227 076d FF       	 .byte -1
 2228 076e FF       	 .byte -1
 2229 076f FF       	 .byte -1
 2230 0770 FF       	 .byte -1
 2231 0771 FF       	 .byte -1
 2232 0772 FF       	 .byte -1
 2233 0773 FF       	 .byte -1
 2234 0774 FF       	 .byte -1
 2235 0775 FF       	 .byte -1
 2236 0776 FF       	 .byte -1
 2237 0777 FF       	 .byte -1
 2238 0778 FF       	 .byte -1
 2239 0779 FF       	 .byte -1
 2240 077a FF       	 .byte -1
 2241 077b FF       	 .byte -1
 2242 077c FF       	 .byte -1
 2243 077d FF       	 .byte -1
 2244 077e FF       	 .byte -1
 2245 077f FF       	 .byte -1
 2246 0780 FF       	 .byte -1
 2247 0781 FF       	 .byte -1
 2248 0782 FF       	 .byte -1
 2249 0783 FF       	 .byte -1
 2250 0784 FF       	 .byte -1
 2251 0785 FF       	 .byte -1
 2252 0786 FF       	 .byte -1
 2253 0787 FF       	 .byte -1
 2254 0788 FF       	 .byte -1
 2255 0789 FF       	 .byte -1
 2256 078a FF       	 .byte -1
 2257 078b FF       	 .byte -1
 2258 078c FF       	 .byte -1
 2259 078d FF       	 .byte -1
 2260 078e FF       	 .byte -1
 2261 078f FF       	 .byte -1
 2262 0790 FF       	 .byte -1
 2263 0791 FF       	 .byte -1
 2264 0792 FF       	 .byte -1
 2265 0793 FF       	 .byte -1
 2266 0794 FF       	 .byte -1
 2267 0795 FF       	 .byte -1
 2268 0796 FF       	 .byte -1
 2269 0797 FF       	 .byte -1
 2270 0798 FF       	 .byte -1
 2271 0799 FF       	 .byte -1
 2272 079a FF       	 .byte -1
 2273 079b FF       	 .byte -1
 2274 079c FF       	 .byte -1
 2275 079d FF       	 .byte -1
 2276 079e FF       	 .byte -1
 2277 079f FF       	 .byte -1
 2278 07a0 FF       	 .byte -1
 2279 07a1 FF       	 .byte -1
 2280 07a2 FF       	 .byte -1
 2281 07a3 FF       	 .byte -1
 2282 07a4 FF       	 .byte -1
 2283 07a5 FF       	 .byte -1
 2284 07a6 FF       	 .byte -1
 2285 07a7 FF       	 .byte -1
 2286 07a8 FF       	 .byte -1
 2287 07a9 FF       	 .byte -1
 2288 07aa FF       	 .byte -1
 2289 07ab FF       	 .byte -1
 2290 07ac FF       	 .byte -1
 2291 07ad FF       	 .byte -1
 2292 07ae FF       	 .byte -1
 2293 07af FF       	 .byte -1
 2294 07b0 FF       	 .byte -1
 2295 07b1 FF       	 .byte -1
 2296 07b2 FF       	 .byte -1
 2297 07b3 FF       	 .byte -1
 2298 07b4 FF       	 .byte -1
 2299 07b5 FF       	 .byte -1
 2300 07b6 FF       	 .byte -1
 2301 07b7 FF       	 .byte -1
 2302 07b8 FF       	 .byte -1
 2303 07b9 FF       	 .byte -1
 2304 07ba FF       	 .byte -1
 2305 07bb FF       	 .byte -1
 2306 07bc FF       	 .byte -1
 2307 07bd FF       	 .byte -1
 2308 07be FF       	 .byte -1
 2309 07bf FF       	 .byte -1
 2310 07c0 FF       	 .byte -1
 2311 07c1 FF       	 .byte -1
 2312 07c2 FF       	 .byte -1
 2313 07c3 FF       	 .byte -1
 2314 07c4 FF       	 .byte -1
 2315 07c5 FF       	 .byte -1
 2316 07c6 FF       	 .byte -1
 2317 07c7 FF       	 .byte -1
 2318 07c8 FF       	 .byte -1
 2319 07c9 FF       	 .byte -1
 2320 07ca FF       	 .byte -1
 2321 07cb FF       	 .byte -1
 2322 07cc FF       	 .byte -1
 2323 07cd FF       	 .byte -1
 2324 07ce FF       	 .byte -1
 2325 07cf FF       	 .byte -1
 2326 07d0 FF       	 .byte -1
 2327 07d1 FF       	 .byte -1
 2328 07d2 FF       	 .byte -1
 2329 07d3 FF       	 .byte -1
 2330 07d4 FF       	 .byte -1
 2331 07d5 FF       	 .byte -1
 2332 07d6 FF       	 .byte -1
 2333 07d7 FF       	 .byte -1
 2334 07d8 FF       	 .byte -1
 2335 07d9 FF       	 .byte -1
 2336 07da FF       	 .byte -1
 2337 07db FF       	 .byte -1
 2338 07dc FF       	 .byte -1
 2339 07dd FF       	 .byte -1
 2340 07de FF       	 .byte -1
 2341 07df FF       	 .byte -1
 2342 07e0 FF       	 .byte -1
 2343 07e1 FF       	 .byte -1
 2344 07e2 FF       	 .byte -1
 2345 07e3 FF       	 .byte -1
 2346 07e4 FF       	 .byte -1
 2347 07e5 FF       	 .byte -1
 2348 07e6 FF       	 .byte -1
 2349 07e7 FF       	 .byte -1
 2350 07e8 FF       	 .byte -1
 2351 07e9 FF       	 .byte -1
 2352 07ea FF       	 .byte -1
 2353 07eb FF       	 .byte -1
 2354 07ec FF       	 .byte -1
 2355 07ed FF       	 .byte -1
 2356 07ee FF       	 .byte -1
 2357 07ef FF       	 .byte -1
 2358 07f0 FF       	 .byte -1
 2359 07f1 FF       	 .byte -1
 2360 07f2 FF       	 .byte -1
 2361 07f3 FF       	 .byte -1
 2362 07f4 FF       	 .byte -1
 2363 07f5 FF       	 .byte -1
 2364 07f6 FF       	 .byte -1
 2365 07f7 FF       	 .byte -1
 2366 07f8 FF       	 .byte -1
 2367 07f9 FF       	 .byte -1
 2368 07fa FF       	 .byte -1
 2369 07fb FF       	 .byte -1
 2370 07fc FF       	 .byte -1
 2371 07fd FF       	 .byte -1
 2372 07fe FF       	 .byte -1
 2373 07ff FF       	 .byte -1
 2374              	 .comm u32CycleTimeStartValue,4,4
 2375              	 .comm u32MinCycleTimeStartValue,4,4
 2376              	 .comm u32SystemTimeReadFailure,4,4
 2377              	 .comm bMinCycleTimeMeasurementStarted,1,1
 2378              	 .comm u32MinCycleTimeValue,4,4
 2379              	 .comm u16EepromStoreTimeoutCounter,2,2
 2380              	 .comm u16EepromStoreTimeoutValue,2,2
 2381              	 .comm aPdOutputData,12,4
 2382              	 .comm aPdInputData,12,4
 2383              	 .global bInitFinished
 2384              	 .section .bss.bInitFinished,"aw",%nobits
 2387              	bInitFinished:
 2388 0000 00       	 .space 1
 2389              	 .section .text.PDO_InputMapping,"ax",%progbits
 2390              	 .align 2
 2391              	 .global PDO_InputMapping
 2392              	 .thumb
 2393              	 .thumb_func
 2395              	PDO_InputMapping:
 2396              	.LFB177:
 2397              	 .file 3 "../SSC/Src/ecatappl.c"
   1:../SSC/Src/ecatappl.c **** /*
   2:../SSC/Src/ecatappl.c **** * This source file is part of the EtherCAT Slave Stack Code licensed by Beckhoff Automation GmbH & 
   3:../SSC/Src/ecatappl.c **** * The corresponding license agreement applies. This hint shall not be removed.
   4:../SSC/Src/ecatappl.c **** */
   5:../SSC/Src/ecatappl.c **** 
   6:../SSC/Src/ecatappl.c **** /**
   7:../SSC/Src/ecatappl.c **** \addtogroup EcatAppl EtherCAT application
   8:../SSC/Src/ecatappl.c **** @{
   9:../SSC/Src/ecatappl.c **** */
  10:../SSC/Src/ecatappl.c **** 
  11:../SSC/Src/ecatappl.c **** 
  12:../SSC/Src/ecatappl.c **** /**
  13:../SSC/Src/ecatappl.c **** \file ecatappl.c
  14:../SSC/Src/ecatappl.c **** \author EthercatSSC@beckhoff.com
  15:../SSC/Src/ecatappl.c **** \brief Implementation
  16:../SSC/Src/ecatappl.c **** This file contains the Process Data interface
  17:../SSC/Src/ecatappl.c **** 
  18:../SSC/Src/ecatappl.c **** \version 5.12
  19:../SSC/Src/ecatappl.c **** 
  20:../SSC/Src/ecatappl.c **** <br>Changes to version V5.11:<br>
  21:../SSC/Src/ecatappl.c **** V5.12 APPL1: add optional application function called from the main loop (after mbx and esm are exe
  22:../SSC/Src/ecatappl.c **** V5.12 BOOT1: add a bootloader sample application (only the ESM and FoE is supported)<br>
  23:../SSC/Src/ecatappl.c **** V5.12 COE4: add timestamp object (0x10F8) and update diagnosis handling<br>
  24:../SSC/Src/ecatappl.c **** V5.12 ECAT1: update SM Parameter measurement (based on the system time), enhancement for input only
  25:../SSC/Src/ecatappl.c **** V5.12 ECAT3: update PD monitoring variables even if the slave is not in OP, disable all interrupts 
  26:../SSC/Src/ecatappl.c **** V5.12 ECAT5: update Sync error counter/flag handling,check enum memory alignment depending on the p
  27:../SSC/Src/ecatappl.c **** V5.12 ECAT8: reset appl function pointer on startup, update timeout calculation during eeprom acces
  28:../SSC/Src/ecatappl.c **** V5.12 EEPROM1: get read size from register 0x502.6<br>
  29:../SSC/Src/ecatappl.c **** V5.12 EEPROM2: clear CRC Error bit only in case of a valid reload, write station alias only in case
  30:../SSC/Src/ecatappl.c **** V5.12 EEPROM3: implement a store EEPROM timeout handler<br>
  31:../SSC/Src/ecatappl.c **** <br>Changes to version V5.10.1:<br>
  32:../SSC/Src/ecatappl.c **** V5.11 COE3: change 0x10F3.2 (Sync Error limit) from UINT32 to UINT16 (according to the ETG.1020)<br
  33:../SSC/Src/ecatappl.c **** V5.11 ECAT1: update EEPROM access reset operation<br>
  34:../SSC/Src/ecatappl.c **** V5.11 ECAT10: change PROTO handling to prevent compiler errors<br>
  35:../SSC/Src/ecatappl.c **** V5.11 ECAT11: create application interface function pointer, add eeprom emulation interface functio
  36:../SSC/Src/ecatappl.c **** V5.11 ECAT2: update EEPROM access retry cycle (add 10ms delay between two retry cycles)<br>
  37:../SSC/Src/ecatappl.c **** V5.11 ECAT3: handle bus cycle calculation for input/output only devices and create warning diag mes
  38:../SSC/Src/ecatappl.c **** V5.11 ECAT4: enhance SM/Sync monitoring for input/output only slaves<br>
  39:../SSC/Src/ecatappl.c **** V5.11 ECAT6: add function to calculate bus cycle time<br>
  40:../SSC/Src/ecatappl.c **** V5.11 ECAT8: call PDO_InputMapping only once if DC is enabled and COE is not supported<br>
  41:../SSC/Src/ecatappl.c **** V5.11 EEPROM1: fix compiler error during pEEPROM pointer initialization<br>
  42:../SSC/Src/ecatappl.c **** V5.11 EEPROM2: write Station alias value to EEPROM data register on EEPROM reload command<br>
  43:../SSC/Src/ecatappl.c **** V5.11 EEPROM3: clear EEPROM error bits<br>
  44:../SSC/Src/ecatappl.c **** V5.11 EEPROM4: prevent the variable in the EEPROM busy loop to be removed by the compiler<br>
  45:../SSC/Src/ecatappl.c **** V5.11 ESM7: "add Sync define for 0x22 (""SYNCTYPE_SM2_SYNCHRON""), support value 0x22 for 0x1C33.1 
  46:../SSC/Src/ecatappl.c **** <br>Changes to version V5.01:<br>
  47:../SSC/Src/ecatappl.c **** V5.10 COE1: Define one entry description for all 0x1C3x objects and change data type of SI11,12,13 
  48:../SSC/Src/ecatappl.c **** V5.10 ECAT1: Correct calculation of blinking and flashing sequence<br>
  49:../SSC/Src/ecatappl.c **** V5.10 ECAT13: Update Synchronisation handling (FreeRun,SM Sync, Sync0, Sync1)<br>
  50:../SSC/Src/ecatappl.c ****               Compare DC UINT configuration (by ESC Config data) vs. DC activation register setting
  51:../SSC/Src/ecatappl.c ****               Update 0x1C3x entries<br>
  52:../SSC/Src/ecatappl.c **** V5.10 ECAT2: Prevent EEPROM data null pointer access (if the pointer is null an command error is se
  53:../SSC/Src/ecatappl.c ****              EEPROM emulation return command error if unknown command was received<br>
  54:../SSC/Src/ecatappl.c **** V5.10 ECAT4: Update alignment marco for 8 to 15 bit alignments (16 and 32 Bit controllers)<br>
  55:../SSC/Src/ecatappl.c ****              Bugfix calculate LED blink frequency<br>
  56:../SSC/Src/ecatappl.c **** V5.10 ECAT7: Add "bInitFinished" to indicate if the initialization is complete<br>
  57:../SSC/Src/ecatappl.c **** V5.10 HW2: Change HW_GetTimer return value to UINT32<br>
  58:../SSC/Src/ecatappl.c **** <br>Changes to version V5.0:<br>
  59:../SSC/Src/ecatappl.c **** V5.01 APPL3: Include library demo application<br>
  60:../SSC/Src/ecatappl.c **** V5.01 ESC1: Change ESC access function (if EEPROM Emulation is active)<br>
  61:../SSC/Src/ecatappl.c **** V5.01 ESC2: Add missed value swapping<br>
  62:../SSC/Src/ecatappl.c **** <br>Changes to version V4.40:<br>
  63:../SSC/Src/ecatappl.c **** V5.0 TEST1: Add test application. See Application Note ET9300 for more details.<br>
  64:../SSC/Src/ecatappl.c **** V5.0 ECAT2: Application specific functions are moved to application files.<br>
  65:../SSC/Src/ecatappl.c **** V5.0 ECAT3: Global dummy variables used for dummy ESC operations.<br>
  66:../SSC/Src/ecatappl.c **** V5.0 ESC1: ESC 32Bit Access added.<br>
  67:../SSC/Src/ecatappl.c **** V5.0 ESC3: Add EEPROM emulation support.<br>
  68:../SSC/Src/ecatappl.c **** V5.0 ESM3: Handling pending ESM transitions.<br>
  69:../SSC/Src/ecatappl.c **** V5.0 ESC5: Enhance EEPROM access handling.<br>
  70:../SSC/Src/ecatappl.c **** V5.0 PDO1: AL Event flags are not rechecked in PDO_OutputMappping(). (Already checked before call f
  71:../SSC/Src/ecatappl.c **** V5.0 SYNC1: Add missed SM event indication (0x1C32/0x1C33 SI11).<br>
  72:../SSC/Src/ecatappl.c **** <br>Changes to version V4.30:<br>
  73:../SSC/Src/ecatappl.c **** V4.40 DIAG1: add diagnosis message support<br>
  74:../SSC/Src/ecatappl.c **** V4.40 PDO1: merge content of HW_InputMapping (spihw.c/mcihw.c) to PDO_InputMapping. merge content o
  75:../SSC/Src/ecatappl.c **** V4.40 PDO2: Generic process data length calculation<br>
  76:../SSC/Src/ecatappl.c **** V4.40 ECAT2: call cyclic CheckIfLocalError() to check the local flags<br>
  77:../SSC/Src/ecatappl.c **** V4.40 HW0: Generic hardware access functions. Add Function (PDI_Isr()), content merged from spihw.c
  78:../SSC/Src/ecatappl.c **** V4.40 WD1: define (ESC_SM_WD_SUPPORTED) to choose ESC SyncManager watchdog or local watchdog<br>
  79:../SSC/Src/ecatappl.c **** V4.40 ESM2: Change state transition behaviour from SafeOP to OP<br>
  80:../SSC/Src/ecatappl.c **** V4.40 TIMER1: Change bus cycle time calculation and trigger of ECAT_CheckTimer() if ECAT_TIMER_INT 
  81:../SSC/Src/ecatappl.c **** V4.40 HW1: Add support for fc1100 hardware<br>
  82:../SSC/Src/ecatappl.c **** <br>Changes to version V4.20:<br>
  83:../SSC/Src/ecatappl.c **** V4.30 EL9800: EL9800_x cyclic application is moved to el9800.c<br>
  84:../SSC/Src/ecatappl.c **** V4.30 OBJ 3:    add object dictionary initialization<br>
  85:../SSC/Src/ecatappl.c **** V4.30 SYNC: add CalcSMCycleTime() (calculation of bus cycle time); change synchronisation control f
  86:../SSC/Src/ecatappl.c **** V4.30 PDO: include PDO specific functions (moved from coeappl.c).<br>
  87:../SSC/Src/ecatappl.c ****                xxx_InputMapping(); xxx_OutputMapping(); xxx_ReadInputs(); xxx_ResetOutputs(); xxx_A
  88:../SSC/Src/ecatappl.c **** V4.30 CiA402: Add CiA402_StateMachine() and CiA402_Application() call<br>
  89:../SSC/Src/ecatappl.c **** V4.20 DC 1: Add DC pending Statemachine handling<br>
  90:../SSC/Src/ecatappl.c **** V4.20 PIC24: Add EL9800_4 (PIC24) required source code<br>
  91:../SSC/Src/ecatappl.c **** V4.20 LED 1: Modified LED Handling<br>
  92:../SSC/Src/ecatappl.c **** V4.11 APPL 1: The checkWatchdog() function should not called in checkTimer() if this function is tr
  93:../SSC/Src/ecatappl.c **** <br>Changes to version V4.08:<br>
  94:../SSC/Src/ecatappl.c **** V4.10 LED 1: The handling of the EtherCAT-Error-LED was added<br>
  95:../SSC/Src/ecatappl.c **** V4.10 AOE 3: The AoE fragment size has to be initialized during the state transition<br>
  96:../SSC/Src/ecatappl.c ****                  from INIT to PREOP<br>
  97:../SSC/Src/ecatappl.c **** <br>Changes to version V4.07:<br>
  98:../SSC/Src/ecatappl.c **** V4.08 LED 1: The handling of the EtherCAT-LED can be (de-)selected by the switch LEDS_SUPPORTED<br>
  99:../SSC/Src/ecatappl.c ****                  because the ET1100 and ET1200 have an output port which could be connected directl
 100:../SSC/Src/ecatappl.c **** <br>Changes to version V4.01:<br>
 101:../SSC/Src/ecatappl.c **** V4.02 ECAT 1: The watchdog timer variables shall be initialized.<br>
 102:../SSC/Src/ecatappl.c **** <br>Changes to version V4.00:<br>
 103:../SSC/Src/ecatappl.c **** V4.01 APPL 1: If the application is running in synchron mode and no SM event<br>
 104:../SSC/Src/ecatappl.c ****               is received, the application should be called from the main loop<br>
 105:../SSC/Src/ecatappl.c **** V4.01 APPL 2: In FreeRun mode the output should only be copied if the slave is in OP<br>
 106:../SSC/Src/ecatappl.c **** <br>Changes to version V3.20:<br>
 107:../SSC/Src/ecatappl.c **** V4.00 APPL 1: The watchdog checking should be done by a microcontroller<br>
 108:../SSC/Src/ecatappl.c ****                  timer because the watchdog trigger of the ESC will be reset too<br>
 109:../SSC/Src/ecatappl.c ****                  if only a part of the sync manager data is written<br>
 110:../SSC/Src/ecatappl.c **** V4.00 APPL 2: The setting of EtherCAT state LEDs were included<br>
 111:../SSC/Src/ecatappl.c **** V4.00 APPL 3: The outputs should be reset to a safe state,<br>
 112:../SSC/Src/ecatappl.c ****                    when the state OP is left<br>
 113:../SSC/Src/ecatappl.c **** V4.00 APPL 4: An example for the EEPROM access through the ESC is shown in<br>
 114:../SSC/Src/ecatappl.c ****                    the function APPL_StartMailboxHandler<br>
 115:../SSC/Src/ecatappl.c **** V4.00 APPL 5: The inputs should be read once when the state transition<br>
 116:../SSC/Src/ecatappl.c ****                    from PREOP to SAFEOP is made<br>
 117:../SSC/Src/ecatappl.c **** V4.00 APPL 6: The main function was split in MainInit and MainLoop
 118:../SSC/Src/ecatappl.c **** */
 119:../SSC/Src/ecatappl.c **** 
 120:../SSC/Src/ecatappl.c **** 
 121:../SSC/Src/ecatappl.c **** /*-----------------------------------------------------------------------------------------
 122:../SSC/Src/ecatappl.c **** ------
 123:../SSC/Src/ecatappl.c **** ------    Includes
 124:../SSC/Src/ecatappl.c **** ------
 125:../SSC/Src/ecatappl.c **** -----------------------------------------------------------------------------------------*/
 126:../SSC/Src/ecatappl.c **** #include "ecatslv.h"
 127:../SSC/Src/ecatappl.c **** 
 128:../SSC/Src/ecatappl.c **** #define    _ECATAPPL_ 1
 129:../SSC/Src/ecatappl.c **** #include "ecatappl.h"
 130:../SSC/Src/ecatappl.c **** #undef _ECATAPPL_
 131:../SSC/Src/ecatappl.c **** /*remove definition of _ECATAPPL_ (#ifdef is used in ecatappl.h)*/
 132:../SSC/Src/ecatappl.c **** 
 133:../SSC/Src/ecatappl.c **** #include "coeappl.h"
 134:../SSC/Src/ecatappl.c **** 
 135:../SSC/Src/ecatappl.c **** 
 136:../SSC/Src/ecatappl.c **** 
 137:../SSC/Src/ecatappl.c **** #define _APPL_INTERFACE_ 1
 138:../SSC/Src/ecatappl.c **** #include "applInterface.h"
 139:../SSC/Src/ecatappl.c **** #undef _APPL_INTERFACE_
 140:../SSC/Src/ecatappl.c **** 
 141:../SSC/Src/ecatappl.c **** #include "XMC_ESC.h"
 142:../SSC/Src/ecatappl.c **** 
 143:../SSC/Src/ecatappl.c **** #include "eeprom.h"
 144:../SSC/Src/ecatappl.c **** 
 145:../SSC/Src/ecatappl.c **** #undef SET_EEPROM_PTR
 146:../SSC/Src/ecatappl.c **** 
 147:../SSC/Src/ecatappl.c **** #define SET_EEPROM_PTR pEEPROM = aEepromData;
 148:../SSC/Src/ecatappl.c **** 
 149:../SSC/Src/ecatappl.c **** 
 150:../SSC/Src/ecatappl.c **** /*--------------------------------------------------------------------------------------
 151:../SSC/Src/ecatappl.c **** ------
 152:../SSC/Src/ecatappl.c **** ------    local Types and Defines
 153:../SSC/Src/ecatappl.c **** ------
 154:../SSC/Src/ecatappl.c **** --------------------------------------------------------------------------------------*/
 155:../SSC/Src/ecatappl.c **** 
 156:../SSC/Src/ecatappl.c **** 
 157:../SSC/Src/ecatappl.c **** #ifndef ECAT_TIMER_INC_P_MS
 158:../SSC/Src/ecatappl.c **** /**
 159:../SSC/Src/ecatappl.c ****  * \todo Define the timer ticks per ms
 160:../SSC/Src/ecatappl.c ****  */
 161:../SSC/Src/ecatappl.c **** #warning "Define the timer ticks per ms"
 162:../SSC/Src/ecatappl.c **** #endif /* #ifndef ECAT_TIMER_INC_P_MS */
 163:../SSC/Src/ecatappl.c **** 
 164:../SSC/Src/ecatappl.c **** 
 165:../SSC/Src/ecatappl.c **** 
 166:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 167:../SSC/Src/ecatappl.c **** #define    MEASUREMENT_ACTIVE (((sSyncManOutPar.u16GetCycleTime & 0x1) == 0x1) || ((sSyncManInPar.u
 168:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 169:../SSC/Src/ecatappl.c **** 
 170:../SSC/Src/ecatappl.c **** /*-----------------------------------------------------------------------------------------
 171:../SSC/Src/ecatappl.c **** ------
 172:../SSC/Src/ecatappl.c **** ------    local variables and constants
 173:../SSC/Src/ecatappl.c **** ------
 174:../SSC/Src/ecatappl.c **** -----------------------------------------------------------------------------------------*/
 175:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 176:../SSC/Src/ecatappl.c **** /*variables required to calculate values for SM Synchronisation objects (0x1C3x)*/
 177:../SSC/Src/ecatappl.c **** 
 178:../SSC/Src/ecatappl.c **** UINT32 u32CycleTimeStartValue; /** <\brief contains the timer start value to measure the applicatio
 179:../SSC/Src/ecatappl.c **** 
 180:../SSC/Src/ecatappl.c **** UINT32 u32MinCycleTimeStartValue; /** <\brief timeout counter in ms to measure the process timings 
 181:../SSC/Src/ecatappl.c **** 
 182:../SSC/Src/ecatappl.c **** UINT32 u32SystemTimeReadFailure; /** <\brief System time measurement failure (the value is calculat
 183:../SSC/Src/ecatappl.c **** 
 184:../SSC/Src/ecatappl.c **** BOOL bMinCycleTimeMeasurementStarted; /** <\brief Indicates if the min cycle measurement is started
 185:../SSC/Src/ecatappl.c **** 
 186:../SSC/Src/ecatappl.c **** UINT32 u32MinCycleTimeValue; /** <\brief tmp value of the min cycle time during measurement*/
 187:../SSC/Src/ecatappl.c **** 
 188:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 189:../SSC/Src/ecatappl.c **** 
 190:../SSC/Src/ecatappl.c **** 
 191:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM3*/
 192:../SSC/Src/ecatappl.c **** UINT16 u16EepromStoreTimeoutCounter; /** <\brief contains the current timer value to store the EEPR
 193:../SSC/Src/ecatappl.c **** 
 194:../SSC/Src/ecatappl.c **** UINT16 u16EepromStoreTimeoutValue; /** <\brief timeout in ms to store the EEPROM data*/
 195:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM3*/
 196:../SSC/Src/ecatappl.c **** 
 197:../SSC/Src/ecatappl.c **** 
 198:../SSC/Src/ecatappl.c **** UINT16             aPdOutputData[(MAX_PD_OUTPUT_SIZE>>1)];
 199:../SSC/Src/ecatappl.c **** UINT16           aPdInputData[(MAX_PD_INPUT_SIZE>>1)];
 200:../SSC/Src/ecatappl.c **** 
 201:../SSC/Src/ecatappl.c **** /*variables are declared in ecatslv.c*/
 202:../SSC/Src/ecatappl.c ****     extern VARVOLATILE UINT8 u8dummy;
 203:../SSC/Src/ecatappl.c **** 
 204:../SSC/Src/ecatappl.c **** BOOL bInitFinished = FALSE; /** < \brief indicates if the initialization is finished*/
 205:../SSC/Src/ecatappl.c **** 
 206:../SSC/Src/ecatappl.c **** /*-----------------------------------------------------------------------------------------
 207:../SSC/Src/ecatappl.c **** ------
 208:../SSC/Src/ecatappl.c **** ------    local functions
 209:../SSC/Src/ecatappl.c **** ------
 210:../SSC/Src/ecatappl.c **** -----------------------------------------------------------------------------------------*/
 211:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 212:../SSC/Src/ecatappl.c **** UINT32 GetSystemTimeDelay(UINT32 u32StartTime);
 213:../SSC/Src/ecatappl.c **** void HandleCycleTimeMeasurement(void);
 214:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 215:../SSC/Src/ecatappl.c **** 
 216:../SSC/Src/ecatappl.c **** /*-----------------------------------------------------------------------------------------
 217:../SSC/Src/ecatappl.c **** ------
 218:../SSC/Src/ecatappl.c **** ------    Functions
 219:../SSC/Src/ecatappl.c **** ------
 220:../SSC/Src/ecatappl.c **** -----------------------------------------------------------------------------------------*/
 221:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 222:../SSC/Src/ecatappl.c **** /**
 223:../SSC/Src/ecatappl.c **** \brief      This function will copies the inputs from the local memory to the ESC memory
 224:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 225:../SSC/Src/ecatappl.c **** void PDO_InputMapping(void)
 226:../SSC/Src/ecatappl.c **** {
 2398              	 .loc 3 226 0
 2399              	 .cfi_startproc
 2400              	 
 2401              	 
 2402 0000 80B5     	 push {r7,lr}
 2403              	.LCFI28:
 2404              	 .cfi_def_cfa_offset 8
 2405              	 .cfi_offset 7,-8
 2406              	 .cfi_offset 14,-4
 2407 0002 82B0     	 sub sp,sp,#8
 2408              	.LCFI29:
 2409              	 .cfi_def_cfa_offset 16
 2410 0004 00AF     	 add r7,sp,#0
 2411              	.LCFI30:
 2412              	 .cfi_def_cfa_register 7
 227:../SSC/Src/ecatappl.c **** 
 228:../SSC/Src/ecatappl.c **** #if ((MIN_PD_CYCLE_TIME == 0) || (PD_INPUT_CALC_AND_COPY_TIME == 0))
 229:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_START(V5.12) ECAT1*/
 230:../SSC/Src/ecatappl.c ****     UINT32 u32TimeValue = 0;
 2413              	 .loc 3 230 0
 2414 0006 0023     	 movs r3,#0
 2415 0008 7B60     	 str r3,[r7,#4]
 231:../SSC/Src/ecatappl.c ****     UINT16 ALEvent = HW_GetALEventRegister_Isr();
 2416              	 .loc 3 231 0
 2417 000a FFF7FEFF 	 bl HW_GetALEventRegister_Isr
 2418 000e 0346     	 mov r3,r0
 2419 0010 7B80     	 strh r3,[r7,#2]
 232:../SSC/Src/ecatappl.c ****     ALEvent = SWAPWORD(ALEvent);
 233:../SSC/Src/ecatappl.c **** 
 234:../SSC/Src/ecatappl.c **** 
 235:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 2420              	 .loc 3 235 0
 2421 0012 1B4B     	 ldr r3,.L18
 2422 0014 9B8B     	 ldrh r3,[r3,#28]
 2423 0016 03F00103 	 and r3,r3,#1
 2424 001a 002B     	 cmp r3,#0
 2425 001c 05D1     	 bne .L14
 2426              	 .loc 3 235 0 is_stmt 0 discriminator 1
 2427 001e 194B     	 ldr r3,.L18+4
 2428 0020 9B8B     	 ldrh r3,[r3,#28]
 2429 0022 03F00103 	 and r3,r3,#1
 2430 0026 002B     	 cmp r3,#0
 2431 0028 03D0     	 beq .L15
 2432              	.L14:
 236:../SSC/Src/ecatappl.c ****     {
 237:../SSC/Src/ecatappl.c ****         u32TimeValue = GetSystemTimeDelay(0);
 2433              	 .loc 3 237 0 is_stmt 1
 2434 002a 0020     	 movs r0,#0
 2435 002c FFF7FEFF 	 bl GetSystemTimeDelay
 2436 0030 7860     	 str r0,[r7,#4]
 2437              	.L15:
 238:../SSC/Src/ecatappl.c ****     }
 239:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_END(V5.12) ECAT1*/
 240:../SSC/Src/ecatappl.c **** #endif /* ((MIN_PD_CYCLE_TIME == 0) || (PD_INPUT_CALC_AND_COPY_TIME == 0)) */
 241:../SSC/Src/ecatappl.c **** 
 242:../SSC/Src/ecatappl.c **** 
 243:../SSC/Src/ecatappl.c **** 
 244:../SSC/Src/ecatappl.c **** 
 245:../SSC/Src/ecatappl.c **** 
 246:../SSC/Src/ecatappl.c **** 
 247:../SSC/Src/ecatappl.c ****   
 248:../SSC/Src/ecatappl.c ****     APPL_InputMapping((UINT16*)aPdInputData);
 2438              	 .loc 3 248 0
 2439 0032 1548     	 ldr r0,.L18+8
 2440 0034 FFF7FEFF 	 bl APPL_InputMapping
 249:../SSC/Src/ecatappl.c ****     HW_EscWriteIsr(((MEM_ADDR *) aPdInputData), nEscAddrInputData, nPdInputSize );
 2441              	 .loc 3 249 0
 2442 0038 144B     	 ldr r3,.L18+12
 2443 003a 1A88     	 ldrh r2,[r3]
 2444 003c 144B     	 ldr r3,.L18+16
 2445 003e 1B88     	 ldrh r3,[r3]
 2446 0040 1148     	 ldr r0,.L18+8
 2447 0042 1146     	 mov r1,r2
 2448 0044 1A46     	 mov r2,r3
 2449 0046 FFF7FEFF 	 bl HW_EscWriteIsr
 250:../SSC/Src/ecatappl.c **** 
 251:../SSC/Src/ecatappl.c ****     
 252:../SSC/Src/ecatappl.c **** 
 253:../SSC/Src/ecatappl.c **** #if ((MIN_PD_CYCLE_TIME == 0) || (PD_INPUT_CALC_AND_COPY_TIME == 0))
 254:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_START(V5.12) ECAT1*/
 255:../SSC/Src/ecatappl.c **** 
 256:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 2450              	 .loc 3 256 0
 2451 004a 0D4B     	 ldr r3,.L18
 2452 004c 9B8B     	 ldrh r3,[r3,#28]
 2453 004e 03F00103 	 and r3,r3,#1
 2454 0052 002B     	 cmp r3,#0
 2455 0054 05D1     	 bne .L16
 2456              	 .loc 3 256 0 is_stmt 0 discriminator 1
 2457 0056 0B4B     	 ldr r3,.L18+4
 2458 0058 9B8B     	 ldrh r3,[r3,#28]
 2459 005a 03F00103 	 and r3,r3,#1
 2460 005e 002B     	 cmp r3,#0
 2461 0060 0BD0     	 beq .L13
 2462              	.L16:
 257:../SSC/Src/ecatappl.c ****     {
 258:../SSC/Src/ecatappl.c ****         u32TimeValue = GetSystemTimeDelay(u32TimeValue);
 2463              	 .loc 3 258 0 is_stmt 1
 2464 0062 7868     	 ldr r0,[r7,#4]
 2465 0064 FFF7FEFF 	 bl GetSystemTimeDelay
 2466 0068 7860     	 str r0,[r7,#4]
 259:../SSC/Src/ecatappl.c **** 
 260:../SSC/Src/ecatappl.c **** #if (PD_INPUT_CALC_AND_COPY_TIME == 0)
 261:../SSC/Src/ecatappl.c ****         if (sSyncManInPar.u32CalcAndCopyTime < u32TimeValue)
 2467              	 .loc 3 261 0
 2468 006a 064B     	 ldr r3,.L18+4
 2469 006c 5A69     	 ldr r2,[r3,#20]
 2470 006e 7B68     	 ldr r3,[r7,#4]
 2471 0070 9A42     	 cmp r2,r3
 2472 0072 02D2     	 bcs .L13
 262:../SSC/Src/ecatappl.c ****         {
 263:../SSC/Src/ecatappl.c ****             sSyncManInPar.u32CalcAndCopyTime = u32TimeValue;
 2473              	 .loc 3 263 0
 2474 0074 034A     	 ldr r2,.L18+4
 2475 0076 7B68     	 ldr r3,[r7,#4]
 2476 0078 5361     	 str r3,[r2,#20]
 2477              	.L13:
 264:../SSC/Src/ecatappl.c ****         }
 265:../SSC/Src/ecatappl.c **** #endif
 266:../SSC/Src/ecatappl.c **** 
 267:../SSC/Src/ecatappl.c **** #if (MIN_PD_CYCLE_TIME == 0)
 268:../SSC/Src/ecatappl.c ****         /* handle the min cycle time measurement only if a new cycle was started (prevent measureme
 269:../SSC/Src/ecatappl.c ****         if (bMinCycleTimeMeasurementStarted == TRUE)
 270:../SSC/Src/ecatappl.c ****         {
 271:../SSC/Src/ecatappl.c **** 
 272:../SSC/Src/ecatappl.c ****             /* add input mapping time to the min cycle time*/
 273:../SSC/Src/ecatappl.c ****             u32MinCycleTimeValue = u32MinCycleTimeValue + u32TimeValue;
 274:../SSC/Src/ecatappl.c **** 
 275:../SSC/Src/ecatappl.c **** 
 276:../SSC/Src/ecatappl.c ****             if (sSyncManOutPar.u32MinCycleTime < u32MinCycleTimeValue)
 277:../SSC/Src/ecatappl.c ****             {
 278:../SSC/Src/ecatappl.c ****                     sSyncManOutPar.u32MinCycleTime = u32MinCycleTimeValue;
 279:../SSC/Src/ecatappl.c ****             }
 280:../SSC/Src/ecatappl.c **** 
 281:../SSC/Src/ecatappl.c ****             if (sSyncManInPar.u32MinCycleTime < u32MinCycleTimeValue)
 282:../SSC/Src/ecatappl.c ****             {
 283:../SSC/Src/ecatappl.c ****                     sSyncManInPar.u32MinCycleTime = u32MinCycleTimeValue;
 284:../SSC/Src/ecatappl.c ****             }
 285:../SSC/Src/ecatappl.c **** 
 286:../SSC/Src/ecatappl.c ****             bMinCycleTimeMeasurementStarted = FALSE;
 287:../SSC/Src/ecatappl.c ****         }
 288:../SSC/Src/ecatappl.c **** #endif /* (MIN_PD_CYCLE_TIME == 0) */
 289:../SSC/Src/ecatappl.c ****     }
 290:../SSC/Src/ecatappl.c **** 
 291:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_END(V5.12) ECAT1*/
 292:../SSC/Src/ecatappl.c **** #endif /* ((MIN_PD_CYCLE_TIME == 0) || (PD_INPUT_CALC_AND_COPY_TIME == 0)) */
 293:../SSC/Src/ecatappl.c **** 
 294:../SSC/Src/ecatappl.c **** }
 2478              	 .loc 3 294 0
 2479 007a 0837     	 adds r7,r7,#8
 2480              	.LCFI31:
 2481              	 .cfi_def_cfa_offset 8
 2482 007c BD46     	 mov sp,r7
 2483              	.LCFI32:
 2484              	 .cfi_def_cfa_register 13
 2485              	 
 2486 007e 80BD     	 pop {r7,pc}
 2487              	.L19:
 2488              	 .align 2
 2489              	.L18:
 2490 0080 00000000 	 .word sSyncManOutPar
 2491 0084 00000000 	 .word sSyncManInPar
 2492 0088 00000000 	 .word aPdInputData
 2493 008c 00000000 	 .word nEscAddrInputData
 2494 0090 00000000 	 .word nPdInputSize
 2495              	 .cfi_endproc
 2496              	.LFE177:
 2498              	 .section .text.PDO_OutputMapping,"ax",%progbits
 2499              	 .align 2
 2500              	 .global PDO_OutputMapping
 2501              	 .thumb
 2502              	 .thumb_func
 2504              	PDO_OutputMapping:
 2505              	.LFB178:
 295:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 296:../SSC/Src/ecatappl.c **** /**
 297:../SSC/Src/ecatappl.c **** \brief    This function will copies the outputs from the ESC memory to the local memory.
 298:../SSC/Src/ecatappl.c ****         This function is only called in case of an SM2 (output process data) event.
 299:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 300:../SSC/Src/ecatappl.c **** void PDO_OutputMapping(void)
 301:../SSC/Src/ecatappl.c **** {
 2506              	 .loc 3 301 0
 2507              	 .cfi_startproc
 2508              	 
 2509              	 
 2510 0000 80B5     	 push {r7,lr}
 2511              	.LCFI33:
 2512              	 .cfi_def_cfa_offset 8
 2513              	 .cfi_offset 7,-8
 2514              	 .cfi_offset 14,-4
 2515 0002 82B0     	 sub sp,sp,#8
 2516              	.LCFI34:
 2517              	 .cfi_def_cfa_offset 16
 2518 0004 00AF     	 add r7,sp,#0
 2519              	.LCFI35:
 2520              	 .cfi_def_cfa_register 7
 302:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 303:../SSC/Src/ecatappl.c ****    UINT32 u32TimeValue = 0;
 2521              	 .loc 3 303 0
 2522 0006 0023     	 movs r3,#0
 2523 0008 7B60     	 str r3,[r7,#4]
 304:../SSC/Src/ecatappl.c ****    if (MEASUREMENT_ACTIVE)
 2524              	 .loc 3 304 0
 2525 000a 214B     	 ldr r3,.L25
 2526 000c 9B8B     	 ldrh r3,[r3,#28]
 2527 000e 03F00103 	 and r3,r3,#1
 2528 0012 002B     	 cmp r3,#0
 2529 0014 05D1     	 bne .L21
 2530              	 .loc 3 304 0 is_stmt 0 discriminator 1
 2531 0016 1F4B     	 ldr r3,.L25+4
 2532 0018 9B8B     	 ldrh r3,[r3,#28]
 2533 001a 03F00103 	 and r3,r3,#1
 2534 001e 002B     	 cmp r3,#0
 2535 0020 0ED0     	 beq .L22
 2536              	.L21:
 305:../SSC/Src/ecatappl.c ****    {
 306:../SSC/Src/ecatappl.c **** #if ((MIN_PD_CYCLE_TIME == 0) || (PD_OUTPUT_CALC_AND_COPY_TIME == 0))
 307:../SSC/Src/ecatappl.c ****       u32TimeValue = GetSystemTimeDelay(0);
 2537              	 .loc 3 307 0 is_stmt 1
 2538 0022 0020     	 movs r0,#0
 2539 0024 FFF7FEFF 	 bl GetSystemTimeDelay
 2540 0028 7860     	 str r0,[r7,#4]
 308:../SSC/Src/ecatappl.c ****       u32MinCycleTimeStartValue = u32TimeValue;
 2541              	 .loc 3 308 0
 2542 002a 1B4A     	 ldr r2,.L25+8
 2543 002c 7B68     	 ldr r3,[r7,#4]
 2544 002e 1360     	 str r3,[r2]
 309:../SSC/Src/ecatappl.c **** 
 310:../SSC/Src/ecatappl.c ****       bMinCycleTimeMeasurementStarted = TRUE;
 2545              	 .loc 3 310 0
 2546 0030 1A4B     	 ldr r3,.L25+12
 2547 0032 0122     	 movs r2,#1
 2548 0034 1A70     	 strb r2,[r3]
 311:../SSC/Src/ecatappl.c ****       u32MinCycleTimeValue = 0;
 2549              	 .loc 3 311 0
 2550 0036 1A4B     	 ldr r3,.L25+16
 2551 0038 0022     	 movs r2,#0
 2552 003a 1A60     	 str r2,[r3]
 312:../SSC/Src/ecatappl.c **** 
 313:../SSC/Src/ecatappl.c **** #endif /* ((MIN_PD_CYCLE_TIME == 0) || (PD_OUTPUT_CALC_AND_COPY_TIME == 0)) */
 314:../SSC/Src/ecatappl.c **** 
 315:../SSC/Src/ecatappl.c ****       HandleCycleTimeMeasurement();
 2553              	 .loc 3 315 0
 2554 003c FFF7FEFF 	 bl HandleCycleTimeMeasurement
 2555              	.L22:
 316:../SSC/Src/ecatappl.c **** 
 317:../SSC/Src/ecatappl.c ****    }
 318:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 319:../SSC/Src/ecatappl.c **** 
 320:../SSC/Src/ecatappl.c ****     HW_EscReadIsr(((MEM_ADDR *)aPdOutputData), nEscAddrOutputData, nPdOutputSize );
 2556              	 .loc 3 320 0
 2557 0040 184B     	 ldr r3,.L25+20
 2558 0042 1A88     	 ldrh r2,[r3]
 2559 0044 184B     	 ldr r3,.L25+24
 2560 0046 1B88     	 ldrh r3,[r3]
 2561 0048 1848     	 ldr r0,.L25+28
 2562 004a 1146     	 mov r1,r2
 2563 004c 1A46     	 mov r2,r3
 2564 004e FFF7FEFF 	 bl HW_EscReadIsr
 321:../SSC/Src/ecatappl.c ****     APPL_OutputMapping((UINT16*) aPdOutputData);
 2565              	 .loc 3 321 0
 2566 0052 1648     	 ldr r0,.L25+28
 2567 0054 FFF7FEFF 	 bl APPL_OutputMapping
 322:../SSC/Src/ecatappl.c **** 
 323:../SSC/Src/ecatappl.c **** 
 324:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 325:../SSC/Src/ecatappl.c **** #if ((MIN_PD_CYCLE_TIME == 0) || (PD_OUTPUT_CALC_AND_COPY_TIME == 0))
 326:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 2568              	 .loc 3 326 0
 2569 0058 0D4B     	 ldr r3,.L25
 2570 005a 9B8B     	 ldrh r3,[r3,#28]
 2571 005c 03F00103 	 and r3,r3,#1
 2572 0060 002B     	 cmp r3,#0
 2573 0062 05D1     	 bne .L23
 2574              	 .loc 3 326 0 is_stmt 0 discriminator 1
 2575 0064 0B4B     	 ldr r3,.L25+4
 2576 0066 9B8B     	 ldrh r3,[r3,#28]
 2577 0068 03F00103 	 and r3,r3,#1
 2578 006c 002B     	 cmp r3,#0
 2579 006e 0BD0     	 beq .L20
 2580              	.L23:
 327:../SSC/Src/ecatappl.c ****     {
 328:../SSC/Src/ecatappl.c ****        u32TimeValue = GetSystemTimeDelay(u32TimeValue);
 2581              	 .loc 3 328 0 is_stmt 1
 2582 0070 7868     	 ldr r0,[r7,#4]
 2583 0072 FFF7FEFF 	 bl GetSystemTimeDelay
 2584 0076 7860     	 str r0,[r7,#4]
 329:../SSC/Src/ecatappl.c **** 
 330:../SSC/Src/ecatappl.c **** #if (PD_OUTPUT_CALC_AND_COPY_TIME == 0)
 331:../SSC/Src/ecatappl.c ****        if (sSyncManOutPar.u32CalcAndCopyTime < u32TimeValue)
 2585              	 .loc 3 331 0
 2586 0078 054B     	 ldr r3,.L25
 2587 007a 5A69     	 ldr r2,[r3,#20]
 2588 007c 7B68     	 ldr r3,[r7,#4]
 2589 007e 9A42     	 cmp r2,r3
 2590 0080 02D2     	 bcs .L20
 332:../SSC/Src/ecatappl.c ****        {
 333:../SSC/Src/ecatappl.c ****           sSyncManOutPar.u32CalcAndCopyTime = u32TimeValue;
 2591              	 .loc 3 333 0
 2592 0082 034A     	 ldr r2,.L25
 2593 0084 7B68     	 ldr r3,[r7,#4]
 2594 0086 5361     	 str r3,[r2,#20]
 2595              	.L20:
 334:../SSC/Src/ecatappl.c ****        }
 335:../SSC/Src/ecatappl.c **** #endif
 336:../SSC/Src/ecatappl.c **** 
 337:../SSC/Src/ecatappl.c **** #if (MIN_PD_CYCLE_TIME == 0)
 338:../SSC/Src/ecatappl.c ****        /* add the first part of the min cycle time */
 339:../SSC/Src/ecatappl.c ****        u32MinCycleTimeValue = u32TimeValue;
 340:../SSC/Src/ecatappl.c **** #endif
 341:../SSC/Src/ecatappl.c ****     }
 342:../SSC/Src/ecatappl.c **** #endif /* #if ((MIN_PD_CYCLE_TIME == 0) || (PD_OUTPUT_CALC_AND_COPY_TIME == 0)) */
 343:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 344:../SSC/Src/ecatappl.c **** }
 2596              	 .loc 3 344 0
 2597 0088 0837     	 adds r7,r7,#8
 2598              	.LCFI36:
 2599              	 .cfi_def_cfa_offset 8
 2600 008a BD46     	 mov sp,r7
 2601              	.LCFI37:
 2602              	 .cfi_def_cfa_register 13
 2603              	 
 2604 008c 80BD     	 pop {r7,pc}
 2605              	.L26:
 2606 008e 00BF     	 .align 2
 2607              	.L25:
 2608 0090 00000000 	 .word sSyncManOutPar
 2609 0094 00000000 	 .word sSyncManInPar
 2610 0098 00000000 	 .word u32MinCycleTimeStartValue
 2611 009c 00000000 	 .word bMinCycleTimeMeasurementStarted
 2612 00a0 00000000 	 .word u32MinCycleTimeValue
 2613 00a4 00000000 	 .word nEscAddrOutputData
 2614 00a8 00000000 	 .word nPdOutputSize
 2615 00ac 00000000 	 .word aPdOutputData
 2616              	 .cfi_endproc
 2617              	.LFE178:
 2619              	 .section .text.ECAT_CheckTimer,"ax",%progbits
 2620              	 .align 2
 2621              	 .global ECAT_CheckTimer
 2622              	 .thumb
 2623              	 .thumb_func
 2625              	ECAT_CheckTimer:
 2626              	.LFB179:
 345:../SSC/Src/ecatappl.c **** 
 346:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 347:../SSC/Src/ecatappl.c **** /**
 348:../SSC/Src/ecatappl.c ****  \brief    This function shall be called every 1ms.
 349:../SSC/Src/ecatappl.c ****  \brief If the switch ECAT_TIMER_INT is 0, the watchdog control is implemented without using
 350:../SSC/Src/ecatappl.c ****  \brief interrupts. In this case a local timer register is checked every ECAT_Main cycle
 351:../SSC/Src/ecatappl.c ****  \brief and the function is triggered if 1 ms is elapsed
 352:../SSC/Src/ecatappl.c ****  *////////////////////////////////////////////////////////////////////////////////////////
 353:../SSC/Src/ecatappl.c **** 
 354:../SSC/Src/ecatappl.c **** void ECAT_CheckTimer(void)
 355:../SSC/Src/ecatappl.c **** {
 2627              	 .loc 3 355 0
 2628              	 .cfi_startproc
 2629              	 
 2630              	 
 2631 0000 80B5     	 push {r7,lr}
 2632              	.LCFI38:
 2633              	 .cfi_def_cfa_offset 8
 2634              	 .cfi_offset 7,-8
 2635              	 .cfi_offset 14,-4
 2636 0002 00AF     	 add r7,sp,#0
 2637              	.LCFI39:
 2638              	 .cfi_def_cfa_register 7
 356:../SSC/Src/ecatappl.c **** 
 357:../SSC/Src/ecatappl.c ****     /*decrement the state transition timeout counter*/
 358:../SSC/Src/ecatappl.c ****     if(bEcatWaitForAlControlRes &&  (EsmTimeoutCounter > 0))
 2639              	 .loc 3 358 0
 2640 0004 324B     	 ldr r3,.L33
 2641 0006 1B78     	 ldrb r3,[r3]
 2642 0008 002B     	 cmp r3,#0
 2643 000a 0DD0     	 beq .L28
 2644              	 .loc 3 358 0 is_stmt 0 discriminator 1
 2645 000c 314B     	 ldr r3,.L33+4
 2646 000e 1B88     	 ldrh r3,[r3]
 2647 0010 1BB2     	 sxth r3,r3
 2648 0012 002B     	 cmp r3,#0
 2649 0014 08DD     	 ble .L28
 359:../SSC/Src/ecatappl.c ****     {
 360:../SSC/Src/ecatappl.c ****         EsmTimeoutCounter--;
 2650              	 .loc 3 360 0 is_stmt 1
 2651 0016 2F4B     	 ldr r3,.L33+4
 2652 0018 1B88     	 ldrh r3,[r3]
 2653 001a 9BB2     	 uxth r3,r3
 2654 001c 9BB2     	 uxth r3,r3
 2655 001e 013B     	 subs r3,r3,#1
 2656 0020 9BB2     	 uxth r3,r3
 2657 0022 9AB2     	 uxth r2,r3
 2658 0024 2B4B     	 ldr r3,.L33+4
 2659 0026 1A80     	 strh r2,[r3]
 2660              	.L28:
 361:../SSC/Src/ecatappl.c ****     }
 362:../SSC/Src/ecatappl.c **** 
 363:../SSC/Src/ecatappl.c **** 
 364:../SSC/Src/ecatappl.c **** 
 365:../SSC/Src/ecatappl.c ****     DC_CheckWatchdog();
 2661              	 .loc 3 365 0
 2662 0028 FFF7FEFF 	 bl DC_CheckWatchdog
 366:../SSC/Src/ecatappl.c **** 
 367:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM3*/
 368:../SSC/Src/ecatappl.c **** 
 369:../SSC/Src/ecatappl.c ****     if (u16EepromStoreTimeoutValue > 0)
 2663              	 .loc 3 369 0
 2664 002c 2A4B     	 ldr r3,.L33+8
 2665 002e 1B88     	 ldrh r3,[r3]
 2666 0030 002B     	 cmp r3,#0
 2667 0032 18D0     	 beq .L29
 370:../SSC/Src/ecatappl.c ****     {
 371:../SSC/Src/ecatappl.c ****         u16EepromStoreTimeoutCounter++;
 2668              	 .loc 3 371 0
 2669 0034 294B     	 ldr r3,.L33+12
 2670 0036 1B88     	 ldrh r3,[r3]
 2671 0038 0133     	 adds r3,r3,#1
 2672 003a 9AB2     	 uxth r2,r3
 2673 003c 274B     	 ldr r3,.L33+12
 2674 003e 1A80     	 strh r2,[r3]
 372:../SSC/Src/ecatappl.c **** 
 373:../SSC/Src/ecatappl.c ****         if (u16EepromStoreTimeoutValue <= u16EepromStoreTimeoutCounter)
 2675              	 .loc 3 373 0
 2676 0040 254B     	 ldr r3,.L33+8
 2677 0042 1A88     	 ldrh r2,[r3]
 2678 0044 254B     	 ldr r3,.L33+12
 2679 0046 1B88     	 ldrh r3,[r3]
 2680 0048 9A42     	 cmp r2,r3
 2681 004a 0CD8     	 bhi .L29
 374:../SSC/Src/ecatappl.c ****         {
 375:../SSC/Src/ecatappl.c ****             u16EepromStoreTimeoutValue = 0;
 2682              	 .loc 3 375 0
 2683 004c 224B     	 ldr r3,.L33+8
 2684 004e 0022     	 movs r2,#0
 2685 0050 1A80     	 strh r2,[r3]
 376:../SSC/Src/ecatappl.c ****             u16EepromStoreTimeoutCounter = 0;
 2686              	 .loc 3 376 0
 2687 0052 224B     	 ldr r3,.L33+12
 2688 0054 0022     	 movs r2,#0
 2689 0056 1A80     	 strh r2,[r3]
 377:../SSC/Src/ecatappl.c **** 
 378:../SSC/Src/ecatappl.c ****             if (pAPPL_EEPROM_Store != NULL)
 2690              	 .loc 3 378 0
 2691 0058 214B     	 ldr r3,.L33+16
 2692 005a 1B68     	 ldr r3,[r3]
 2693 005c 002B     	 cmp r3,#0
 2694 005e 02D0     	 beq .L29
 379:../SSC/Src/ecatappl.c ****             {
 380:../SSC/Src/ecatappl.c ****                 pAPPL_EEPROM_Store();
 2695              	 .loc 3 380 0
 2696 0060 1F4B     	 ldr r3,.L33+16
 2697 0062 1B68     	 ldr r3,[r3]
 2698 0064 9847     	 blx r3
 2699              	.L29:
 381:../SSC/Src/ecatappl.c ****             }
 382:../SSC/Src/ecatappl.c **** 
 383:../SSC/Src/ecatappl.c ****         }
 384:../SSC/Src/ecatappl.c ****     }
 385:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM3*/
 386:../SSC/Src/ecatappl.c **** 
 387:../SSC/Src/ecatappl.c **** 
 388:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) COE4*/
 389:../SSC/Src/ecatappl.c **** 
 390:../SSC/Src/ecatappl.c ****     /* Increment the counter every ms between two updates based on the system time (32Bit overrun i
 391:../SSC/Src/ecatappl.c ****     if (!b32BitDc || ((u64Timestamp & 0xFFFFFFFF) <= 4293000000))
 2700              	 .loc 3 391 0
 2701 0066 1F4B     	 ldr r3,.L33+20
 2702 0068 1B78     	 ldrb r3,[r3]
 2703 006a 83F00103 	 eor r3,r3,#1
 2704 006e DBB2     	 uxtb r3,r3
 2705 0070 002B     	 cmp r3,#0
 2706 0072 11D1     	 bne .L30
 2707              	 .loc 3 391 0 is_stmt 0 discriminator 1
 2708 0074 1C4B     	 ldr r3,.L33+24
 2709 0076 D3E90023 	 ldrd r2,[r3]
 2710 007a 4FF0FF30 	 mov r0,#-1
 2711 007e 4FF00001 	 mov r1,#0
 2712 0082 02EA0002 	 and r2,r2,r0
 2713 0086 03EA0103 	 and r3,r3,r1
 2714 008a 1848     	 ldr r0,.L33+28
 2715 008c 4FF00001 	 mov r1,#0
 2716 0090 9942     	 cmp r1,r3
 2717 0092 08BF     	 it eq
 2718 0094 9042     	 cmpeq r0,r2
 2719 0096 0CD3     	 bcc .L31
 2720              	.L30:
 392:../SSC/Src/ecatappl.c ****     {
 393:../SSC/Src/ecatappl.c **** 
 394:../SSC/Src/ecatappl.c ****         /* the timestamp is stored in ns */
 395:../SSC/Src/ecatappl.c ****         u64Timestamp = u64Timestamp + 1000000;
 2721              	 .loc 3 395 0 is_stmt 1
 2722 0098 134B     	 ldr r3,.L33+24
 2723 009a D3E90023 	 ldrd r2,[r3]
 2724 009e 1448     	 ldr r0,.L33+32
 2725 00a0 4FF00001 	 mov r1,#0
 2726 00a4 1218     	 adds r2,r2,r0
 2727 00a6 43EB0103 	 adc r3,r3,r1
 2728 00aa 0F49     	 ldr r1,.L33+24
 2729 00ac C1E90023 	 strd r2,[r1]
 2730 00b0 07E0     	 b .L32
 2731              	.L31:
 396:../SSC/Src/ecatappl.c **** 
 397:../SSC/Src/ecatappl.c ****     }
 398:../SSC/Src/ecatappl.c ****     else if(b32BitDc)
 2732              	 .loc 3 398 0
 2733 00b2 0C4B     	 ldr r3,.L33+20
 2734 00b4 1B78     	 ldrb r3,[r3]
 2735 00b6 002B     	 cmp r3,#0
 2736 00b8 03D0     	 beq .L32
 399:../SSC/Src/ecatappl.c ****     {
 400:../SSC/Src/ecatappl.c ****         /* in case of a 32Bit DC and almost expired time stamp check for a DC overrun*/
 401:../SSC/Src/ecatappl.c ****         u32CheckForDcOverrunCnt = CHECK_DC_OVERRUN_IN_MS;
 2737              	 .loc 3 401 0
 2738 00ba 0E4B     	 ldr r3,.L33+36
 2739 00bc 4FF47A62 	 mov r2,#4000
 2740 00c0 1A60     	 str r2,[r3]
 2741              	.L32:
 402:../SSC/Src/ecatappl.c ****     }
 403:../SSC/Src/ecatappl.c **** 
 404:../SSC/Src/ecatappl.c ****     u32CheckForDcOverrunCnt++;
 2742              	 .loc 3 404 0
 2743 00c2 0C4B     	 ldr r3,.L33+36
 2744 00c4 1B68     	 ldr r3,[r3]
 2745 00c6 0133     	 adds r3,r3,#1
 2746 00c8 0A4A     	 ldr r2,.L33+36
 2747 00ca 1360     	 str r3,[r2]
 405:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) COE4*/
 406:../SSC/Src/ecatappl.c **** }
 2748              	 .loc 3 406 0
 2749 00cc 80BD     	 pop {r7,pc}
 2750              	.L34:
 2751 00ce 00BF     	 .align 2
 2752              	.L33:
 2753 00d0 00000000 	 .word bEcatWaitForAlControlRes
 2754 00d4 00000000 	 .word EsmTimeoutCounter
 2755 00d8 00000000 	 .word u16EepromStoreTimeoutValue
 2756 00dc 00000000 	 .word u16EepromStoreTimeoutCounter
 2757 00e0 00000000 	 .word pAPPL_EEPROM_Store
 2758 00e4 00000000 	 .word b32BitDc
 2759 00e8 00000000 	 .word u64Timestamp
 2760 00ec 40FBE1FF 	 .word -1967296
 2761 00f0 40420F00 	 .word 1000000
 2762 00f4 00000000 	 .word u32CheckForDcOverrunCnt
 2763              	 .cfi_endproc
 2764              	.LFE179:
 2766              	 .section .text.HandleCycleTimeMeasurement,"ax",%progbits
 2767              	 .align 2
 2768              	 .global HandleCycleTimeMeasurement
 2769              	 .thumb
 2770              	 .thumb_func
 2772              	HandleCycleTimeMeasurement:
 2773              	.LFB180:
 407:../SSC/Src/ecatappl.c **** 
 408:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 409:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 410:../SSC/Src/ecatappl.c **** /**
 411:../SSC/Src/ecatappl.c **** \brief    In case of non DC synchronization the cycle time measurement is started and 0x1C3.2 (Cycl
 412:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 413:../SSC/Src/ecatappl.c **** void HandleCycleTimeMeasurement(void)
 414:../SSC/Src/ecatappl.c **** {
 2774              	 .loc 3 414 0
 2775              	 .cfi_startproc
 2776              	 
 2777              	 
 2778 0000 80B5     	 push {r7,lr}
 2779              	.LCFI40:
 2780              	 .cfi_def_cfa_offset 8
 2781              	 .cfi_offset 7,-8
 2782              	 .cfi_offset 14,-4
 2783 0002 00AF     	 add r7,sp,#0
 2784              	.LCFI41:
 2785              	 .cfi_def_cfa_register 7
 415:../SSC/Src/ecatappl.c ****     if (!bDcSyncActive) //no DC sync configured (cycle time measurement 0x1C3x.2 is only available 
 2786              	 .loc 3 415 0
 2787 0004 1A4B     	 ldr r3,.L41
 2788 0006 1B78     	 ldrb r3,[r3]
 2789 0008 83F00103 	 eor r3,r3,#1
 2790 000c DBB2     	 uxtb r3,r3
 2791 000e 002B     	 cmp r3,#0
 2792 0010 2DD0     	 beq .L35
 416:../SSC/Src/ecatappl.c ****     {
 417:../SSC/Src/ecatappl.c ****         if (u32CycleTimeStartValue > 0)
 2793              	 .loc 3 417 0
 2794 0012 184B     	 ldr r3,.L41+4
 2795 0014 1B68     	 ldr r3,[r3]
 2796 0016 002B     	 cmp r3,#0
 2797 0018 23D0     	 beq .L37
 418:../SSC/Src/ecatappl.c ****         {
 419:../SSC/Src/ecatappl.c ****             /* bus cycle completed*/
 420:../SSC/Src/ecatappl.c ****             u32CycleTimeStartValue = GetSystemTimeDelay(u32CycleTimeStartValue);
 2798              	 .loc 3 420 0
 2799 001a 164B     	 ldr r3,.L41+4
 2800 001c 1B68     	 ldr r3,[r3]
 2801 001e 1846     	 mov r0,r3
 2802 0020 FFF7FEFF 	 bl GetSystemTimeDelay
 2803 0024 0246     	 mov r2,r0
 2804 0026 134B     	 ldr r3,.L41+4
 2805 0028 1A60     	 str r2,[r3]
 421:../SSC/Src/ecatappl.c **** 
 422:../SSC/Src/ecatappl.c ****             if ((sSyncManOutPar.u32CycleTime == 0) || (sSyncManOutPar.u32CycleTime > u32CycleTimeSt
 2806              	 .loc 3 422 0
 2807 002a 134B     	 ldr r3,.L41+8
 2808 002c 5B68     	 ldr r3,[r3,#4]
 2809 002e 002B     	 cmp r3,#0
 2810 0030 05D0     	 beq .L38
 2811              	 .loc 3 422 0 is_stmt 0 discriminator 1
 2812 0032 114B     	 ldr r3,.L41+8
 2813 0034 5A68     	 ldr r2,[r3,#4]
 2814 0036 0F4B     	 ldr r3,.L41+4
 2815 0038 1B68     	 ldr r3,[r3]
 2816 003a 9A42     	 cmp r2,r3
 2817 003c 03D9     	 bls .L39
 2818              	.L38:
 423:../SSC/Src/ecatappl.c ****             {
 424:../SSC/Src/ecatappl.c ****                     sSyncManOutPar.u32CycleTime = u32CycleTimeStartValue;
 2819              	 .loc 3 424 0 is_stmt 1
 2820 003e 0D4B     	 ldr r3,.L41+4
 2821 0040 1B68     	 ldr r3,[r3]
 2822 0042 0D4A     	 ldr r2,.L41+8
 2823 0044 5360     	 str r3,[r2,#4]
 2824              	.L39:
 425:../SSC/Src/ecatappl.c ****             }
 426:../SSC/Src/ecatappl.c **** 
 427:../SSC/Src/ecatappl.c ****             if ((sSyncManInPar.u32CycleTime == 0) || (sSyncManInPar.u32CycleTime > u32CycleTimeStar
 2825              	 .loc 3 427 0
 2826 0046 0D4B     	 ldr r3,.L41+12
 2827 0048 5B68     	 ldr r3,[r3,#4]
 2828 004a 002B     	 cmp r3,#0
 2829 004c 05D0     	 beq .L40
 2830              	 .loc 3 427 0 is_stmt 0 discriminator 1
 2831 004e 0B4B     	 ldr r3,.L41+12
 2832 0050 5A68     	 ldr r2,[r3,#4]
 2833 0052 084B     	 ldr r3,.L41+4
 2834 0054 1B68     	 ldr r3,[r3]
 2835 0056 9A42     	 cmp r2,r3
 2836 0058 03D9     	 bls .L37
 2837              	.L40:
 428:../SSC/Src/ecatappl.c ****             {
 429:../SSC/Src/ecatappl.c ****                     sSyncManInPar.u32CycleTime = u32CycleTimeStartValue;
 2838              	 .loc 3 429 0 is_stmt 1
 2839 005a 064B     	 ldr r3,.L41+4
 2840 005c 1B68     	 ldr r3,[r3]
 2841 005e 074A     	 ldr r2,.L41+12
 2842 0060 5360     	 str r3,[r2,#4]
 2843              	.L37:
 430:../SSC/Src/ecatappl.c ****             }
 431:../SSC/Src/ecatappl.c ****         }
 432:../SSC/Src/ecatappl.c ****         /* get next start value */
 433:../SSC/Src/ecatappl.c ****         u32CycleTimeStartValue = GetSystemTimeDelay(0);
 2844              	 .loc 3 433 0
 2845 0062 0020     	 movs r0,#0
 2846 0064 FFF7FEFF 	 bl GetSystemTimeDelay
 2847 0068 0246     	 mov r2,r0
 2848 006a 024B     	 ldr r3,.L41+4
 2849 006c 1A60     	 str r2,[r3]
 2850              	.L35:
 434:../SSC/Src/ecatappl.c ****         
 435:../SSC/Src/ecatappl.c ****     }/* No DC sync configured */
 436:../SSC/Src/ecatappl.c **** }
 2851              	 .loc 3 436 0
 2852 006e 80BD     	 pop {r7,pc}
 2853              	.L42:
 2854              	 .align 2
 2855              	.L41:
 2856 0070 00000000 	 .word bDcSyncActive
 2857 0074 00000000 	 .word u32CycleTimeStartValue
 2858 0078 00000000 	 .word sSyncManOutPar
 2859 007c 00000000 	 .word sSyncManInPar
 2860              	 .cfi_endproc
 2861              	.LFE180:
 2863              	 .section .text.GetSystemTimeDelay,"ax",%progbits
 2864              	 .align 2
 2865              	 .global GetSystemTimeDelay
 2866              	 .thumb
 2867              	 .thumb_func
 2869              	GetSystemTimeDelay:
 2870              	.LFB181:
 437:../SSC/Src/ecatappl.c **** 
 438:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 439:../SSC/Src/ecatappl.c **** /**
 440:../SSC/Src/ecatappl.c **** \param    u32StartTime  Old system time (0x910:0x913) value 
 441:../SSC/Src/ecatappl.c **** 
 442:../SSC/Src/ecatappl.c **** \return   System time delta in ns
 443:../SSC/Src/ecatappl.c **** 
 444:../SSC/Src/ecatappl.c **** \brief    Calculates the difference between the old and current system time value in ns.
 445:../SSC/Src/ecatappl.c ****           NOTE: This function only handles a 32Bit system time values (therefore the maximum delay 
 446:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 447:../SSC/Src/ecatappl.c **** 
 448:../SSC/Src/ecatappl.c **** UINT32 GetSystemTimeDelay(UINT32 u32StartTime)
 449:../SSC/Src/ecatappl.c **** {
 2871              	 .loc 3 449 0
 2872              	 .cfi_startproc
 2873              	 
 2874              	 
 2875              	 
 2876 0000 80B4     	 push {r7}
 2877              	.LCFI42:
 2878              	 .cfi_def_cfa_offset 4
 2879              	 .cfi_offset 7,-4
 2880 0002 85B0     	 sub sp,sp,#20
 2881              	.LCFI43:
 2882              	 .cfi_def_cfa_offset 24
 2883 0004 00AF     	 add r7,sp,#0
 2884              	.LCFI44:
 2885              	 .cfi_def_cfa_register 7
 2886 0006 7860     	 str r0,[r7,#4]
 450:../SSC/Src/ecatappl.c ****    UINT32 u32CurValue = 0;
 2887              	 .loc 3 450 0
 2888 0008 0023     	 movs r3,#0
 2889 000a BB60     	 str r3,[r7,#8]
 451:../SSC/Src/ecatappl.c ****    UINT32 u32Delta = 0;
 2890              	 .loc 3 451 0
 2891 000c 0023     	 movs r3,#0
 2892 000e FB60     	 str r3,[r7,#12]
 452:../SSC/Src/ecatappl.c **** 
 453:../SSC/Src/ecatappl.c ****    
 454:../SSC/Src/ecatappl.c ****    HW_EscReadDWordIsr(u32CurValue, ESC_SYSTEMTIME_OFFSET);
 2893              	 .loc 3 454 0
 2894 0010 154B     	 ldr r3,.L49
 2895 0012 1B68     	 ldr r3,[r3]
 2896 0014 BB60     	 str r3,[r7,#8]
 455:../SSC/Src/ecatappl.c **** 
 456:../SSC/Src/ecatappl.c ****    if (u32CurValue > 0)
 2897              	 .loc 3 456 0
 2898 0016 BB68     	 ldr r3,[r7,#8]
 2899 0018 002B     	 cmp r3,#0
 2900 001a 0DD0     	 beq .L44
 457:../SSC/Src/ecatappl.c ****    {
 458:../SSC/Src/ecatappl.c ****       if (u32StartTime <= u32CurValue)
 2901              	 .loc 3 458 0
 2902 001c 7A68     	 ldr r2,[r7,#4]
 2903 001e BB68     	 ldr r3,[r7,#8]
 2904 0020 9A42     	 cmp r2,r3
 2905 0022 04D8     	 bhi .L45
 459:../SSC/Src/ecatappl.c ****       {
 460:../SSC/Src/ecatappl.c ****          u32Delta = u32CurValue - u32StartTime;
 2906              	 .loc 3 460 0
 2907 0024 BA68     	 ldr r2,[r7,#8]
 2908 0026 7B68     	 ldr r3,[r7,#4]
 2909 0028 D31A     	 subs r3,r2,r3
 2910 002a FB60     	 str r3,[r7,#12]
 2911 002c 04E0     	 b .L44
 2912              	.L45:
 461:../SSC/Src/ecatappl.c ****       }
 462:../SSC/Src/ecatappl.c ****       else
 463:../SSC/Src/ecatappl.c ****       {
 464:../SSC/Src/ecatappl.c ****          //The 32Bit timer is wrapped around
 465:../SSC/Src/ecatappl.c ****          u32Delta = u32CurValue + (0xFFFFFFFF - u32StartTime);
 2913              	 .loc 3 465 0
 2914 002e BA68     	 ldr r2,[r7,#8]
 2915 0030 7B68     	 ldr r3,[r7,#4]
 2916 0032 D31A     	 subs r3,r2,r3
 2917 0034 013B     	 subs r3,r3,#1
 2918 0036 FB60     	 str r3,[r7,#12]
 2919              	.L44:
 466:../SSC/Src/ecatappl.c ****       }
 467:../SSC/Src/ecatappl.c ****    }// current value successfully read out
 468:../SSC/Src/ecatappl.c **** 
 469:../SSC/Src/ecatappl.c ****    if (u32StartTime > 0)
 2920              	 .loc 3 469 0
 2921 0038 7B68     	 ldr r3,[r7,#4]
 2922 003a 002B     	 cmp r3,#0
 2923 003c 0CD0     	 beq .L46
 470:../SSC/Src/ecatappl.c ****    {
 471:../SSC/Src/ecatappl.c **** 
 472:../SSC/Src/ecatappl.c ****        /*the difference between two timestamps are calculated => subtract measurement failure*/
 473:../SSC/Src/ecatappl.c ****        if (u32SystemTimeReadFailure < u32Delta)
 2924              	 .loc 3 473 0
 2925 003e 0B4B     	 ldr r3,.L49+4
 2926 0040 1A68     	 ldr r2,[r3]
 2927 0042 FB68     	 ldr r3,[r7,#12]
 2928 0044 9A42     	 cmp r2,r3
 2929 0046 05D2     	 bcs .L47
 474:../SSC/Src/ecatappl.c ****        {
 475:../SSC/Src/ecatappl.c ****            u32Delta = u32Delta - u32SystemTimeReadFailure;
 2930              	 .loc 3 475 0
 2931 0048 084B     	 ldr r3,.L49+4
 2932 004a 1B68     	 ldr r3,[r3]
 2933 004c FA68     	 ldr r2,[r7,#12]
 2934 004e D31A     	 subs r3,r2,r3
 2935 0050 FB60     	 str r3,[r7,#12]
 2936 0052 01E0     	 b .L46
 2937              	.L47:
 476:../SSC/Src/ecatappl.c ****        }
 477:../SSC/Src/ecatappl.c ****        else
 478:../SSC/Src/ecatappl.c ****        {
 479:../SSC/Src/ecatappl.c ****            /*set the delta to 0 if the measurement failure is greater than the calculated differenc
 480:../SSC/Src/ecatappl.c ****            u32Delta = 0;
 2938              	 .loc 3 480 0
 2939 0054 0023     	 movs r3,#0
 2940 0056 FB60     	 str r3,[r7,#12]
 2941              	.L46:
 481:../SSC/Src/ecatappl.c ****        }
 482:../SSC/Src/ecatappl.c ****    }
 483:../SSC/Src/ecatappl.c ****    return u32Delta;
 2942              	 .loc 3 483 0
 2943 0058 FB68     	 ldr r3,[r7,#12]
 484:../SSC/Src/ecatappl.c **** }
 2944              	 .loc 3 484 0
 2945 005a 1846     	 mov r0,r3
 2946 005c 1437     	 adds r7,r7,#20
 2947              	.LCFI45:
 2948              	 .cfi_def_cfa_offset 4
 2949 005e BD46     	 mov sp,r7
 2950              	.LCFI46:
 2951              	 .cfi_def_cfa_register 13
 2952              	 
 2953 0060 5DF8047B 	 ldr r7,[sp],#4
 2954              	.LCFI47:
 2955              	 .cfi_restore 7
 2956              	 .cfi_def_cfa_offset 0
 2957 0064 7047     	 bx lr
 2958              	.L50:
 2959 0066 00BF     	 .align 2
 2960              	.L49:
 2961 0068 10090154 	 .word 1409354000
 2962 006c 00000000 	 .word u32SystemTimeReadFailure
 2963              	 .cfi_endproc
 2964              	.LFE181:
 2966              	 .section .text.PDI_Isr,"ax",%progbits
 2967              	 .align 2
 2968              	 .global PDI_Isr
 2969              	 .thumb
 2970              	 .thumb_func
 2972              	PDI_Isr:
 2973              	.LFB182:
 485:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 486:../SSC/Src/ecatappl.c **** 
 487:../SSC/Src/ecatappl.c **** void PDI_Isr(void)
 488:../SSC/Src/ecatappl.c **** {
 2974              	 .loc 3 488 0
 2975              	 .cfi_startproc
 2976              	 
 2977              	 
 2978 0000 80B5     	 push {r7,lr}
 2979              	.LCFI48:
 2980              	 .cfi_def_cfa_offset 8
 2981              	 .cfi_offset 7,-8
 2982              	 .cfi_offset 14,-4
 2983 0002 82B0     	 sub sp,sp,#8
 2984              	.LCFI49:
 2985              	 .cfi_def_cfa_offset 16
 2986 0004 00AF     	 add r7,sp,#0
 2987              	.LCFI50:
 2988              	 .cfi_def_cfa_register 7
 489:../SSC/Src/ecatappl.c ****     if(bEscIntEnabled)
 2989              	 .loc 3 489 0
 2990 0006 454B     	 ldr r3,.L60
 2991 0008 1B78     	 ldrb r3,[r3]
 2992 000a 002B     	 cmp r3,#0
 2993 000c 00F08180 	 beq .L52
 2994              	.LBB2:
 490:../SSC/Src/ecatappl.c ****     {
 491:../SSC/Src/ecatappl.c ****         /* get the AL event register */
 492:../SSC/Src/ecatappl.c ****         UINT16  ALEvent = HW_GetALEventRegister_Isr();
 2995              	 .loc 3 492 0
 2996 0010 FFF7FEFF 	 bl HW_GetALEventRegister_Isr
 2997 0014 0346     	 mov r3,r0
 2998 0016 FB80     	 strh r3,[r7,#6]
 493:../SSC/Src/ecatappl.c ****         ALEvent = SWAPWORD(ALEvent);
 494:../SSC/Src/ecatappl.c **** 
 495:../SSC/Src/ecatappl.c ****         if ( ALEvent & PROCESS_OUTPUT_EVENT )
 2999              	 .loc 3 495 0
 3000 0018 FB88     	 ldrh r3,[r7,#6]
 3001 001a 03F48063 	 and r3,r3,#1024
 3002 001e 002B     	 cmp r3,#0
 3003 0020 39D0     	 beq .L53
 496:../SSC/Src/ecatappl.c ****         {
 497:../SSC/Src/ecatappl.c ****             if(bDcRunning && bDcSyncActive)
 3004              	 .loc 3 497 0
 3005 0022 3F4B     	 ldr r3,.L60+4
 3006 0024 1B78     	 ldrb r3,[r3]
 3007 0026 002B     	 cmp r3,#0
 3008 0028 06D0     	 beq .L54
 3009              	 .loc 3 497 0 is_stmt 0 discriminator 1
 3010 002a 3E4B     	 ldr r3,.L60+8
 3011 002c 1B78     	 ldrb r3,[r3]
 3012 002e 002B     	 cmp r3,#0
 3013 0030 02D0     	 beq .L54
 498:../SSC/Src/ecatappl.c ****             {
 499:../SSC/Src/ecatappl.c ****                 /* Reset SM/Sync0 counter. Will be incremented on every Sync0 event*/
 500:../SSC/Src/ecatappl.c ****                 u16SmSync0Counter = 0;
 3014              	 .loc 3 500 0 is_stmt 1
 3015 0032 3D4B     	 ldr r3,.L60+12
 3016 0034 0022     	 movs r2,#0
 3017 0036 1A80     	 strh r2,[r3]
 3018              	.L54:
 501:../SSC/Src/ecatappl.c ****             }
 502:../SSC/Src/ecatappl.c ****             if(sSyncManOutPar.u16SmEventMissedCounter > 0)
 3019              	 .loc 3 502 0
 3020 0038 3C4B     	 ldr r3,.L60+16
 3021 003a 1B8D     	 ldrh r3,[r3,#40]
 3022 003c 002B     	 cmp r3,#0
 3023 003e 05D0     	 beq .L55
 503:../SSC/Src/ecatappl.c ****             {
 504:../SSC/Src/ecatappl.c ****                 sSyncManOutPar.u16SmEventMissedCounter--;
 3024              	 .loc 3 504 0
 3025 0040 3A4B     	 ldr r3,.L60+16
 3026 0042 1B8D     	 ldrh r3,[r3,#40]
 3027 0044 013B     	 subs r3,r3,#1
 3028 0046 9AB2     	 uxth r2,r3
 3029 0048 384B     	 ldr r3,.L60+16
 3030 004a 1A85     	 strh r2,[r3,#40]
 3031              	.L55:
 505:../SSC/Src/ecatappl.c ****             }
 506:../SSC/Src/ecatappl.c **** 
 507:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT5*/
 508:../SSC/Src/ecatappl.c ****             sSyncManInPar.u16SmEventMissedCounter = sSyncManOutPar.u16SmEventMissedCounter;
 3032              	 .loc 3 508 0
 3033 004c 374B     	 ldr r3,.L60+16
 3034 004e 1A8D     	 ldrh r2,[r3,#40]
 3035 0050 374B     	 ldr r3,.L60+20
 3036 0052 1A85     	 strh r2,[r3,#40]
 509:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT5*/
 510:../SSC/Src/ecatappl.c **** 
 511:../SSC/Src/ecatappl.c **** 
 512:../SSC/Src/ecatappl.c **** 
 513:../SSC/Src/ecatappl.c ****         /* Outputs were updated, set flag for watchdog monitoring */
 514:../SSC/Src/ecatappl.c ****         bEcatFirstOutputsReceived = TRUE;
 3037              	 .loc 3 514 0
 3038 0054 374B     	 ldr r3,.L60+24
 3039 0056 0122     	 movs r2,#1
 3040 0058 1A70     	 strb r2,[r3]
 515:../SSC/Src/ecatappl.c **** 
 516:../SSC/Src/ecatappl.c **** 
 517:../SSC/Src/ecatappl.c ****         /*
 518:../SSC/Src/ecatappl.c ****             handle output process data event
 519:../SSC/Src/ecatappl.c ****         */
 520:../SSC/Src/ecatappl.c ****         if ( bEcatOutputUpdateRunning )
 3041              	 .loc 3 520 0
 3042 005a 374B     	 ldr r3,.L60+28
 3043 005c 1B78     	 ldrb r3,[r3]
 3044 005e 002B     	 cmp r3,#0
 3045 0060 02D0     	 beq .L56
 521:../SSC/Src/ecatappl.c ****         {
 522:../SSC/Src/ecatappl.c ****             /* slave is in OP, update the outputs */
 523:../SSC/Src/ecatappl.c ****             PDO_OutputMapping();
 3046              	 .loc 3 523 0
 3047 0062 FFF7FEFF 	 bl PDO_OutputMapping
 3048 0066 16E0     	 b .L53
 3049              	.L56:
 524:../SSC/Src/ecatappl.c ****         }
 525:../SSC/Src/ecatappl.c ****         else
 526:../SSC/Src/ecatappl.c ****         {
 527:../SSC/Src/ecatappl.c ****             /* Just acknowledge the process data event in the INIT,PreOP and SafeOP state */
 528:../SSC/Src/ecatappl.c ****             HW_EscReadByteIsr(u8dummy,nEscAddrOutputData);
 3050              	 .loc 3 528 0
 3051 0068 344B     	 ldr r3,.L60+32
 3052 006a 1B88     	 ldrh r3,[r3]
 3053 006c 03F1A843 	 add r3,r3,#1409286144
 3054 0070 03F58033 	 add r3,r3,#65536
 3055 0074 1B78     	 ldrb r3,[r3]
 3056 0076 DAB2     	 uxtb r2,r3
 3057 0078 314B     	 ldr r3,.L60+36
 3058 007a 1A70     	 strb r2,[r3]
 529:../SSC/Src/ecatappl.c ****             HW_EscReadByteIsr(u8dummy,(nEscAddrOutputData+nPdOutputSize-1));
 3059              	 .loc 3 529 0
 3060 007c 2F4B     	 ldr r3,.L60+32
 3061 007e 1B88     	 ldrh r3,[r3]
 3062 0080 1A46     	 mov r2,r3
 3063 0082 304B     	 ldr r3,.L60+40
 3064 0084 1B88     	 ldrh r3,[r3]
 3065 0086 1344     	 add r3,r3,r2
 3066 0088 1A46     	 mov r2,r3
 3067 008a 2F4B     	 ldr r3,.L60+44
 3068 008c 1344     	 add r3,r3,r2
 3069 008e 1B78     	 ldrb r3,[r3]
 3070 0090 DAB2     	 uxtb r2,r3
 3071 0092 2B4B     	 ldr r3,.L60+36
 3072 0094 1A70     	 strb r2,[r3]
 3073              	.L53:
 530:../SSC/Src/ecatappl.c ****         }
 531:../SSC/Src/ecatappl.c ****         }
 532:../SSC/Src/ecatappl.c **** 
 533:../SSC/Src/ecatappl.c ****         /*
 534:../SSC/Src/ecatappl.c ****             Call ECAT_Application() in SM Sync mode
 535:../SSC/Src/ecatappl.c ****         */
 536:../SSC/Src/ecatappl.c ****         if (sSyncManOutPar.u16SyncType == SYNCTYPE_SM_SYNCHRON)
 3074              	 .loc 3 536 0
 3075 0096 254B     	 ldr r3,.L60+16
 3076 0098 5B88     	 ldrh r3,[r3,#2]
 3077 009a 012B     	 cmp r3,#1
 3078 009c 01D1     	 bne .L57
 537:../SSC/Src/ecatappl.c ****         {
 538:../SSC/Src/ecatappl.c ****             /* The Application is synchronized to process data Sync Manager event*/
 539:../SSC/Src/ecatappl.c ****             ECAT_Application();
 3079              	 .loc 3 539 0
 3080 009e FFF7FEFF 	 bl ECAT_Application
 3081              	.L57:
 540:../SSC/Src/ecatappl.c ****         }
 541:../SSC/Src/ecatappl.c **** 
 542:../SSC/Src/ecatappl.c ****     if ( bEcatInputUpdateRunning 
 3082              	 .loc 3 542 0
 3083 00a2 2A4B     	 ldr r3,.L60+48
 3084 00a4 1B78     	 ldrb r3,[r3]
 3085 00a6 002B     	 cmp r3,#0
 3086 00a8 09D0     	 beq .L58
 543:../SSC/Src/ecatappl.c ****        && ((sSyncManInPar.u16SyncType == SYNCTYPE_SM_SYNCHRON) || (sSyncManInPar.u16SyncType == SYN
 3087              	 .loc 3 543 0
 3088 00aa 214B     	 ldr r3,.L60+20
 3089 00ac 5B88     	 ldrh r3,[r3,#2]
 3090 00ae 012B     	 cmp r3,#1
 3091 00b0 03D0     	 beq .L59
 3092              	 .loc 3 543 0 is_stmt 0 discriminator 1
 3093 00b2 1F4B     	 ldr r3,.L60+20
 3094 00b4 5B88     	 ldrh r3,[r3,#2]
 3095 00b6 222B     	 cmp r3,#34
 3096 00b8 01D1     	 bne .L58
 3097              	.L59:
 544:../SSC/Src/ecatappl.c ****         )
 545:../SSC/Src/ecatappl.c ****     {
 546:../SSC/Src/ecatappl.c ****         /* EtherCAT slave is at least in SAFE-OPERATIONAL, update inputs */
 547:../SSC/Src/ecatappl.c ****         PDO_InputMapping();
 3098              	 .loc 3 547 0 is_stmt 1
 3099 00ba FFF7FEFF 	 bl PDO_InputMapping
 3100              	.L58:
 548:../SSC/Src/ecatappl.c ****     }
 549:../SSC/Src/ecatappl.c **** 
 550:../SSC/Src/ecatappl.c ****     /*
 551:../SSC/Src/ecatappl.c ****       Check if cycle exceed
 552:../SSC/Src/ecatappl.c ****     */
 553:../SSC/Src/ecatappl.c ****     /*if next SM event was triggered during runtime increment cycle exceed counter*/
 554:../SSC/Src/ecatappl.c ****     ALEvent = HW_GetALEventRegister_Isr();
 3101              	 .loc 3 554 0
 3102 00be FFF7FEFF 	 bl HW_GetALEventRegister_Isr
 3103 00c2 0346     	 mov r3,r0
 3104 00c4 FB80     	 strh r3,[r7,#6]
 555:../SSC/Src/ecatappl.c ****     ALEvent = SWAPWORD(ALEvent);
 556:../SSC/Src/ecatappl.c **** 
 557:../SSC/Src/ecatappl.c ****     if ( ALEvent & PROCESS_OUTPUT_EVENT )
 3105              	 .loc 3 557 0
 3106 00c6 FB88     	 ldrh r3,[r7,#6]
 3107 00c8 03F48063 	 and r3,r3,#1024
 3108 00cc 002B     	 cmp r3,#0
 3109 00ce 20D0     	 beq .L52
 558:../SSC/Src/ecatappl.c ****     {
 559:../SSC/Src/ecatappl.c ****         sSyncManOutPar.u16CycleExceededCounter++;
 3110              	 .loc 3 559 0
 3111 00d0 164B     	 ldr r3,.L60+16
 3112 00d2 5B8D     	 ldrh r3,[r3,#42]
 3113 00d4 0133     	 adds r3,r3,#1
 3114 00d6 9AB2     	 uxth r2,r3
 3115 00d8 144B     	 ldr r3,.L60+16
 3116 00da 5A85     	 strh r2,[r3,#42]
 560:../SSC/Src/ecatappl.c ****         sSyncManInPar.u16CycleExceededCounter = sSyncManOutPar.u16CycleExceededCounter;
 3117              	 .loc 3 560 0
 3118 00dc 134B     	 ldr r3,.L60+16
 3119 00de 5A8D     	 ldrh r2,[r3,#42]
 3120 00e0 134B     	 ldr r3,.L60+20
 3121 00e2 5A85     	 strh r2,[r3,#42]
 561:../SSC/Src/ecatappl.c **** 
 562:../SSC/Src/ecatappl.c ****       /* Acknowledge the process data event*/
 563:../SSC/Src/ecatappl.c ****             HW_EscReadByteIsr(u8dummy,nEscAddrOutputData);
 3122              	 .loc 3 563 0
 3123 00e4 154B     	 ldr r3,.L60+32
 3124 00e6 1B88     	 ldrh r3,[r3]
 3125 00e8 03F1A843 	 add r3,r3,#1409286144
 3126 00ec 03F58033 	 add r3,r3,#65536
 3127 00f0 1B78     	 ldrb r3,[r3]
 3128 00f2 DAB2     	 uxtb r2,r3
 3129 00f4 124B     	 ldr r3,.L60+36
 3130 00f6 1A70     	 strb r2,[r3]
 564:../SSC/Src/ecatappl.c ****             HW_EscReadByteIsr(u8dummy,(nEscAddrOutputData+nPdOutputSize-1));
 3131              	 .loc 3 564 0
 3132 00f8 104B     	 ldr r3,.L60+32
 3133 00fa 1B88     	 ldrh r3,[r3]
 3134 00fc 1A46     	 mov r2,r3
 3135 00fe 114B     	 ldr r3,.L60+40
 3136 0100 1B88     	 ldrh r3,[r3]
 3137 0102 1344     	 add r3,r3,r2
 3138 0104 1A46     	 mov r2,r3
 3139 0106 104B     	 ldr r3,.L60+44
 3140 0108 1344     	 add r3,r3,r2
 3141 010a 1B78     	 ldrb r3,[r3]
 3142 010c DAB2     	 uxtb r2,r3
 3143 010e 0C4B     	 ldr r3,.L60+36
 3144 0110 1A70     	 strb r2,[r3]
 3145              	.L52:
 3146              	.LBE2:
 565:../SSC/Src/ecatappl.c ****     }
 566:../SSC/Src/ecatappl.c ****     } //if(bEscIntEnabled)
 567:../SSC/Src/ecatappl.c **** 
 568:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT5*/
 569:../SSC/Src/ecatappl.c ****     COE_UpdateSyncErrorStatus();
 3147              	 .loc 3 569 0
 3148 0112 FFF7FEFF 	 bl COE_UpdateSyncErrorStatus
 570:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT5*/
 571:../SSC/Src/ecatappl.c **** 
 572:../SSC/Src/ecatappl.c **** }
 3149              	 .loc 3 572 0
 3150 0116 0837     	 adds r7,r7,#8
 3151              	.LCFI51:
 3152              	 .cfi_def_cfa_offset 8
 3153 0118 BD46     	 mov sp,r7
 3154              	.LCFI52:
 3155              	 .cfi_def_cfa_register 13
 3156              	 
 3157 011a 80BD     	 pop {r7,pc}
 3158              	.L61:
 3159              	 .align 2
 3160              	.L60:
 3161 011c 00000000 	 .word bEscIntEnabled
 3162 0120 00000000 	 .word bDcRunning
 3163 0124 00000000 	 .word bDcSyncActive
 3164 0128 00000000 	 .word u16SmSync0Counter
 3165 012c 00000000 	 .word sSyncManOutPar
 3166 0130 00000000 	 .word sSyncManInPar
 3167 0134 00000000 	 .word bEcatFirstOutputsReceived
 3168 0138 00000000 	 .word bEcatOutputUpdateRunning
 3169 013c 00000000 	 .word nEscAddrOutputData
 3170 0140 00000000 	 .word u8dummy
 3171 0144 00000000 	 .word nPdOutputSize
 3172 0148 FFFF0054 	 .word 1409351679
 3173 014c 00000000 	 .word bEcatInputUpdateRunning
 3174              	 .cfi_endproc
 3175              	.LFE182:
 3177              	 .section .text.Sync0_Isr,"ax",%progbits
 3178              	 .align 2
 3179              	 .global Sync0_Isr
 3180              	 .thumb
 3181              	 .thumb_func
 3183              	Sync0_Isr:
 3184              	.LFB183:
 573:../SSC/Src/ecatappl.c **** 
 574:../SSC/Src/ecatappl.c **** void Sync0_Isr(void)
 575:../SSC/Src/ecatappl.c **** {
 3185              	 .loc 3 575 0
 3186              	 .cfi_startproc
 3187              	 
 3188              	 
 3189 0000 80B5     	 push {r7,lr}
 3190              	.LCFI53:
 3191              	 .cfi_def_cfa_offset 8
 3192              	 .cfi_offset 7,-8
 3193              	 .cfi_offset 14,-4
 3194 0002 82B0     	 sub sp,sp,#8
 3195              	.LCFI54:
 3196              	 .cfi_def_cfa_offset 16
 3197 0004 00AF     	 add r7,sp,#0
 3198              	.LCFI55:
 3199              	 .cfi_def_cfa_register 7
 576:../SSC/Src/ecatappl.c ****      Sync0WdCounter = 0;
 3200              	 .loc 3 576 0
 3201 0006 484B     	 ldr r3,.L72
 3202 0008 0022     	 movs r2,#0
 3203 000a 1A80     	 strh r2,[r3]
 577:../SSC/Src/ecatappl.c **** 
 578:../SSC/Src/ecatappl.c ****     if(bDcSyncActive)
 3204              	 .loc 3 578 0
 3205 000c 474B     	 ldr r3,.L72+4
 3206 000e 1B78     	 ldrb r3,[r3]
 3207 0010 002B     	 cmp r3,#0
 3208 0012 00F08380 	 beq .L63
 579:../SSC/Src/ecatappl.c ****     {
 580:../SSC/Src/ecatappl.c **** 
 581:../SSC/Src/ecatappl.c ****         if ( bEcatInputUpdateRunning )
 3209              	 .loc 3 581 0
 3210 0016 464B     	 ldr r3,.L72+8
 3211 0018 1B78     	 ldrb r3,[r3]
 3212 001a 002B     	 cmp r3,#0
 3213 001c 05D0     	 beq .L64
 582:../SSC/Src/ecatappl.c ****         {
 583:../SSC/Src/ecatappl.c ****             LatchInputSync0Counter++;
 3214              	 .loc 3 583 0
 3215 001e 454B     	 ldr r3,.L72+12
 3216 0020 1B88     	 ldrh r3,[r3]
 3217 0022 0133     	 adds r3,r3,#1
 3218 0024 9AB2     	 uxth r2,r3
 3219 0026 434B     	 ldr r3,.L72+12
 3220 0028 1A80     	 strh r2,[r3]
 3221              	.L64:
 584:../SSC/Src/ecatappl.c ****         }
 585:../SSC/Src/ecatappl.c **** 
 586:../SSC/Src/ecatappl.c ****         if(u16SmSync0Value > 0)
 3222              	 .loc 3 586 0
 3223 002a 434B     	 ldr r3,.L72+16
 3224 002c 1B88     	 ldrh r3,[r3]
 3225 002e 002B     	 cmp r3,#0
 3226 0030 5BD0     	 beq .L65
 587:../SSC/Src/ecatappl.c ****         {
 588:../SSC/Src/ecatappl.c ****            /* Check if Sm-Sync sequence is invalid */
 589:../SSC/Src/ecatappl.c ****            if (u16SmSync0Counter > u16SmSync0Value)
 3227              	 .loc 3 589 0
 3228 0032 424B     	 ldr r3,.L72+20
 3229 0034 1A88     	 ldrh r2,[r3]
 3230 0036 404B     	 ldr r3,.L72+16
 3231 0038 1B88     	 ldrh r3,[r3]
 3232 003a 9A42     	 cmp r2,r3
 3233 003c 23D9     	 bls .L66
 590:../SSC/Src/ecatappl.c ****            {
 591:../SSC/Src/ecatappl.c ****               if ((nPdOutputSize > 0) && (sSyncManOutPar.u16SmEventMissedCounter <= sErrorSettings.
 3234              	 .loc 3 591 0
 3235 003e 404B     	 ldr r3,.L72+24
 3236 0040 1B88     	 ldrh r3,[r3]
 3237 0042 002B     	 cmp r3,#0
 3238 0044 0BD0     	 beq .L67
 3239              	 .loc 3 591 0 is_stmt 0 discriminator 1
 3240 0046 3F4B     	 ldr r3,.L72+28
 3241 0048 1A8D     	 ldrh r2,[r3,#40]
 3242 004a 3F4B     	 ldr r3,.L72+32
 3243 004c 1B89     	 ldrh r3,[r3,#8]
 3244 004e 9A42     	 cmp r2,r3
 3245 0050 05D8     	 bhi .L67
 592:../SSC/Src/ecatappl.c ****               {
 593:../SSC/Src/ecatappl.c ****                  sSyncManOutPar.u16SmEventMissedCounter = sSyncManOutPar.u16SmEventMissedCounter + 
 3246              	 .loc 3 593 0 is_stmt 1
 3247 0052 3C4B     	 ldr r3,.L72+28
 3248 0054 1B8D     	 ldrh r3,[r3,#40]
 3249 0056 0333     	 adds r3,r3,#3
 3250 0058 9AB2     	 uxth r2,r3
 3251 005a 3A4B     	 ldr r3,.L72+28
 3252 005c 1A85     	 strh r2,[r3,#40]
 3253              	.L67:
 594:../SSC/Src/ecatappl.c ****               }
 595:../SSC/Src/ecatappl.c **** 
 596:../SSC/Src/ecatappl.c ****            if ((nPdInputSize > 0) && (nPdOutputSize == 0) && (sSyncManInPar.u16SmEventMissedCounter
 3254              	 .loc 3 596 0
 3255 005e 3B4B     	 ldr r3,.L72+36
 3256 0060 1B88     	 ldrh r3,[r3]
 3257 0062 002B     	 cmp r3,#0
 3258 0064 0FD0     	 beq .L66
 3259              	 .loc 3 596 0 is_stmt 0 discriminator 1
 3260 0066 364B     	 ldr r3,.L72+24
 3261 0068 1B88     	 ldrh r3,[r3]
 3262 006a 002B     	 cmp r3,#0
 3263 006c 0BD1     	 bne .L66
 3264              	 .loc 3 596 0 discriminator 2
 3265 006e 384B     	 ldr r3,.L72+40
 3266 0070 1A8D     	 ldrh r2,[r3,#40]
 3267 0072 354B     	 ldr r3,.L72+32
 3268 0074 1B89     	 ldrh r3,[r3,#8]
 3269 0076 9A42     	 cmp r2,r3
 3270 0078 05D8     	 bhi .L66
 597:../SSC/Src/ecatappl.c ****            {
 598:../SSC/Src/ecatappl.c ****                sSyncManInPar.u16SmEventMissedCounter = sSyncManInPar.u16SmEventMissedCounter + 3;
 3271              	 .loc 3 598 0 is_stmt 1
 3272 007a 354B     	 ldr r3,.L72+40
 3273 007c 1B8D     	 ldrh r3,[r3,#40]
 3274 007e 0333     	 adds r3,r3,#3
 3275 0080 9AB2     	 uxth r2,r3
 3276 0082 334B     	 ldr r3,.L72+40
 3277 0084 1A85     	 strh r2,[r3,#40]
 3278              	.L66:
 599:../SSC/Src/ecatappl.c ****            }
 600:../SSC/Src/ecatappl.c **** 
 601:../SSC/Src/ecatappl.c ****            } // if (u16SmSync0Counter > u16SmSync0Value)
 602:../SSC/Src/ecatappl.c **** 
 603:../SSC/Src/ecatappl.c ****            
 604:../SSC/Src/ecatappl.c ****            if ((nPdOutputSize == 0) && (nPdInputSize > 0))
 3279              	 .loc 3 604 0
 3280 0086 2E4B     	 ldr r3,.L72+24
 3281 0088 1B88     	 ldrh r3,[r3]
 3282 008a 002B     	 cmp r3,#0
 3283 008c 21D1     	 bne .L68
 3284              	 .loc 3 604 0 is_stmt 0 discriminator 1
 3285 008e 2F4B     	 ldr r3,.L72+36
 3286 0090 1B88     	 ldrh r3,[r3]
 3287 0092 002B     	 cmp r3,#0
 3288 0094 1DD0     	 beq .L68
 3289              	.LBB3:
 605:../SSC/Src/ecatappl.c ****            {
 606:../SSC/Src/ecatappl.c ****               /* Input only with DC, check if the last input data was read*/
 607:../SSC/Src/ecatappl.c ****               UINT16  ALEvent = HW_GetALEventRegister_Isr();
 3290              	 .loc 3 607 0 is_stmt 1
 3291 0096 FFF7FEFF 	 bl HW_GetALEventRegister_Isr
 3292 009a 0346     	 mov r3,r0
 3293 009c FB80     	 strh r3,[r7,#6]
 608:../SSC/Src/ecatappl.c ****               ALEvent = SWAPWORD(ALEvent);
 609:../SSC/Src/ecatappl.c **** 
 610:../SSC/Src/ecatappl.c ****               if ((ALEvent & PROCESS_INPUT_EVENT) == 0)
 3294              	 .loc 3 610 0
 3295 009e FB88     	 ldrh r3,[r7,#6]
 3296 00a0 03F40063 	 and r3,r3,#2048
 3297 00a4 002B     	 cmp r3,#0
 3298 00a6 0CD1     	 bne .L69
 611:../SSC/Src/ecatappl.c ****               {
 612:../SSC/Src/ecatappl.c **** 
 613:../SSC/Src/ecatappl.c ****                  /* no input data was read by the master, increment the sm missed counter*/
 614:../SSC/Src/ecatappl.c ****                 if (u16SmSync0Counter <= u16SmSync0Value)
 3299              	 .loc 3 614 0
 3300 00a8 244B     	 ldr r3,.L72+20
 3301 00aa 1A88     	 ldrh r2,[r3]
 3302 00ac 224B     	 ldr r3,.L72+16
 3303 00ae 1B88     	 ldrh r3,[r3]
 3304 00b0 9A42     	 cmp r2,r3
 3305 00b2 0DD8     	 bhi .L71
 615:../SSC/Src/ecatappl.c ****                 {
 616:../SSC/Src/ecatappl.c ****                     u16SmSync0Counter++;
 3306              	 .loc 3 616 0
 3307 00b4 214B     	 ldr r3,.L72+20
 3308 00b6 1B88     	 ldrh r3,[r3]
 3309 00b8 0133     	 adds r3,r3,#1
 3310 00ba 9AB2     	 uxth r2,r3
 3311 00bc 1F4B     	 ldr r3,.L72+20
 3312 00be 1A80     	 strh r2,[r3]
 3313              	.LBE3:
 605:../SSC/Src/ecatappl.c ****               /* Input only with DC, check if the last input data was read*/
 3314              	 .loc 3 605 0
 3315 00c0 13E0     	 b .L65
 3316              	.L69:
 3317              	.LBB4:
 617:../SSC/Src/ecatappl.c ****                 }
 618:../SSC/Src/ecatappl.c ****               }
 619:../SSC/Src/ecatappl.c ****               else
 620:../SSC/Src/ecatappl.c ****               {
 621:../SSC/Src/ecatappl.c ****                  /* Reset SM/Sync0 counter*/
 622:../SSC/Src/ecatappl.c ****                  u16SmSync0Counter = 0;
 3318              	 .loc 3 622 0
 3319 00c2 1E4B     	 ldr r3,.L72+20
 3320 00c4 0022     	 movs r2,#0
 3321 00c6 1A80     	 strh r2,[r3]
 623:../SSC/Src/ecatappl.c **** 
 624:../SSC/Src/ecatappl.c ****                  sSyncManInPar.u16SmEventMissedCounter = 0;
 3322              	 .loc 3 624 0
 3323 00c8 214B     	 ldr r3,.L72+40
 3324 00ca 0022     	 movs r2,#0
 3325 00cc 1A85     	 strh r2,[r3,#40]
 3326              	.LBE4:
 605:../SSC/Src/ecatappl.c ****               /* Input only with DC, check if the last input data was read*/
 3327              	 .loc 3 605 0
 3328 00ce 0CE0     	 b .L65
 3329              	.L71:
 605:../SSC/Src/ecatappl.c ****               /* Input only with DC, check if the last input data was read*/
 3330              	 .loc 3 605 0 is_stmt 0 discriminator 1
 3331 00d0 0BE0     	 b .L65
 3332              	.L68:
 625:../SSC/Src/ecatappl.c **** 
 626:../SSC/Src/ecatappl.c ****               }
 627:../SSC/Src/ecatappl.c ****            }
 628:../SSC/Src/ecatappl.c ****            else if (u16SmSync0Counter <= u16SmSync0Value)
 3333              	 .loc 3 628 0 is_stmt 1
 3334 00d2 1A4B     	 ldr r3,.L72+20
 3335 00d4 1A88     	 ldrh r2,[r3]
 3336 00d6 184B     	 ldr r3,.L72+16
 3337 00d8 1B88     	 ldrh r3,[r3]
 3338 00da 9A42     	 cmp r2,r3
 3339 00dc 05D8     	 bhi .L65
 629:../SSC/Src/ecatappl.c ****            {
 630:../SSC/Src/ecatappl.c **** 
 631:../SSC/Src/ecatappl.c ****                u16SmSync0Counter++;
 3340              	 .loc 3 631 0
 3341 00de 174B     	 ldr r3,.L72+20
 3342 00e0 1B88     	 ldrh r3,[r3]
 3343 00e2 0133     	 adds r3,r3,#1
 3344 00e4 9AB2     	 uxth r2,r3
 3345 00e6 154B     	 ldr r3,.L72+20
 3346 00e8 1A80     	 strh r2,[r3]
 3347              	.L65:
 632:../SSC/Src/ecatappl.c ****            }
 633:../SSC/Src/ecatappl.c ****         }//SM -Sync monitoring enabled
 634:../SSC/Src/ecatappl.c **** 
 635:../SSC/Src/ecatappl.c **** 
 636:../SSC/Src/ecatappl.c ****         /* Application is synchronized to SYNC0 event*/
 637:../SSC/Src/ecatappl.c ****         ECAT_Application();
 3348              	 .loc 3 637 0
 3349 00ea FFF7FEFF 	 bl ECAT_Application
 638:../SSC/Src/ecatappl.c **** 
 639:../SSC/Src/ecatappl.c ****         if ( bEcatInputUpdateRunning 
 3350              	 .loc 3 639 0
 3351 00ee 104B     	 ldr r3,.L72+8
 3352 00f0 1B78     	 ldrb r3,[r3]
 3353 00f2 002B     	 cmp r3,#0
 3354 00f4 12D0     	 beq .L63
 640:../SSC/Src/ecatappl.c ****            && (LatchInputSync0Value > 0) && (LatchInputSync0Value == LatchInputSync0Counter) ) /* I
 3355              	 .loc 3 640 0
 3356 00f6 174B     	 ldr r3,.L72+44
 3357 00f8 1B88     	 ldrh r3,[r3]
 3358 00fa 002B     	 cmp r3,#0
 3359 00fc 0ED0     	 beq .L63
 3360              	 .loc 3 640 0 is_stmt 0 discriminator 1
 3361 00fe 154B     	 ldr r3,.L72+44
 3362 0100 1A88     	 ldrh r2,[r3]
 3363 0102 0C4B     	 ldr r3,.L72+12
 3364 0104 1B88     	 ldrh r3,[r3]
 3365 0106 9A42     	 cmp r2,r3
 3366 0108 08D1     	 bne .L63
 641:../SSC/Src/ecatappl.c ****         {
 642:../SSC/Src/ecatappl.c ****             /* EtherCAT slave is at least in SAFE-OPERATIONAL, update inputs */
 643:../SSC/Src/ecatappl.c ****             PDO_InputMapping();
 3367              	 .loc 3 643 0 is_stmt 1
 3368 010a FFF7FEFF 	 bl PDO_InputMapping
 644:../SSC/Src/ecatappl.c **** 
 645:../SSC/Src/ecatappl.c ****             if(LatchInputSync0Value == 1)
 3369              	 .loc 3 645 0
 3370 010e 114B     	 ldr r3,.L72+44
 3371 0110 1B88     	 ldrh r3,[r3]
 3372 0112 012B     	 cmp r3,#1
 3373 0114 02D1     	 bne .L63
 646:../SSC/Src/ecatappl.c ****             {
 647:../SSC/Src/ecatappl.c ****                 /* if inputs are latched on every Sync0 event (otherwise the counter is reset on th
 648:../SSC/Src/ecatappl.c ****                 LatchInputSync0Counter = 0;
 3374              	 .loc 3 648 0
 3375 0116 074B     	 ldr r3,.L72+12
 3376 0118 0022     	 movs r2,#0
 3377 011a 1A80     	 strh r2,[r3]
 3378              	.L63:
 649:../SSC/Src/ecatappl.c ****             }
 650:../SSC/Src/ecatappl.c ****         }
 651:../SSC/Src/ecatappl.c **** 
 652:../SSC/Src/ecatappl.c ****     }
 653:../SSC/Src/ecatappl.c **** 
 654:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT5*/
 655:../SSC/Src/ecatappl.c ****     COE_UpdateSyncErrorStatus();
 3379              	 .loc 3 655 0
 3380 011c FFF7FEFF 	 bl COE_UpdateSyncErrorStatus
 656:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT5*/
 657:../SSC/Src/ecatappl.c **** 
 658:../SSC/Src/ecatappl.c **** }
 3381              	 .loc 3 658 0
 3382 0120 0837     	 adds r7,r7,#8
 3383              	.LCFI56:
 3384              	 .cfi_def_cfa_offset 8
 3385 0122 BD46     	 mov sp,r7
 3386              	.LCFI57:
 3387              	 .cfi_def_cfa_register 13
 3388              	 
 3389 0124 80BD     	 pop {r7,pc}
 3390              	.L73:
 3391 0126 00BF     	 .align 2
 3392              	.L72:
 3393 0128 00000000 	 .word Sync0WdCounter
 3394 012c 00000000 	 .word bDcSyncActive
 3395 0130 00000000 	 .word bEcatInputUpdateRunning
 3396 0134 00000000 	 .word LatchInputSync0Counter
 3397 0138 00000000 	 .word u16SmSync0Value
 3398 013c 00000000 	 .word u16SmSync0Counter
 3399 0140 00000000 	 .word nPdOutputSize
 3400 0144 00000000 	 .word sSyncManOutPar
 3401 0148 00000000 	 .word sErrorSettings
 3402 014c 00000000 	 .word nPdInputSize
 3403 0150 00000000 	 .word sSyncManInPar
 3404 0154 00000000 	 .word LatchInputSync0Value
 3405              	 .cfi_endproc
 3406              	.LFE183:
 3408              	 .section .text.Sync1_Isr,"ax",%progbits
 3409              	 .align 2
 3410              	 .global Sync1_Isr
 3411              	 .thumb
 3412              	 .thumb_func
 3414              	Sync1_Isr:
 3415              	.LFB184:
 659:../SSC/Src/ecatappl.c **** 
 660:../SSC/Src/ecatappl.c **** void Sync1_Isr(void)
 661:../SSC/Src/ecatappl.c **** {
 3416              	 .loc 3 661 0
 3417              	 .cfi_startproc
 3418              	 
 3419              	 
 3420 0000 80B5     	 push {r7,lr}
 3421              	.LCFI58:
 3422              	 .cfi_def_cfa_offset 8
 3423              	 .cfi_offset 7,-8
 3424              	 .cfi_offset 14,-4
 3425 0002 00AF     	 add r7,sp,#0
 3426              	.LCFI59:
 3427              	 .cfi_def_cfa_register 7
 662:../SSC/Src/ecatappl.c ****     Sync1WdCounter = 0;
 3428              	 .loc 3 662 0
 3429 0004 0A4B     	 ldr r3,.L76
 3430 0006 0022     	 movs r2,#0
 3431 0008 1A80     	 strh r2,[r3]
 663:../SSC/Src/ecatappl.c **** 
 664:../SSC/Src/ecatappl.c ****         if ( bEcatInputUpdateRunning 
 3432              	 .loc 3 664 0
 3433 000a 0A4B     	 ldr r3,.L76+4
 3434 000c 1B78     	 ldrb r3,[r3]
 3435 000e 002B     	 cmp r3,#0
 3436 0010 09D0     	 beq .L75
 665:../SSC/Src/ecatappl.c ****             && (sSyncManInPar.u16SyncType == SYNCTYPE_DCSYNC1)
 3437              	 .loc 3 665 0
 3438 0012 094B     	 ldr r3,.L76+8
 3439 0014 5B88     	 ldrh r3,[r3,#2]
 3440 0016 032B     	 cmp r3,#3
 3441 0018 05D1     	 bne .L75
 666:../SSC/Src/ecatappl.c ****             && (LatchInputSync0Value == 0)) /* Inputs are latched on Sync1 (LatchInputSync0Value ==
 3442              	 .loc 3 666 0
 3443 001a 084B     	 ldr r3,.L76+12
 3444 001c 1B88     	 ldrh r3,[r3]
 3445 001e 002B     	 cmp r3,#0
 3446 0020 01D1     	 bne .L75
 667:../SSC/Src/ecatappl.c ****         {
 668:../SSC/Src/ecatappl.c ****             /* EtherCAT slave is at least in SAFE-OPERATIONAL, update inputs */
 669:../SSC/Src/ecatappl.c ****             PDO_InputMapping();
 3447              	 .loc 3 669 0
 3448 0022 FFF7FEFF 	 bl PDO_InputMapping
 3449              	.L75:
 670:../SSC/Src/ecatappl.c ****         }
 671:../SSC/Src/ecatappl.c **** 
 672:../SSC/Src/ecatappl.c ****         /* Reset Sync0 latch counter (to start next Sync0 latch cycle) */
 673:../SSC/Src/ecatappl.c ****         LatchInputSync0Counter = 0;
 3450              	 .loc 3 673 0
 3451 0026 064B     	 ldr r3,.L76+16
 3452 0028 0022     	 movs r2,#0
 3453 002a 1A80     	 strh r2,[r3]
 674:../SSC/Src/ecatappl.c **** }
 3454              	 .loc 3 674 0
 3455 002c 80BD     	 pop {r7,pc}
 3456              	.L77:
 3457 002e 00BF     	 .align 2
 3458              	.L76:
 3459 0030 00000000 	 .word Sync1WdCounter
 3460 0034 00000000 	 .word bEcatInputUpdateRunning
 3461 0038 00000000 	 .word sSyncManInPar
 3462 003c 00000000 	 .word LatchInputSync0Value
 3463 0040 00000000 	 .word LatchInputSync0Counter
 3464              	 .cfi_endproc
 3465              	.LFE184:
 3467              	 .section .text.MainInit,"ax",%progbits
 3468              	 .align 2
 3469              	 .global MainInit
 3470              	 .thumb
 3471              	 .thumb_func
 3473              	MainInit:
 3474              	.LFB185:
 675:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 676:../SSC/Src/ecatappl.c **** /**
 677:../SSC/Src/ecatappl.c **** 
 678:../SSC/Src/ecatappl.c ****  \brief    This function shall called within a 1ms cycle.
 679:../SSC/Src/ecatappl.c ****         Set Run and Error Led depending on the Led state
 680:../SSC/Src/ecatappl.c **** 
 681:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 682:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 683:../SSC/Src/ecatappl.c **** /**
 684:../SSC/Src/ecatappl.c ****  \param     pObjectDictionary   Pointer to application specific object dictionary.
 685:../SSC/Src/ecatappl.c ****                                 NULL if no specific object are available.
 686:../SSC/Src/ecatappl.c **** \return     0 if initialization was successful
 687:../SSC/Src/ecatappl.c **** 
 688:../SSC/Src/ecatappl.c ****  \brief    This function initialize the EtherCAT Sample Code
 689:../SSC/Src/ecatappl.c **** 
 690:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 691:../SSC/Src/ecatappl.c **** 
 692:../SSC/Src/ecatappl.c **** UINT16 MainInit(void)
 693:../SSC/Src/ecatappl.c **** {
 3475              	 .loc 3 693 0
 3476              	 .cfi_startproc
 3477              	 
 3478              	 
 3479 0000 80B5     	 push {r7,lr}
 3480              	.LCFI60:
 3481              	 .cfi_def_cfa_offset 8
 3482              	 .cfi_offset 7,-8
 3483              	 .cfi_offset 14,-4
 3484 0002 86B0     	 sub sp,sp,#24
 3485              	.LCFI61:
 3486              	 .cfi_def_cfa_offset 32
 3487 0004 00AF     	 add r7,sp,#0
 3488              	.LCFI62:
 3489              	 .cfi_def_cfa_register 7
 694:../SSC/Src/ecatappl.c ****     UINT16 Error = 0;
 3490              	 .loc 3 694 0
 3491 0006 0023     	 movs r3,#0
 3492 0008 FB81     	 strh r3,[r7,#14]
 695:../SSC/Src/ecatappl.c **** /*Hardware init function need to be called from the application layer*/
 696:../SSC/Src/ecatappl.c **** 
 697:../SSC/Src/ecatappl.c **** #ifdef SET_EEPROM_PTR
 698:../SSC/Src/ecatappl.c ****     SET_EEPROM_PTR
 3493              	 .loc 3 698 0
 3494 000a 3E4B     	 ldr r3,.L88
 3495 000c 3E4A     	 ldr r2,.L88+4
 3496 000e 1A60     	 str r2,[r3]
 699:../SSC/Src/ecatappl.c **** #endif
 700:../SSC/Src/ecatappl.c **** 
 701:../SSC/Src/ecatappl.c **** 
 702:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT8*/
 703:../SSC/Src/ecatappl.c **** /* Reset application function pointer*/
 704:../SSC/Src/ecatappl.c **** pAPPL_EEPROM_Read = NULL;
 3497              	 .loc 3 704 0
 3498 0010 3E4B     	 ldr r3,.L88+8
 3499 0012 0022     	 movs r2,#0
 3500 0014 1A60     	 str r2,[r3]
 705:../SSC/Src/ecatappl.c ****     pAPPL_EEPROM_Write = NULL;
 3501              	 .loc 3 705 0
 3502 0016 3E4B     	 ldr r3,.L88+12
 3503 0018 0022     	 movs r2,#0
 3504 001a 1A60     	 str r2,[r3]
 706:../SSC/Src/ecatappl.c ****     pAPPL_EEPROM_Reload = NULL;
 3505              	 .loc 3 706 0
 3506 001c 3D4B     	 ldr r3,.L88+16
 3507 001e 0022     	 movs r2,#0
 3508 0020 1A60     	 str r2,[r3]
 707:../SSC/Src/ecatappl.c ****     pAPPL_EEPROM_Store = NULL;
 3509              	 .loc 3 707 0
 3510 0022 3D4B     	 ldr r3,.L88+20
 3511 0024 0022     	 movs r2,#0
 3512 0026 1A60     	 str r2,[r3]
 708:../SSC/Src/ecatappl.c **** 
 709:../SSC/Src/ecatappl.c **** 
 710:../SSC/Src/ecatappl.c **** 
 711:../SSC/Src/ecatappl.c ****     pAPPL_FoeRead = NULL;
 3513              	 .loc 3 711 0
 3514 0028 3C4B     	 ldr r3,.L88+24
 3515 002a 0022     	 movs r2,#0
 3516 002c 1A60     	 str r2,[r3]
 712:../SSC/Src/ecatappl.c ****     pAPPL_FoeReadData = NULL;
 3517              	 .loc 3 712 0
 3518 002e 3C4B     	 ldr r3,.L88+28
 3519 0030 0022     	 movs r2,#0
 3520 0032 1A60     	 str r2,[r3]
 713:../SSC/Src/ecatappl.c ****     pAPPL_FoeError = NULL;
 3521              	 .loc 3 713 0
 3522 0034 3B4B     	 ldr r3,.L88+32
 3523 0036 0022     	 movs r2,#0
 3524 0038 1A60     	 str r2,[r3]
 714:../SSC/Src/ecatappl.c ****     pAPPL_FoeWrite = NULL;
 3525              	 .loc 3 714 0
 3526 003a 3B4B     	 ldr r3,.L88+36
 3527 003c 0022     	 movs r2,#0
 3528 003e 1A60     	 str r2,[r3]
 715:../SSC/Src/ecatappl.c ****     pAPPL_FoeWriteData = NULL;
 3529              	 .loc 3 715 0
 3530 0040 3A4B     	 ldr r3,.L88+40
 3531 0042 0022     	 movs r2,#0
 3532 0044 1A60     	 str r2,[r3]
 716:../SSC/Src/ecatappl.c **** 
 717:../SSC/Src/ecatappl.c ****     pAPPL_MainLoop = NULL;
 3533              	 .loc 3 717 0
 3534 0046 3A4B     	 ldr r3,.L88+44
 3535 0048 0022     	 movs r2,#0
 3536 004a 1A60     	 str r2,[r3]
 718:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT8*/
 719:../SSC/Src/ecatappl.c **** 
 720:../SSC/Src/ecatappl.c ****     /* initialize the EtherCAT Slave Interface */
 721:../SSC/Src/ecatappl.c ****     ECAT_Init();
 3537              	 .loc 3 721 0
 3538 004c FFF7FEFF 	 bl ECAT_Init
 722:../SSC/Src/ecatappl.c ****     /* initialize the objects */
 723:../SSC/Src/ecatappl.c ****     COE_ObjInit();
 3539              	 .loc 3 723 0
 3540 0050 FFF7FEFF 	 bl COE_ObjInit
 724:../SSC/Src/ecatappl.c **** 
 725:../SSC/Src/ecatappl.c **** 
 726:../SSC/Src/ecatappl.c ****     /*indicate that the slave stack initialization finished*/
 727:../SSC/Src/ecatappl.c ****     bInitFinished = TRUE;
 3541              	 .loc 3 727 0
 3542 0054 374B     	 ldr r3,.L88+48
 3543 0056 0122     	 movs r2,#1
 3544 0058 1A70     	 strb r2,[r3]
 728:../SSC/Src/ecatappl.c **** 
 729:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 730:../SSC/Src/ecatappl.c **** 
 731:../SSC/Src/ecatappl.c ****     bMinCycleTimeMeasurementStarted = FALSE;
 3545              	 .loc 3 731 0
 3546 005a 374B     	 ldr r3,.L88+52
 3547 005c 0022     	 movs r2,#0
 3548 005e 1A70     	 strb r2,[r3]
 732:../SSC/Src/ecatappl.c ****     u32CycleTimeStartValue = 0;
 3549              	 .loc 3 732 0
 3550 0060 364B     	 ldr r3,.L88+56
 3551 0062 0022     	 movs r2,#0
 3552 0064 1A60     	 str r2,[r3]
 733:../SSC/Src/ecatappl.c ****     u32MinCycleTimeStartValue = 0;
 3553              	 .loc 3 733 0
 3554 0066 364B     	 ldr r3,.L88+60
 3555 0068 0022     	 movs r2,#0
 3556 006a 1A60     	 str r2,[r3]
 734:../SSC/Src/ecatappl.c **** 
 735:../SSC/Src/ecatappl.c ****     u32SystemTimeReadFailure = 0;
 3557              	 .loc 3 735 0
 3558 006c 354B     	 ldr r3,.L88+64
 3559 006e 0022     	 movs r2,#0
 3560 0070 1A60     	 str r2,[r3]
 3561              	.LBB5:
 736:../SSC/Src/ecatappl.c **** 
 737:../SSC/Src/ecatappl.c ****     /* Get the System Time read failure */
 738:../SSC/Src/ecatappl.c ****     {
 739:../SSC/Src/ecatappl.c ****        UINT32 u32TimeValue = 0;
 3562              	 .loc 3 739 0
 3563 0072 0023     	 movs r3,#0
 3564 0074 BB60     	 str r3,[r7,#8]
 740:../SSC/Src/ecatappl.c ****        UINT32 u32Cnt = 0;
 3565              	 .loc 3 740 0
 3566 0076 0023     	 movs r3,#0
 3567 0078 7B61     	 str r3,[r7,#20]
 741:../SSC/Src/ecatappl.c ****        UINT32 u32Delta = 0;
 3568              	 .loc 3 741 0
 3569 007a 0023     	 movs r3,#0
 3570 007c 3B61     	 str r3,[r7,#16]
 742:../SSC/Src/ecatappl.c **** 
 743:../SSC/Src/ecatappl.c ****        while (u32Cnt < 1000)
 3571              	 .loc 3 743 0
 3572 007e 26E0     	 b .L79
 3573              	.L84:
 744:../SSC/Src/ecatappl.c ****        {
 745:../SSC/Src/ecatappl.c ****            HW_EscReadDWordIsr(u32TimeValue, ESC_SYSTEMTIME_OFFSET);
 3574              	 .loc 3 745 0
 3575 0080 314B     	 ldr r3,.L88+68
 3576 0082 1B68     	 ldr r3,[r3]
 3577 0084 BB60     	 str r3,[r7,#8]
 746:../SSC/Src/ecatappl.c ****            HW_EscReadDWordIsr(u32Delta, ESC_SYSTEMTIME_OFFSET);
 3578              	 .loc 3 746 0
 3579 0086 304B     	 ldr r3,.L88+68
 3580 0088 1B68     	 ldr r3,[r3]
 3581 008a 3B61     	 str r3,[r7,#16]
 747:../SSC/Src/ecatappl.c **** 
 748:../SSC/Src/ecatappl.c ****             if (u32TimeValue <= u32Delta)
 3582              	 .loc 3 748 0
 3583 008c BA68     	 ldr r2,[r7,#8]
 3584 008e 3B69     	 ldr r3,[r7,#16]
 3585 0090 9A42     	 cmp r2,r3
 3586 0092 04D8     	 bhi .L80
 749:../SSC/Src/ecatappl.c ****             {
 750:../SSC/Src/ecatappl.c ****                     u32Delta = u32Delta - u32TimeValue;
 3587              	 .loc 3 750 0
 3588 0094 3A69     	 ldr r2,[r7,#16]
 3589 0096 BB68     	 ldr r3,[r7,#8]
 3590 0098 D31A     	 subs r3,r2,r3
 3591 009a 3B61     	 str r3,[r7,#16]
 3592 009c 04E0     	 b .L81
 3593              	.L80:
 751:../SSC/Src/ecatappl.c ****             }
 752:../SSC/Src/ecatappl.c ****             else
 753:../SSC/Src/ecatappl.c ****             {
 754:../SSC/Src/ecatappl.c ****                 //The 32Bit timer is wrapped around
 755:../SSC/Src/ecatappl.c ****                 u32Delta = u32Delta + (0xFFFFFFFF - u32TimeValue);
 3594              	 .loc 3 755 0
 3595 009e 3A69     	 ldr r2,[r7,#16]
 3596 00a0 BB68     	 ldr r3,[r7,#8]
 3597 00a2 D31A     	 subs r3,r2,r3
 3598 00a4 013B     	 subs r3,r3,#1
 3599 00a6 3B61     	 str r3,[r7,#16]
 3600              	.L81:
 756:../SSC/Src/ecatappl.c ****             }
 757:../SSC/Src/ecatappl.c **** 
 758:../SSC/Src/ecatappl.c **** 
 759:../SSC/Src/ecatappl.c ****             if (u32SystemTimeReadFailure == 0)
 3601              	 .loc 3 759 0
 3602 00a8 264B     	 ldr r3,.L88+64
 3603 00aa 1B68     	 ldr r3,[r3]
 3604 00ac 002B     	 cmp r3,#0
 3605 00ae 03D1     	 bne .L82
 760:../SSC/Src/ecatappl.c ****             {
 761:../SSC/Src/ecatappl.c ****                 u32SystemTimeReadFailure = u32Delta;
 3606              	 .loc 3 761 0
 3607 00b0 244A     	 ldr r2,.L88+64
 3608 00b2 3B69     	 ldr r3,[r7,#16]
 3609 00b4 1360     	 str r3,[r2]
 3610 00b6 07E0     	 b .L83
 3611              	.L82:
 762:../SSC/Src/ecatappl.c ****             }
 763:../SSC/Src/ecatappl.c ****             else if (u32SystemTimeReadFailure > u32Delta)
 3612              	 .loc 3 763 0
 3613 00b8 224B     	 ldr r3,.L88+64
 3614 00ba 1A68     	 ldr r2,[r3]
 3615 00bc 3B69     	 ldr r3,[r7,#16]
 3616 00be 9A42     	 cmp r2,r3
 3617 00c0 02D9     	 bls .L83
 764:../SSC/Src/ecatappl.c ****             {
 765:../SSC/Src/ecatappl.c ****                 u32SystemTimeReadFailure = u32Delta;
 3618              	 .loc 3 765 0
 3619 00c2 204A     	 ldr r2,.L88+64
 3620 00c4 3B69     	 ldr r3,[r7,#16]
 3621 00c6 1360     	 str r3,[r2]
 3622              	.L83:
 766:../SSC/Src/ecatappl.c ****             }
 767:../SSC/Src/ecatappl.c **** 
 768:../SSC/Src/ecatappl.c ****           u32Cnt++;
 3623              	 .loc 3 768 0
 3624 00c8 7B69     	 ldr r3,[r7,#20]
 3625 00ca 0133     	 adds r3,r3,#1
 3626 00cc 7B61     	 str r3,[r7,#20]
 3627              	.L79:
 743:../SSC/Src/ecatappl.c ****        {
 3628              	 .loc 3 743 0
 3629 00ce 7B69     	 ldr r3,[r7,#20]
 3630 00d0 B3F57A7F 	 cmp r3,#1000
 3631 00d4 D4D3     	 bcc .L84
 3632              	.LBE5:
 3633              	.LBB6:
 769:../SSC/Src/ecatappl.c ****        }
 770:../SSC/Src/ecatappl.c ****     
 771:../SSC/Src/ecatappl.c ****     }
 772:../SSC/Src/ecatappl.c **** 
 773:../SSC/Src/ecatappl.c **** 
 774:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_END(V5.12) ECAT1*/
 775:../SSC/Src/ecatappl.c **** 
 776:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM1*/
 777:../SSC/Src/ecatappl.c ****     {
 778:../SSC/Src/ecatappl.c ****         UINT16 TmpData = 0;
 3634              	 .loc 3 778 0
 3635 00d6 0023     	 movs r3,#0
 3636 00d8 FB80     	 strh r3,[r7,#6]
 779:../SSC/Src/ecatappl.c ****         HW_EscReadWord(TmpData, ESC_EEPROM_CONTROL_OFFSET);
 3637              	 .loc 3 779 0
 3638 00da 1C4B     	 ldr r3,.L88+72
 3639 00dc 1B88     	 ldrh r3,[r3]
 3640 00de FB80     	 strh r3,[r7,#6]
 780:../SSC/Src/ecatappl.c ****         TmpData = SWAPDWORD(TmpData);
 781:../SSC/Src/ecatappl.c ****         //get bit6 of register 0x502
 782:../SSC/Src/ecatappl.c ****         if ((TmpData & ESC_EEPROM_SUPPORTED_READBYTES_MASK) > 0)
 3641              	 .loc 3 782 0
 3642 00e0 FB88     	 ldrh r3,[r7,#6]
 3643 00e2 03F04003 	 and r3,r3,#64
 3644 00e6 002B     	 cmp r3,#0
 3645 00e8 03DD     	 ble .L85
 783:../SSC/Src/ecatappl.c ****         {
 784:../SSC/Src/ecatappl.c ****             //8Bytes EEPROM read access
 785:../SSC/Src/ecatappl.c ****             EepromReadSize = 8;
 3646              	 .loc 3 785 0
 3647 00ea 194B     	 ldr r3,.L88+76
 3648 00ec 0822     	 movs r2,#8
 3649 00ee 1A80     	 strh r2,[r3]
 3650 00f0 02E0     	 b .L86
 3651              	.L85:
 786:../SSC/Src/ecatappl.c ****         }
 787:../SSC/Src/ecatappl.c ****         else
 788:../SSC/Src/ecatappl.c ****         {
 789:../SSC/Src/ecatappl.c ****             //4Bytes EEPROM read access
 790:../SSC/Src/ecatappl.c ****             EepromReadSize = 4;
 3652              	 .loc 3 790 0
 3653 00f2 174B     	 ldr r3,.L88+76
 3654 00f4 0422     	 movs r2,#4
 3655 00f6 1A80     	 strh r2,[r3]
 3656              	.L86:
 3657              	.LBE6:
 791:../SSC/Src/ecatappl.c ****         }
 792:../SSC/Src/ecatappl.c ****     }
 793:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM1*/
 794:../SSC/Src/ecatappl.c **** 
 795:../SSC/Src/ecatappl.c **** /*Application Init need to be called from the application layer*/
 796:../SSC/Src/ecatappl.c ****      return Error;
 3658              	 .loc 3 796 0
 3659 00f8 FB89     	 ldrh r3,[r7,#14]
 797:../SSC/Src/ecatappl.c **** }
 3660              	 .loc 3 797 0
 3661 00fa 1846     	 mov r0,r3
 3662 00fc 1837     	 adds r7,r7,#24
 3663              	.LCFI63:
 3664              	 .cfi_def_cfa_offset 8
 3665 00fe BD46     	 mov sp,r7
 3666              	.LCFI64:
 3667              	 .cfi_def_cfa_register 13
 3668              	 
 3669 0100 80BD     	 pop {r7,pc}
 3670              	.L89:
 3671 0102 00BF     	 .align 2
 3672              	.L88:
 3673 0104 00000000 	 .word pEEPROM
 3674 0108 00000000 	 .word aEepromData
 3675 010c 00000000 	 .word pAPPL_EEPROM_Read
 3676 0110 00000000 	 .word pAPPL_EEPROM_Write
 3677 0114 00000000 	 .word pAPPL_EEPROM_Reload
 3678 0118 00000000 	 .word pAPPL_EEPROM_Store
 3679 011c 00000000 	 .word pAPPL_FoeRead
 3680 0120 00000000 	 .word pAPPL_FoeReadData
 3681 0124 00000000 	 .word pAPPL_FoeError
 3682 0128 00000000 	 .word pAPPL_FoeWrite
 3683 012c 00000000 	 .word pAPPL_FoeWriteData
 3684 0130 00000000 	 .word pAPPL_MainLoop
 3685 0134 00000000 	 .word bInitFinished
 3686 0138 00000000 	 .word bMinCycleTimeMeasurementStarted
 3687 013c 00000000 	 .word u32CycleTimeStartValue
 3688 0140 00000000 	 .word u32MinCycleTimeStartValue
 3689 0144 00000000 	 .word u32SystemTimeReadFailure
 3690 0148 10090154 	 .word 1409354000
 3691 014c 02050154 	 .word 1409352962
 3692 0150 00000000 	 .word EepromReadSize
 3693              	 .cfi_endproc
 3694              	.LFE185:
 3696              	 .section .text.MainLoop,"ax",%progbits
 3697              	 .align 2
 3698              	 .global MainLoop
 3699              	 .thumb
 3700              	 .thumb_func
 3702              	MainLoop:
 3703              	.LFB186:
 798:../SSC/Src/ecatappl.c **** 
 799:../SSC/Src/ecatappl.c **** 
 800:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 801:../SSC/Src/ecatappl.c **** /**
 802:../SSC/Src/ecatappl.c **** 
 803:../SSC/Src/ecatappl.c ****  \brief    This function shall be called cyclically from main
 804:../SSC/Src/ecatappl.c **** 
 805:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 806:../SSC/Src/ecatappl.c **** 
 807:../SSC/Src/ecatappl.c **** void MainLoop(void)
 808:../SSC/Src/ecatappl.c **** {
 3704              	 .loc 3 808 0
 3705              	 .cfi_startproc
 3706              	 
 3707              	 
 3708 0000 80B5     	 push {r7,lr}
 3709              	.LCFI65:
 3710              	 .cfi_def_cfa_offset 8
 3711              	 .cfi_offset 7,-8
 3712              	 .cfi_offset 14,-4
 3713 0002 82B0     	 sub sp,sp,#8
 3714              	.LCFI66:
 3715              	 .cfi_def_cfa_offset 16
 3716 0004 00AF     	 add r7,sp,#0
 3717              	.LCFI67:
 3718              	 .cfi_def_cfa_register 7
 809:../SSC/Src/ecatappl.c ****     
 810:../SSC/Src/ecatappl.c ****     /*return if initialization not finished */
 811:../SSC/Src/ecatappl.c ****     if(bInitFinished == FALSE)
 3719              	 .loc 3 811 0
 3720 0006 334B     	 ldr r3,.L100
 3721 0008 1B78     	 ldrb r3,[r3]
 3722 000a 83F00103 	 eor r3,r3,#1
 3723 000e DBB2     	 uxtb r3,r3
 3724 0010 002B     	 cmp r3,#0
 3725 0012 00D0     	 beq .L91
 812:../SSC/Src/ecatappl.c ****     {
 813:../SSC/Src/ecatappl.c ****         return;
 3726              	 .loc 3 813 0
 3727 0014 5AE0     	 b .L90
 3728              	.L91:
 814:../SSC/Src/ecatappl.c ****     }
 815:../SSC/Src/ecatappl.c **** 
 816:../SSC/Src/ecatappl.c **** 
 817:../SSC/Src/ecatappl.c **** 
 818:../SSC/Src/ecatappl.c ****         /* FreeRun-Mode:  bEscIntEnabled = FALSE, bDcSyncActive = FALSE
 819:../SSC/Src/ecatappl.c ****            Synchron-Mode: bEscIntEnabled = TRUE, bDcSyncActive = FALSE
 820:../SSC/Src/ecatappl.c ****            DC-Mode:       bEscIntEnabled = TRUE, bDcSyncActive = TRUE */
 821:../SSC/Src/ecatappl.c ****         if (
 822:../SSC/Src/ecatappl.c ****             (!bEscIntEnabled || !bEcatFirstOutputsReceived)     /* SM-Synchronous, but not SM-event
 3729              	 .loc 3 822 0
 3730 0016 304B     	 ldr r3,.L100+4
 3731 0018 1B78     	 ldrb r3,[r3]
 3732 001a 83F00103 	 eor r3,r3,#1
 3733 001e DBB2     	 uxtb r3,r3
 821:../SSC/Src/ecatappl.c ****             (!bEscIntEnabled || !bEcatFirstOutputsReceived)     /* SM-Synchronous, but not SM-event
 3734              	 .loc 3 821 0
 3735 0020 002B     	 cmp r3,#0
 3736 0022 06D1     	 bne .L93
 3737              	 .loc 3 822 0
 3738 0024 2D4B     	 ldr r3,.L100+8
 3739 0026 1B78     	 ldrb r3,[r3]
 3740 0028 83F00103 	 eor r3,r3,#1
 3741 002c DBB2     	 uxtb r3,r3
 3742 002e 002B     	 cmp r3,#0
 3743 0030 38D0     	 beq .L94
 3744              	.L93:
 823:../SSC/Src/ecatappl.c ****           && !bDcSyncActive                                               /* DC-Synchronous */
 3745              	 .loc 3 823 0
 3746 0032 2B4B     	 ldr r3,.L100+12
 3747 0034 1B78     	 ldrb r3,[r3]
 3748 0036 83F00103 	 eor r3,r3,#1
 3749 003a DBB2     	 uxtb r3,r3
 3750 003c 002B     	 cmp r3,#0
 3751 003e 31D0     	 beq .L94
 824:../SSC/Src/ecatappl.c ****             )
 825:../SSC/Src/ecatappl.c ****         {
 826:../SSC/Src/ecatappl.c ****             /* if the application is running in ECAT Synchron Mode the function ECAT_Application is
 827:../SSC/Src/ecatappl.c ****                from the ESC interrupt routine (in mcihw.c or spihw.c),
 828:../SSC/Src/ecatappl.c ****                in ECAT Synchron Mode it should be additionally checked, if the SM-event is received
 829:../SSC/Src/ecatappl.c ****                at least once (bEcatFirstOutputsReceived = 1), otherwise no interrupt is generated
 830:../SSC/Src/ecatappl.c ****                and the function ECAT_Application has to be called here (with interrupts disabled,
 831:../SSC/Src/ecatappl.c ****                because the SM-event could be generated while executing ECAT_Application) */
 832:../SSC/Src/ecatappl.c ****             if ( !bEscIntEnabled )
 3752              	 .loc 3 832 0
 3753 0040 254B     	 ldr r3,.L100+4
 3754 0042 1B78     	 ldrb r3,[r3]
 3755 0044 83F00103 	 eor r3,r3,#1
 3756 0048 DBB2     	 uxtb r3,r3
 3757 004a 002B     	 cmp r3,#0
 3758 004c 1ED0     	 beq .L95
 3759              	.LBB7:
 833:../SSC/Src/ecatappl.c ****             {
 834:../SSC/Src/ecatappl.c ****                 /* application is running in ECAT FreeRun Mode,
 835:../SSC/Src/ecatappl.c ****                    first we have to check, if outputs were received */
 836:../SSC/Src/ecatappl.c ****                 UINT16 ALEvent = HW_GetALEventRegister();
 3760              	 .loc 3 836 0
 3761 004e FFF7FEFF 	 bl HW_GetALEventRegister
 3762 0052 0346     	 mov r3,r0
 3763 0054 FB80     	 strh r3,[r7,#6]
 837:../SSC/Src/ecatappl.c ****                 ALEvent = SWAPWORD(ALEvent);
 838:../SSC/Src/ecatappl.c **** 
 839:../SSC/Src/ecatappl.c ****                 if ( ALEvent & PROCESS_OUTPUT_EVENT )
 3764              	 .loc 3 839 0
 3765 0056 FB88     	 ldrh r3,[r7,#6]
 3766 0058 03F48063 	 and r3,r3,#1024
 3767 005c 002B     	 cmp r3,#0
 3768 005e 09D0     	 beq .L96
 840:../SSC/Src/ecatappl.c ****                 {
 841:../SSC/Src/ecatappl.c ****                     /* set the flag for the state machine behavior */
 842:../SSC/Src/ecatappl.c ****                     bEcatFirstOutputsReceived = TRUE;
 3769              	 .loc 3 842 0
 3770 0060 1E4B     	 ldr r3,.L100+8
 3771 0062 0122     	 movs r2,#1
 3772 0064 1A70     	 strb r2,[r3]
 843:../SSC/Src/ecatappl.c ****                     if ( bEcatOutputUpdateRunning )
 3773              	 .loc 3 843 0
 3774 0066 1F4B     	 ldr r3,.L100+16
 3775 0068 1B78     	 ldrb r3,[r3]
 3776 006a 002B     	 cmp r3,#0
 3777 006c 0ED0     	 beq .L95
 844:../SSC/Src/ecatappl.c ****                     {
 845:../SSC/Src/ecatappl.c ****                         /* update the outputs */
 846:../SSC/Src/ecatappl.c ****                         PDO_OutputMapping();
 3778              	 .loc 3 846 0
 3779 006e FFF7FEFF 	 bl PDO_OutputMapping
 3780 0072 0BE0     	 b .L95
 3781              	.L96:
 847:../SSC/Src/ecatappl.c ****                     }
 848:../SSC/Src/ecatappl.c ****                 }
 849:../SSC/Src/ecatappl.c ****                 else if ( nPdOutputSize == 0 )
 3782              	 .loc 3 849 0
 3783 0074 1C4B     	 ldr r3,.L100+20
 3784 0076 1B88     	 ldrh r3,[r3]
 3785 0078 002B     	 cmp r3,#0
 3786 007a 07D1     	 bne .L95
 850:../SSC/Src/ecatappl.c ****                 {
 851:../SSC/Src/ecatappl.c ****                     /* if no outputs are transmitted, the watchdog must be reset, when the inputs w
 852:../SSC/Src/ecatappl.c ****                     if ( ALEvent & PROCESS_INPUT_EVENT )
 3787              	 .loc 3 852 0
 3788 007c FB88     	 ldrh r3,[r7,#6]
 3789 007e 03F40063 	 and r3,r3,#2048
 3790 0082 002B     	 cmp r3,#0
 3791 0084 02D0     	 beq .L95
 853:../SSC/Src/ecatappl.c ****                     {
 854:../SSC/Src/ecatappl.c ****                         /* Outputs were updated, set flag for watchdog monitoring */
 855:../SSC/Src/ecatappl.c ****                         bEcatFirstOutputsReceived = TRUE;
 3792              	 .loc 3 855 0
 3793 0086 154B     	 ldr r3,.L100+8
 3794 0088 0122     	 movs r2,#1
 3795 008a 1A70     	 strb r2,[r3]
 3796              	.L95:
 3797              	.LBE7:
 856:../SSC/Src/ecatappl.c ****                     }
 857:../SSC/Src/ecatappl.c ****                 }
 858:../SSC/Src/ecatappl.c ****             }
 859:../SSC/Src/ecatappl.c **** 
 860:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT3*/
 861:../SSC/Src/ecatappl.c ****             DISABLE_ESC_INT();
 3798              	 .loc 3 861 0
 3799 008c FFF7FEFF 	 bl DISABLE_ESC_INT
 862:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT3*/
 863:../SSC/Src/ecatappl.c ****              ECAT_Application();
 3800              	 .loc 3 863 0
 3801 0090 FFF7FEFF 	 bl ECAT_Application
 864:../SSC/Src/ecatappl.c **** 
 865:../SSC/Src/ecatappl.c ****             if ( bEcatInputUpdateRunning )
 3802              	 .loc 3 865 0
 3803 0094 154B     	 ldr r3,.L100+24
 3804 0096 1B78     	 ldrb r3,[r3]
 3805 0098 002B     	 cmp r3,#0
 3806 009a 01D0     	 beq .L98
 866:../SSC/Src/ecatappl.c ****             {
 867:../SSC/Src/ecatappl.c ****                 /* EtherCAT slave is at least in SAFE-OPERATIONAL, update inputs */
 868:../SSC/Src/ecatappl.c ****                 PDO_InputMapping();
 3807              	 .loc 3 868 0
 3808 009c FFF7FEFF 	 bl PDO_InputMapping
 3809              	.L98:
 869:../SSC/Src/ecatappl.c ****             }
 870:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT3*/
 871:../SSC/Src/ecatappl.c ****             ENABLE_ESC_INT();
 3810              	 .loc 3 871 0
 3811 00a0 FFF7FEFF 	 bl ENABLE_ESC_INT
 3812              	.L94:
 872:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT3*/
 873:../SSC/Src/ecatappl.c ****         }
 874:../SSC/Src/ecatappl.c **** 
 875:../SSC/Src/ecatappl.c **** 
 876:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) COE4*/
 877:../SSC/Src/ecatappl.c ****         if (u32CheckForDcOverrunCnt >= CHECK_DC_OVERRUN_IN_MS)
 3813              	 .loc 3 877 0
 3814 00a4 124B     	 ldr r3,.L100+28
 3815 00a6 1B68     	 ldr r3,[r3]
 3816 00a8 B3F57A6F 	 cmp r3,#4000
 3817 00ac 01D3     	 bcc .L99
 878:../SSC/Src/ecatappl.c ****         {
 879:../SSC/Src/ecatappl.c ****             COE_SyncTimeStamp();
 3818              	 .loc 3 879 0
 3819 00ae FFF7FEFF 	 bl COE_SyncTimeStamp
 3820              	.L99:
 880:../SSC/Src/ecatappl.c ****         }
 881:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) COE4*/
 882:../SSC/Src/ecatappl.c **** 
 883:../SSC/Src/ecatappl.c ****         /* call EtherCAT functions */
 884:../SSC/Src/ecatappl.c ****         ECAT_Main();
 3821              	 .loc 3 884 0
 3822 00b2 FFF7FEFF 	 bl ECAT_Main
 885:../SSC/Src/ecatappl.c **** 
 886:../SSC/Src/ecatappl.c ****         /* call lower prior application part */
 887:../SSC/Src/ecatappl.c ****        COE_Main();
 3823              	 .loc 3 887 0
 3824 00b6 FFF7FEFF 	 bl COE_Main
 888:../SSC/Src/ecatappl.c ****        CheckIfEcatError();
 3825              	 .loc 3 888 0
 3826 00ba FFF7FEFF 	 bl CheckIfEcatError
 889:../SSC/Src/ecatappl.c **** 
 890:../SSC/Src/ecatappl.c **** 
 891:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) APPL1*/
 892:../SSC/Src/ecatappl.c ****     if (pAPPL_MainLoop != NULL)
 3827              	 .loc 3 892 0
 3828 00be 0D4B     	 ldr r3,.L100+32
 3829 00c0 1B68     	 ldr r3,[r3]
 3830 00c2 002B     	 cmp r3,#0
 3831 00c4 02D0     	 beq .L90
 893:../SSC/Src/ecatappl.c ****     {
 894:../SSC/Src/ecatappl.c ****         pAPPL_MainLoop();
 3832              	 .loc 3 894 0
 3833 00c6 0B4B     	 ldr r3,.L100+32
 3834 00c8 1B68     	 ldr r3,[r3]
 3835 00ca 9847     	 blx r3
 3836              	.L90:
 895:../SSC/Src/ecatappl.c ****     }
 896:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) APPL1*/
 897:../SSC/Src/ecatappl.c **** }
 3837              	 .loc 3 897 0
 3838 00cc 0837     	 adds r7,r7,#8
 3839              	.LCFI68:
 3840              	 .cfi_def_cfa_offset 8
 3841 00ce BD46     	 mov sp,r7
 3842              	.LCFI69:
 3843              	 .cfi_def_cfa_register 13
 3844              	 
 3845 00d0 80BD     	 pop {r7,pc}
 3846              	.L101:
 3847 00d2 00BF     	 .align 2
 3848              	.L100:
 3849 00d4 00000000 	 .word bInitFinished
 3850 00d8 00000000 	 .word bEscIntEnabled
 3851 00dc 00000000 	 .word bEcatFirstOutputsReceived
 3852 00e0 00000000 	 .word bDcSyncActive
 3853 00e4 00000000 	 .word bEcatOutputUpdateRunning
 3854 00e8 00000000 	 .word nPdOutputSize
 3855 00ec 00000000 	 .word bEcatInputUpdateRunning
 3856 00f0 00000000 	 .word u32CheckForDcOverrunCnt
 3857 00f4 00000000 	 .word pAPPL_MainLoop
 3858              	 .cfi_endproc
 3859              	.LFE186:
 3861              	 .section .text.ECAT_Application,"ax",%progbits
 3862              	 .align 2
 3863              	 .global ECAT_Application
 3864              	 .thumb
 3865              	 .thumb_func
 3867              	ECAT_Application:
 3868              	.LFB187:
 898:../SSC/Src/ecatappl.c **** 
 899:../SSC/Src/ecatappl.c **** /*The main function was moved to the application files.*/
 900:../SSC/Src/ecatappl.c **** /////////////////////////////////////////////////////////////////////////////////////////
 901:../SSC/Src/ecatappl.c **** /**
 902:../SSC/Src/ecatappl.c ****  \brief    ECAT_Application (prev. SSC versions "COE_Application")
 903:../SSC/Src/ecatappl.c ****  this function calculates and the physical process signals and triggers the input mapping
 904:../SSC/Src/ecatappl.c **** *////////////////////////////////////////////////////////////////////////////////////////
 905:../SSC/Src/ecatappl.c **** void ECAT_Application(void)
 906:../SSC/Src/ecatappl.c **** {
 3869              	 .loc 3 906 0
 3870              	 .cfi_startproc
 3871              	 
 3872              	 
 3873 0000 80B5     	 push {r7,lr}
 3874              	.LCFI70:
 3875              	 .cfi_def_cfa_offset 8
 3876              	 .cfi_offset 7,-8
 3877              	 .cfi_offset 14,-4
 3878 0002 00AF     	 add r7,sp,#0
 3879              	.LCFI71:
 3880              	 .cfi_def_cfa_register 7
 907:../SSC/Src/ecatappl.c **** #if (MIN_PD_CYCLE_TIME == 0)
 908:../SSC/Src/ecatappl.c ****     /*ECATCHANGE_START(V5.12) ECAT1*/
 909:../SSC/Src/ecatappl.c ****     UINT32 u32TimeValue = 0;
 910:../SSC/Src/ecatappl.c **** 
 911:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 912:../SSC/Src/ecatappl.c ****     {
 913:../SSC/Src/ecatappl.c ****         u32TimeValue = GetSystemTimeDelay(0);
 914:../SSC/Src/ecatappl.c **** 
 915:../SSC/Src/ecatappl.c ****         if (nPdOutputSize == 0)
 916:../SSC/Src/ecatappl.c ****         {
 917:../SSC/Src/ecatappl.c ****             /* in case of an input only device the cycle starts with an ECAT_Application call*/
 918:../SSC/Src/ecatappl.c **** 
 919:../SSC/Src/ecatappl.c ****             u32MinCycleTimeStartValue = u32TimeValue;
 920:../SSC/Src/ecatappl.c ****             bMinCycleTimeMeasurementStarted = TRUE;
 921:../SSC/Src/ecatappl.c ****             u32MinCycleTimeValue = 0;
 922:../SSC/Src/ecatappl.c ****         }
 923:../SSC/Src/ecatappl.c ****     } /* measurement started*/
 924:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 925:../SSC/Src/ecatappl.c **** #endif /* (MIN_PD_CYCLE_TIME == 0)*/
 926:../SSC/Src/ecatappl.c **** 
 927:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 3881              	 .loc 3 927 0
 3882 0004 0A4B     	 ldr r3,.L105
 3883 0006 9B8B     	 ldrh r3,[r3,#28]
 3884 0008 03F00103 	 and r3,r3,#1
 3885 000c 002B     	 cmp r3,#0
 3886 000e 05D1     	 bne .L103
 3887              	 .loc 3 927 0 is_stmt 0 discriminator 1
 3888 0010 084B     	 ldr r3,.L105+4
 3889 0012 9B8B     	 ldrh r3,[r3,#28]
 3890 0014 03F00103 	 and r3,r3,#1
 3891 0018 002B     	 cmp r3,#0
 3892 001a 05D0     	 beq .L104
 3893              	.L103:
 928:../SSC/Src/ecatappl.c ****     {
 929:../SSC/Src/ecatappl.c ****         if (nPdOutputSize == 0)
 3894              	 .loc 3 929 0 is_stmt 1
 3895 001c 064B     	 ldr r3,.L105+8
 3896 001e 1B88     	 ldrh r3,[r3]
 3897 0020 002B     	 cmp r3,#0
 3898 0022 01D1     	 bne .L104
 930:../SSC/Src/ecatappl.c ****         {
 931:../SSC/Src/ecatappl.c ****             /* in case of an input only device the cycle starts with an ECAT_Application call*/
 932:../SSC/Src/ecatappl.c ****             HandleCycleTimeMeasurement();
 3899              	 .loc 3 932 0
 3900 0024 FFF7FEFF 	 bl HandleCycleTimeMeasurement
 3901              	.L104:
 933:../SSC/Src/ecatappl.c ****         }
 934:../SSC/Src/ecatappl.c ****     }
 935:../SSC/Src/ecatappl.c **** 
 936:../SSC/Src/ecatappl.c ****     {
 937:../SSC/Src/ecatappl.c ****         APPL_Application();
 3902              	 .loc 3 937 0
 3903 0028 FFF7FEFF 	 bl APPL_Application
 938:../SSC/Src/ecatappl.c ****     }
 939:../SSC/Src/ecatappl.c **** /* PDO Input mapping is called from the specific trigger ISR */
 940:../SSC/Src/ecatappl.c **** 
 941:../SSC/Src/ecatappl.c **** #if (MIN_PD_CYCLE_TIME == 0)
 942:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) ECAT1*/
 943:../SSC/Src/ecatappl.c **** 
 944:../SSC/Src/ecatappl.c ****     if (MEASUREMENT_ACTIVE)
 945:../SSC/Src/ecatappl.c ****     {
 946:../SSC/Src/ecatappl.c ****         u32TimeValue = GetSystemTimeDelay(u32TimeValue);
 947:../SSC/Src/ecatappl.c **** 
 948:../SSC/Src/ecatappl.c **** 
 949:../SSC/Src/ecatappl.c ****         /* handle the min cycle time measurement only if a new cycle was started (prevent measureme
 950:../SSC/Src/ecatappl.c ****         if (bMinCycleTimeMeasurementStarted == TRUE)
 951:../SSC/Src/ecatappl.c ****         {
 952:../SSC/Src/ecatappl.c **** 
 953:../SSC/Src/ecatappl.c ****             /* add application execution time to the min cycle time*/
 954:../SSC/Src/ecatappl.c ****             u32MinCycleTimeValue = u32MinCycleTimeValue + u32TimeValue;
 955:../SSC/Src/ecatappl.c **** 
 956:../SSC/Src/ecatappl.c ****             if (nPdInputSize == 0)
 957:../SSC/Src/ecatappl.c ****             {
 958:../SSC/Src/ecatappl.c ****                 /* In case of an output only device the cycle ends with an ECAT_Application call*/
 959:../SSC/Src/ecatappl.c **** 
 960:../SSC/Src/ecatappl.c **** 
 961:../SSC/Src/ecatappl.c ****                 if (sSyncManOutPar.u32MinCycleTime < u32MinCycleTimeValue)
 962:../SSC/Src/ecatappl.c ****                 {
 963:../SSC/Src/ecatappl.c ****                         sSyncManOutPar.u32MinCycleTime = u32MinCycleTimeValue;
 964:../SSC/Src/ecatappl.c ****                 }
 965:../SSC/Src/ecatappl.c **** 
 966:../SSC/Src/ecatappl.c ****                 if (sSyncManInPar.u32MinCycleTime < u32MinCycleTimeValue)
 967:../SSC/Src/ecatappl.c ****                 {
 968:../SSC/Src/ecatappl.c ****                         sSyncManInPar.u32MinCycleTime = u32MinCycleTimeValue;
 969:../SSC/Src/ecatappl.c ****                 }
 970:../SSC/Src/ecatappl.c **** 
 971:../SSC/Src/ecatappl.c ****                 bMinCycleTimeMeasurementStarted = FALSE;
 972:../SSC/Src/ecatappl.c ****             }
 973:../SSC/Src/ecatappl.c ****         }
 974:../SSC/Src/ecatappl.c **** 
 975:../SSC/Src/ecatappl.c ****     }/* measurement started*/
 976:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) ECAT1*/
 977:../SSC/Src/ecatappl.c **** #endif /* #if MIN_PD_CYCLE_TIME == 0 */
 978:../SSC/Src/ecatappl.c **** }
 3904              	 .loc 3 978 0
 3905 002c 80BD     	 pop {r7,pc}
 3906              	.L106:
 3907 002e 00BF     	 .align 2
 3908              	.L105:
 3909 0030 00000000 	 .word sSyncManOutPar
 3910 0034 00000000 	 .word sSyncManInPar
 3911 0038 00000000 	 .word nPdOutputSize
 3912              	 .cfi_endproc
 3913              	.LFE187:
 3915              	 .section .text.EEPROM_CommandHandler,"ax",%progbits
 3916              	 .align 2
 3917              	 .global EEPROM_CommandHandler
 3918              	 .thumb
 3919              	 .thumb_func
 3921              	EEPROM_CommandHandler:
 3922              	.LFB188:
 979:../SSC/Src/ecatappl.c **** 
 980:../SSC/Src/ecatappl.c **** 
 981:../SSC/Src/ecatappl.c **** void EEPROM_CommandHandler(void)
 982:../SSC/Src/ecatappl.c **** {
 3923              	 .loc 3 982 0
 3924              	 .cfi_startproc
 3925              	 
 3926              	 
 3927 0000 80B5     	 push {r7,lr}
 3928              	.LCFI72:
 3929              	 .cfi_def_cfa_offset 8
 3930              	 .cfi_offset 7,-8
 3931              	 .cfi_offset 14,-4
 3932 0002 88B0     	 sub sp,sp,#32
 3933              	.LCFI73:
 3934              	 .cfi_def_cfa_offset 40
 3935 0004 00AF     	 add r7,sp,#0
 3936              	.LCFI74:
 3937              	 .cfi_def_cfa_register 7
 983:../SSC/Src/ecatappl.c ****    UINT16 Result = 0;
 3938              	 .loc 3 983 0
 3939 0006 0023     	 movs r3,#0
 3940 0008 FB82     	 strh r3,[r7,#22]
 984:../SSC/Src/ecatappl.c ****     UINT16 EEPROMReg = 0; //Regvalue 0x502 - 0x5003
 3941              	 .loc 3 984 0
 3942 000a 0023     	 movs r3,#0
 3943 000c FB83     	 strh r3,[r7,#30]
 985:../SSC/Src/ecatappl.c **** 
 986:../SSC/Src/ecatappl.c ****     HW_EscReadWord(EEPROMReg,ESC_EEPROM_CONTROL_OFFSET);
 3944              	 .loc 3 986 0
 3945 000e 8E4B     	 ldr r3,.L138
 3946 0010 1B88     	 ldrh r3,[r3]
 3947 0012 FB83     	 strh r3,[r7,#30]
 987:../SSC/Src/ecatappl.c ****     EEPROMReg = SWAPWORD(EEPROMReg);
 988:../SSC/Src/ecatappl.c **** 
 989:../SSC/Src/ecatappl.c ****     if (EEPROMReg & ESC_EEPROM_BUSY_MASK) 
 3948              	 .loc 3 989 0
 3949 0014 FB8B     	 ldrh r3,[r7,#30]
 3950 0016 1BB2     	 sxth r3,r3
 3951 0018 002B     	 cmp r3,#0
 3952 001a 80F21281 	 bge .L107
 3953              	.LBB8:
 990:../SSC/Src/ecatappl.c ****     {
 991:../SSC/Src/ecatappl.c ****         UINT32 cmd = EEPROMReg  & ESC_EEPROM_CMD_MASK;
 3954              	 .loc 3 991 0
 3955 001e FB8B     	 ldrh r3,[r7,#30]
 3956 0020 03F4E063 	 and r3,r3,#1792
 3957 0024 3B61     	 str r3,[r7,#16]
 992:../SSC/Src/ecatappl.c ****         UINT32 addr;
 993:../SSC/Src/ecatappl.c ****         
 994:../SSC/Src/ecatappl.c ****         
 995:../SSC/Src/ecatappl.c ****         HW_EscReadDWord(addr,ESC_EEPROM_ADDRESS_OFFSET);
 3958              	 .loc 3 995 0
 3959 0026 894B     	 ldr r3,.L138+4
 3960 0028 1B68     	 ldr r3,[r3]
 3961 002a BB61     	 str r3,[r7,#24]
 996:../SSC/Src/ecatappl.c ****         addr = SWAPDWORD(addr);
 997:../SSC/Src/ecatappl.c **** 
 998:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM1*/
 999:../SSC/Src/ecatappl.c ****         //Clear error bits (except the eeprom crc error)
1000:../SSC/Src/ecatappl.c ****         EEPROMReg &= ~(ESC_EEPROM_ERROR_MASK & ~ESC_EEPROM_ERROR_CRC);
 3962              	 .loc 3 1000 0
 3963 002c FB8B     	 ldrh r3,[r7,#30]
 3964 002e 23F4E043 	 bic r3,r3,#28672
 3965 0032 FB83     	 strh r3,[r7,#30]
1001:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM1*/
1002:../SSC/Src/ecatappl.c ****         switch (cmd) {
 3966              	 .loc 3 1002 0
 3967 0034 3B69     	 ldr r3,[r7,#16]
 3968 0036 B3F5807F 	 cmp r3,#256
 3969 003a 0DD0     	 beq .L110
 3970 003c B3F5807F 	 cmp r3,#256
 3971 0040 03D8     	 bhi .L111
 3972 0042 002B     	 cmp r3,#0
 3973 0044 00F0F480 	 beq .L137
 3974 0048 EDE0     	 b .L109
 3975              	.L111:
 3976 004a B3F5007F 	 cmp r3,#512
 3977 004e 33D0     	 beq .L113
 3978 0050 B3F5806F 	 cmp r3,#1024
 3979 0054 61D0     	 beq .L114
 3980 0056 E6E0     	 b .L109
 3981              	.L110:
1003:../SSC/Src/ecatappl.c ****         case 0x00: //IDLE
1004:../SSC/Src/ecatappl.c ****             break;
1005:../SSC/Src/ecatappl.c ****         case ESC_EEPROM_CMD_READ_MASK:
1006:../SSC/Src/ecatappl.c ****         {
1007:../SSC/Src/ecatappl.c ****            if (pAPPL_EEPROM_Read != NULL)
 3982              	 .loc 3 1007 0
 3983 0058 7D4B     	 ldr r3,.L138+8
 3984 005a 1B68     	 ldr r3,[r3]
 3985 005c 002B     	 cmp r3,#0
 3986 005e 0DD0     	 beq .L116
1008:../SSC/Src/ecatappl.c ****            {
1009:../SSC/Src/ecatappl.c ****               Result = pAPPL_EEPROM_Read(addr);
 3987              	 .loc 3 1009 0
 3988 0060 7B4B     	 ldr r3,.L138+8
 3989 0062 1B68     	 ldr r3,[r3]
 3990 0064 B869     	 ldr r0,[r7,#24]
 3991 0066 9847     	 blx r3
 3992 0068 0346     	 mov r3,r0
 3993 006a FB82     	 strh r3,[r7,#22]
1010:../SSC/Src/ecatappl.c ****               if (Result > 0)
 3994              	 .loc 3 1010 0
 3995 006c FB8A     	 ldrh r3,[r7,#22]
 3996 006e 002B     	 cmp r3,#0
 3997 0070 21D0     	 beq .L118
1011:../SSC/Src/ecatappl.c ****               {
1012:../SSC/Src/ecatappl.c ****                  //Set Error
1013:../SSC/Src/ecatappl.c ****                  EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 3998              	 .loc 3 1013 0
 3999 0072 FB8B     	 ldrh r3,[r7,#30]
 4000 0074 43F40053 	 orr r3,r3,#8192
 4001 0078 FB83     	 strh r3,[r7,#30]
1014:../SSC/Src/ecatappl.c ****               }
1015:../SSC/Src/ecatappl.c ****            }
1016:../SSC/Src/ecatappl.c ****            else
1017:../SSC/Src/ecatappl.c ****            {
1018:../SSC/Src/ecatappl.c **** 
1019:../SSC/Src/ecatappl.c ****               if (addr <= ESC_EEPROM_SIZE && (pEEPROM != NULL))
1020:../SSC/Src/ecatappl.c ****               {
1021:../SSC/Src/ecatappl.c ****                  UINT16 *pData = (UINT16 *)pEEPROM;
1022:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM1*/
1023:../SSC/Src/ecatappl.c ****                  HW_EscWrite((MEM_ADDR *)&pData[(addr)], ESC_EEPROM_DATA_OFFSET, EepromReadSize);
1024:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM1*/
1025:../SSC/Src/ecatappl.c ****               }
1026:../SSC/Src/ecatappl.c ****               else
1027:../SSC/Src/ecatappl.c ****               {
1028:../SSC/Src/ecatappl.c ****                  //Set Error
1029:../SSC/Src/ecatappl.c ****                  EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
1030:../SSC/Src/ecatappl.c ****               }
1031:../SSC/Src/ecatappl.c ****            }
1032:../SSC/Src/ecatappl.c ****         }
1033:../SSC/Src/ecatappl.c ****         break;
 4002              	 .loc 3 1033 0
 4003 007a DAE0     	 b .L115
 4004              	.L116:
1019:../SSC/Src/ecatappl.c ****               {
 4005              	 .loc 3 1019 0
 4006 007c BB69     	 ldr r3,[r7,#24]
 4007 007e B3F5006F 	 cmp r3,#2048
 4008 0082 13D8     	 bhi .L119
1019:../SSC/Src/ecatappl.c ****               {
 4009              	 .loc 3 1019 0 is_stmt 0 discriminator 1
 4010 0084 734B     	 ldr r3,.L138+12
 4011 0086 1B68     	 ldr r3,[r3]
 4012 0088 002B     	 cmp r3,#0
 4013 008a 0FD0     	 beq .L119
 4014              	.LBB9:
1021:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM1*/
 4015              	 .loc 3 1021 0 is_stmt 1
 4016 008c 714B     	 ldr r3,.L138+12
 4017 008e 1B68     	 ldr r3,[r3]
 4018 0090 FB60     	 str r3,[r7,#12]
1023:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM1*/
 4019              	 .loc 3 1023 0
 4020 0092 BB69     	 ldr r3,[r7,#24]
 4021 0094 5B00     	 lsls r3,r3,#1
 4022 0096 FA68     	 ldr r2,[r7,#12]
 4023 0098 1A44     	 add r2,r2,r3
 4024 009a 6F4B     	 ldr r3,.L138+16
 4025 009c 1B88     	 ldrh r3,[r3]
 4026 009e 1046     	 mov r0,r2
 4027 00a0 4FF4A161 	 mov r1,#1288
 4028 00a4 1A46     	 mov r2,r3
 4029 00a6 FFF7FEFF 	 bl HW_EscWrite
 4030              	.LBE9:
1020:../SSC/Src/ecatappl.c ****                  UINT16 *pData = (UINT16 *)pEEPROM;
 4031              	 .loc 3 1020 0
 4032 00aa 04E0     	 b .L118
 4033              	.L119:
1029:../SSC/Src/ecatappl.c ****               }
 4034              	 .loc 3 1029 0
 4035 00ac FB8B     	 ldrh r3,[r7,#30]
 4036 00ae 43F40053 	 orr r3,r3,#8192
 4037 00b2 FB83     	 strh r3,[r7,#30]
 4038              	 .loc 3 1033 0
 4039 00b4 BDE0     	 b .L115
 4040              	.L118:
 4041              	 .loc 3 1033 0 is_stmt 0 discriminator 1
 4042 00b6 BCE0     	 b .L115
 4043              	.L113:
1034:../SSC/Src/ecatappl.c ****         case ESC_EEPROM_CMD_WRITE_MASK:
1035:../SSC/Src/ecatappl.c ****             {
1036:../SSC/Src/ecatappl.c ****                  if (pAPPL_EEPROM_Write != NULL)
 4044              	 .loc 3 1036 0 is_stmt 1
 4045 00b8 684B     	 ldr r3,.L138+20
 4046 00ba 1B68     	 ldr r3,[r3]
 4047 00bc 002B     	 cmp r3,#0
 4048 00be 0DD0     	 beq .L120
1037:../SSC/Src/ecatappl.c ****                  {
1038:../SSC/Src/ecatappl.c ****                     Result = pAPPL_EEPROM_Write(addr);
 4049              	 .loc 3 1038 0
 4050 00c0 664B     	 ldr r3,.L138+20
 4051 00c2 1B68     	 ldr r3,[r3]
 4052 00c4 B869     	 ldr r0,[r7,#24]
 4053 00c6 9847     	 blx r3
 4054 00c8 0346     	 mov r3,r0
 4055 00ca FB82     	 strh r3,[r7,#22]
1039:../SSC/Src/ecatappl.c ****                     if (Result > 0)
 4056              	 .loc 3 1039 0
 4057 00cc FB8A     	 ldrh r3,[r7,#22]
 4058 00ce 002B     	 cmp r3,#0
 4059 00d0 1ED0     	 beq .L122
1040:../SSC/Src/ecatappl.c ****                     {
1041:../SSC/Src/ecatappl.c ****                        //Set Error
1042:../SSC/Src/ecatappl.c ****                        EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4060              	 .loc 3 1042 0
 4061 00d2 FB8B     	 ldrh r3,[r7,#30]
 4062 00d4 43F40053 	 orr r3,r3,#8192
 4063 00d8 FB83     	 strh r3,[r7,#30]
 4064 00da 19E0     	 b .L122
 4065              	.L120:
1043:../SSC/Src/ecatappl.c ****                     }
1044:../SSC/Src/ecatappl.c ****                  }
1045:../SSC/Src/ecatappl.c ****                  else
1046:../SSC/Src/ecatappl.c ****                  {
1047:../SSC/Src/ecatappl.c **** 
1048:../SSC/Src/ecatappl.c ****                     if (addr <= ESC_EEPROM_SIZE && (pEEPROM != NULL))
 4066              	 .loc 3 1048 0
 4067 00dc BB69     	 ldr r3,[r7,#24]
 4068 00de B3F5006F 	 cmp r3,#2048
 4069 00e2 11D8     	 bhi .L123
 4070              	 .loc 3 1048 0 is_stmt 0 discriminator 1
 4071 00e4 5B4B     	 ldr r3,.L138+12
 4072 00e6 1B68     	 ldr r3,[r3]
 4073 00e8 002B     	 cmp r3,#0
 4074 00ea 0DD0     	 beq .L123
 4075              	.LBB10:
1049:../SSC/Src/ecatappl.c ****                     {
1050:../SSC/Src/ecatappl.c ****                        UINT16 *pData = (UINT16 *)pEEPROM;
 4076              	 .loc 3 1050 0 is_stmt 1
 4077 00ec 594B     	 ldr r3,.L138+12
 4078 00ee 1B68     	 ldr r3,[r3]
 4079 00f0 BB60     	 str r3,[r7,#8]
1051:../SSC/Src/ecatappl.c ****                        HW_EscRead((MEM_ADDR *)&pData[(addr)], ESC_EEPROM_DATA_OFFSET, EEPROM_WRITE_
 4080              	 .loc 3 1051 0
 4081 00f2 BB69     	 ldr r3,[r7,#24]
 4082 00f4 5B00     	 lsls r3,r3,#1
 4083 00f6 BA68     	 ldr r2,[r7,#8]
 4084 00f8 1344     	 add r3,r3,r2
 4085 00fa 1846     	 mov r0,r3
 4086 00fc 4FF4A161 	 mov r1,#1288
 4087 0100 0222     	 movs r2,#2
 4088 0102 FFF7FEFF 	 bl HW_EscRead
 4089              	.LBE10:
1049:../SSC/Src/ecatappl.c ****                     {
 4090              	 .loc 3 1049 0
 4091 0106 03E0     	 b .L122
 4092              	.L123:
1052:../SSC/Src/ecatappl.c ****                     }
1053:../SSC/Src/ecatappl.c ****                     else
1054:../SSC/Src/ecatappl.c ****                     {
1055:../SSC/Src/ecatappl.c ****                        //Set Error
1056:../SSC/Src/ecatappl.c ****                        EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4093              	 .loc 3 1056 0
 4094 0108 FB8B     	 ldrh r3,[r7,#30]
 4095 010a 43F40053 	 orr r3,r3,#8192
 4096 010e FB83     	 strh r3,[r7,#30]
 4097              	.L122:
1057:../SSC/Src/ecatappl.c ****                     }
1058:../SSC/Src/ecatappl.c ****                  }
1059:../SSC/Src/ecatappl.c **** 
1060:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM3*/
1061:../SSC/Src/ecatappl.c ****                  /* init the Store EEPROM timeout value (will be reset after the timer has expired)
1062:../SSC/Src/ecatappl.c ****                  u16EepromStoreTimeoutValue = 1000;
 4098              	 .loc 3 1062 0
 4099 0110 534B     	 ldr r3,.L138+24
 4100 0112 4FF47A72 	 mov r2,#1000
 4101 0116 1A80     	 strh r2,[r3]
1063:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM3*/
1064:../SSC/Src/ecatappl.c **** 
1065:../SSC/Src/ecatappl.c ****             }
1066:../SSC/Src/ecatappl.c ****             break;
 4102              	 .loc 3 1066 0
 4103 0118 8BE0     	 b .L115
 4104              	.L114:
1067:../SSC/Src/ecatappl.c ****         case ESC_EEPROM_CMD_RELOAD_MASK:
1068:../SSC/Src/ecatappl.c **** /* ECATCHANGE_START(V5.12) EEPROM2*/
1069:../SSC/Src/ecatappl.c ****             if (EepromReadSize == 8)
 4105              	 .loc 3 1069 0
 4106 011a 4F4B     	 ldr r3,.L138+16
 4107 011c 1B88     	 ldrh r3,[r3]
 4108 011e 082B     	 cmp r3,#8
 4109 0120 50D1     	 bne .L124
 4110              	.L130:
1070:../SSC/Src/ecatappl.c ****             {
1071:../SSC/Src/ecatappl.c ****                 /* "full" EEPROM emulation ( 8Bytes EEPROM data) */
1072:../SSC/Src/ecatappl.c ****                 do
1073:../SSC/Src/ecatappl.c ****                 {
1074:../SSC/Src/ecatappl.c ****                     if (addr > ESC_EEPROM_SIZE)
 4111              	 .loc 3 1074 0
 4112 0122 BB69     	 ldr r3,[r7,#24]
 4113 0124 B3F5006F 	 cmp r3,#2048
 4114 0128 04D9     	 bls .L125
1075:../SSC/Src/ecatappl.c ****                     {
1076:../SSC/Src/ecatappl.c ****                         //Set Error
1077:../SSC/Src/ecatappl.c ****                         EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4115              	 .loc 3 1077 0
 4116 012a FB8B     	 ldrh r3,[r7,#30]
 4117 012c 43F40053 	 orr r3,r3,#8192
 4118 0130 FB83     	 strh r3,[r7,#30]
1078:../SSC/Src/ecatappl.c ****                         break;
 4119              	 .loc 3 1078 0
 4120 0132 46E0     	 b .L126
 4121              	.L125:
 4122              	.LBB11:
1079:../SSC/Src/ecatappl.c ****                     }
1080:../SSC/Src/ecatappl.c ****                     else
1081:../SSC/Src/ecatappl.c ****                     {
1082:../SSC/Src/ecatappl.c ****                         if (pAPPL_EEPROM_Read != NULL)
 4123              	 .loc 3 1082 0
 4124 0134 464B     	 ldr r3,.L138+8
 4125 0136 1B68     	 ldr r3,[r3]
 4126 0138 002B     	 cmp r3,#0
 4127 013a 0DD0     	 beq .L127
1083:../SSC/Src/ecatappl.c ****                         {
1084:../SSC/Src/ecatappl.c ****                             Result = pAPPL_EEPROM_Read(addr);
 4128              	 .loc 3 1084 0
 4129 013c 444B     	 ldr r3,.L138+8
 4130 013e 1B68     	 ldr r3,[r3]
 4131 0140 B869     	 ldr r0,[r7,#24]
 4132 0142 9847     	 blx r3
 4133 0144 0346     	 mov r3,r0
 4134 0146 FB82     	 strh r3,[r7,#22]
1085:../SSC/Src/ecatappl.c ****                             if (Result > 0)
 4135              	 .loc 3 1085 0
 4136 0148 FB8A     	 ldrh r3,[r7,#22]
 4137 014a 002B     	 cmp r3,#0
 4138 014c 21D0     	 beq .L128
1086:../SSC/Src/ecatappl.c ****                             {
1087:../SSC/Src/ecatappl.c ****                                 //Set Error
1088:../SSC/Src/ecatappl.c ****                                 EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4139              	 .loc 3 1088 0
 4140 014e FB8B     	 ldrh r3,[r7,#30]
 4141 0150 43F40053 	 orr r3,r3,#8192
 4142 0154 FB83     	 strh r3,[r7,#30]
1089:../SSC/Src/ecatappl.c ****                                 break;
 4143              	 .loc 3 1089 0
 4144 0156 34E0     	 b .L126
 4145              	.L127:
1090:../SSC/Src/ecatappl.c ****                             }
1091:../SSC/Src/ecatappl.c ****                         }
1092:../SSC/Src/ecatappl.c ****                         else
1093:../SSC/Src/ecatappl.c ****                         {
1094:../SSC/Src/ecatappl.c ****                             if (addr <= ESC_EEPROM_SIZE && (pEEPROM != NULL))
 4146              	 .loc 3 1094 0
 4147 0158 BB69     	 ldr r3,[r7,#24]
 4148 015a B3F5006F 	 cmp r3,#2048
 4149 015e 13D8     	 bhi .L129
 4150              	 .loc 3 1094 0 is_stmt 0 discriminator 1
 4151 0160 3C4B     	 ldr r3,.L138+12
 4152 0162 1B68     	 ldr r3,[r3]
 4153 0164 002B     	 cmp r3,#0
 4154 0166 0FD0     	 beq .L129
 4155              	.LBB12:
1095:../SSC/Src/ecatappl.c ****                             {
1096:../SSC/Src/ecatappl.c ****                                 UINT16 *pData = (UINT16 *)pEEPROM;
 4156              	 .loc 3 1096 0 is_stmt 1
 4157 0168 3A4B     	 ldr r3,.L138+12
 4158 016a 1B68     	 ldr r3,[r3]
 4159 016c 7B60     	 str r3,[r7,#4]
1097:../SSC/Src/ecatappl.c ****                                 HW_EscWrite((MEM_ADDR *)&pData[(addr)], ESC_EEPROM_DATA_OFFSET, Eep
 4160              	 .loc 3 1097 0
 4161 016e BB69     	 ldr r3,[r7,#24]
 4162 0170 5B00     	 lsls r3,r3,#1
 4163 0172 7A68     	 ldr r2,[r7,#4]
 4164 0174 1A44     	 add r2,r2,r3
 4165 0176 384B     	 ldr r3,.L138+16
 4166 0178 1B88     	 ldrh r3,[r3]
 4167 017a 1046     	 mov r0,r2
 4168 017c 4FF4A161 	 mov r1,#1288
 4169 0180 1A46     	 mov r2,r3
 4170 0182 FFF7FEFF 	 bl HW_EscWrite
 4171              	.LBE12:
1095:../SSC/Src/ecatappl.c ****                             {
 4172              	 .loc 3 1095 0
 4173 0186 04E0     	 b .L128
 4174              	.L129:
1098:../SSC/Src/ecatappl.c ****                             }
1099:../SSC/Src/ecatappl.c ****                             else
1100:../SSC/Src/ecatappl.c ****                             {
1101:../SSC/Src/ecatappl.c ****                                 //Set Error
1102:../SSC/Src/ecatappl.c ****                                 EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4175              	 .loc 3 1102 0
 4176 0188 FB8B     	 ldrh r3,[r7,#30]
 4177 018a 43F40053 	 orr r3,r3,#8192
 4178 018e FB83     	 strh r3,[r7,#30]
1103:../SSC/Src/ecatappl.c ****                                 break;
 4179              	 .loc 3 1103 0
 4180 0190 17E0     	 b .L126
 4181              	.L128:
1104:../SSC/Src/ecatappl.c ****                             }
1105:../SSC/Src/ecatappl.c ****                         }
1106:../SSC/Src/ecatappl.c **** 
1107:../SSC/Src/ecatappl.c ****                         //Clear error bits
1108:../SSC/Src/ecatappl.c ****                         EEPROMReg &= ~(ESC_EEPROM_ERROR_MASK);
 4182              	 .loc 3 1108 0
 4183 0192 FB8B     	 ldrh r3,[r7,#30]
 4184 0194 23F4F043 	 bic r3,r3,#30720
 4185 0198 FB83     	 strh r3,[r7,#30]
1109:../SSC/Src/ecatappl.c **** 
1110:../SSC/Src/ecatappl.c ****                         //ack current reload segment
1111:../SSC/Src/ecatappl.c ****                         UINT16 TmpData = SWAPWORD(EEPROMReg);
 4186              	 .loc 3 1111 0
 4187 019a FB8B     	 ldrh r3,[r7,#30]
 4188 019c 7B80     	 strh r3,[r7,#2]
1112:../SSC/Src/ecatappl.c ****                         HW_EscWriteWord(TmpData, ESC_EEPROM_CONTROL_OFFSET);
 4189              	 .loc 3 1112 0
 4190 019e 2A4A     	 ldr r2,.L138
 4191 01a0 7B88     	 ldrh r3,[r7,#2]
 4192 01a2 1380     	 strh r3,[r2]
1113:../SSC/Src/ecatappl.c **** 
1114:../SSC/Src/ecatappl.c ****                         // read EEPROM control (to check if the reload is still pending)
1115:../SSC/Src/ecatappl.c ****                         HW_EscReadWord(EEPROMReg, ESC_EEPROM_CONTROL_OFFSET);
 4193              	 .loc 3 1115 0
 4194 01a4 284B     	 ldr r3,.L138
 4195 01a6 1B88     	 ldrh r3,[r3]
 4196 01a8 FB83     	 strh r3,[r7,#30]
1116:../SSC/Src/ecatappl.c ****                         EEPROMReg = SWAPWORD(EEPROMReg);
1117:../SSC/Src/ecatappl.c ****                         cmd = EEPROMReg  & ESC_EEPROM_CMD_MASK;
 4197              	 .loc 3 1117 0
 4198 01aa FB8B     	 ldrh r3,[r7,#30]
 4199 01ac 03F4E063 	 and r3,r3,#1792
 4200 01b0 3B61     	 str r3,[r7,#16]
1118:../SSC/Src/ecatappl.c **** 
1119:../SSC/Src/ecatappl.c ****                         HW_EscReadDWord(addr, ESC_EEPROM_ADDRESS_OFFSET);
 4201              	 .loc 3 1119 0
 4202 01b2 264B     	 ldr r3,.L138+4
 4203 01b4 1B68     	 ldr r3,[r3]
 4204 01b6 BB61     	 str r3,[r7,#24]
 4205              	.LBE11:
1120:../SSC/Src/ecatappl.c ****                         addr = SWAPDWORD(addr);
1121:../SSC/Src/ecatappl.c ****                     }
1122:../SSC/Src/ecatappl.c **** 
1123:../SSC/Src/ecatappl.c **** 
1124:../SSC/Src/ecatappl.c ****                 } while (cmd == ESC_EEPROM_CMD_RELOAD_MASK);
 4206              	 .loc 3 1124 0
 4207 01b8 3B69     	 ldr r3,[r7,#16]
 4208 01ba B3F5806F 	 cmp r3,#1024
 4209 01be B0D0     	 beq .L130
 4210 01c0 30E0     	 b .L131
 4211              	.L126:
 4212 01c2 2FE0     	 b .L131
 4213              	.L124:
1125:../SSC/Src/ecatappl.c ****             }
1126:../SSC/Src/ecatappl.c ****             else
1127:../SSC/Src/ecatappl.c ****             {
1128:../SSC/Src/ecatappl.c ****                 /* The case is only called if the "small" EEPROM emulation (4 read bytes) is config
1129:../SSC/Src/ecatappl.c ****     /* ECATCHANGE_END(V5.12) EEPROM2*/
1130:../SSC/Src/ecatappl.c **** 
1131:../SSC/Src/ecatappl.c ****     /* ECATCHANGE_START(V5.12) EEPROM2*/
1132:../SSC/Src/ecatappl.c ****                 if (pAPPL_EEPROM_Reload != NULL)
 4214              	 .loc 3 1132 0
 4215 01c4 274B     	 ldr r3,.L138+28
 4216 01c6 1B68     	 ldr r3,[r3]
 4217 01c8 002B     	 cmp r3,#0
 4218 01ca 11D0     	 beq .L132
1133:../SSC/Src/ecatappl.c ****                 {
1134:../SSC/Src/ecatappl.c ****                     Result = pAPPL_EEPROM_Reload();
 4219              	 .loc 3 1134 0
 4220 01cc 254B     	 ldr r3,.L138+28
 4221 01ce 1B68     	 ldr r3,[r3]
 4222 01d0 9847     	 blx r3
 4223 01d2 0346     	 mov r3,r0
 4224 01d4 FB82     	 strh r3,[r7,#22]
1135:../SSC/Src/ecatappl.c ****                     if (Result > 0)
 4225              	 .loc 3 1135 0
 4226 01d6 FB8A     	 ldrh r3,[r7,#22]
 4227 01d8 002B     	 cmp r3,#0
 4228 01da 04D0     	 beq .L133
1136:../SSC/Src/ecatappl.c ****                     {
1137:../SSC/Src/ecatappl.c ****                         //Set Error
1138:../SSC/Src/ecatappl.c ****                         EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4229              	 .loc 3 1138 0
 4230 01dc FB8B     	 ldrh r3,[r7,#30]
 4231 01de 43F40053 	 orr r3,r3,#8192
 4232 01e2 FB83     	 strh r3,[r7,#30]
 4233 01e4 1EE0     	 b .L131
 4234              	.L133:
1139:../SSC/Src/ecatappl.c ****                     }
1140:../SSC/Src/ecatappl.c ****                     else
1141:../SSC/Src/ecatappl.c ****                     {
1142:../SSC/Src/ecatappl.c ****                         EEPROMReg &= ~ESC_EEPROM_ERROR_CRC;
 4235              	 .loc 3 1142 0
 4236 01e6 FB8B     	 ldrh r3,[r7,#30]
 4237 01e8 23F40063 	 bic r3,r3,#2048
 4238 01ec FB83     	 strh r3,[r7,#30]
1143:../SSC/Src/ecatappl.c ****                     }
1144:../SSC/Src/ecatappl.c ****                 }
1145:../SSC/Src/ecatappl.c ****                 else
1146:../SSC/Src/ecatappl.c ****                 {
1147:../SSC/Src/ecatappl.c **** 
1148:../SSC/Src/ecatappl.c ****                     Result = HW_EepromReload();
1149:../SSC/Src/ecatappl.c ****                     if (Result != 0 || (pEEPROM == NULL))
1150:../SSC/Src/ecatappl.c ****                     {
1151:../SSC/Src/ecatappl.c ****                         EEPROMReg |= ESC_EEPROM_ERROR_CRC;
1152:../SSC/Src/ecatappl.c ****                     }
1153:../SSC/Src/ecatappl.c ****                     else
1154:../SSC/Src/ecatappl.c ****                     {
1155:../SSC/Src/ecatappl.c ****                         //copy the configured station alias
1156:../SSC/Src/ecatappl.c ****                         HW_EscWriteWord(((UINT16 *)pEEPROM)[0x4], ESC_EEPROM_DATA_OFFSET);
1157:../SSC/Src/ecatappl.c **** 
1158:../SSC/Src/ecatappl.c ****                         EEPROMReg &= ~ESC_EEPROM_ERROR_CRC;
1159:../SSC/Src/ecatappl.c ****                     }
1160:../SSC/Src/ecatappl.c **** /* ECATCHANGE_END(V5.12) EEPROM2*/
1161:../SSC/Src/ecatappl.c ****                 }
1162:../SSC/Src/ecatappl.c ****             }
1163:../SSC/Src/ecatappl.c ****          break;
 4239              	 .loc 3 1163 0
 4240 01ee 20E0     	 b .L115
 4241              	.L132:
1148:../SSC/Src/ecatappl.c ****                     if (Result != 0 || (pEEPROM == NULL))
 4242              	 .loc 3 1148 0
 4243 01f0 FFF7FEFF 	 bl HW_EepromReload
 4244 01f4 0346     	 mov r3,r0
 4245 01f6 FB82     	 strh r3,[r7,#22]
1149:../SSC/Src/ecatappl.c ****                     {
 4246              	 .loc 3 1149 0
 4247 01f8 FB8A     	 ldrh r3,[r7,#22]
 4248 01fa 002B     	 cmp r3,#0
 4249 01fc 03D1     	 bne .L135
1149:../SSC/Src/ecatappl.c ****                     {
 4250              	 .loc 3 1149 0 is_stmt 0 discriminator 1
 4251 01fe 154B     	 ldr r3,.L138+12
 4252 0200 1B68     	 ldr r3,[r3]
 4253 0202 002B     	 cmp r3,#0
 4254 0204 04D1     	 bne .L136
 4255              	.L135:
1151:../SSC/Src/ecatappl.c ****                     }
 4256              	 .loc 3 1151 0 is_stmt 1
 4257 0206 FB8B     	 ldrh r3,[r7,#30]
 4258 0208 43F40063 	 orr r3,r3,#2048
 4259 020c FB83     	 strh r3,[r7,#30]
 4260 020e 09E0     	 b .L131
 4261              	.L136:
1156:../SSC/Src/ecatappl.c **** 
 4262              	 .loc 3 1156 0
 4263 0210 154A     	 ldr r2,.L138+32
 4264 0212 104B     	 ldr r3,.L138+12
 4265 0214 1B68     	 ldr r3,[r3]
 4266 0216 1B89     	 ldrh r3,[r3,#8]
 4267 0218 1380     	 strh r3,[r2]
1158:../SSC/Src/ecatappl.c ****                     }
 4268              	 .loc 3 1158 0
 4269 021a FB8B     	 ldrh r3,[r7,#30]
 4270 021c 23F40063 	 bic r3,r3,#2048
 4271 0220 FB83     	 strh r3,[r7,#30]
 4272              	 .loc 3 1163 0
 4273 0222 06E0     	 b .L115
 4274              	.L131:
 4275              	 .loc 3 1163 0 is_stmt 0 discriminator 2
 4276 0224 05E0     	 b .L115
 4277              	.L109:
1164:../SSC/Src/ecatappl.c ****         default:
1165:../SSC/Src/ecatappl.c ****             EEPROMReg |= ESC_EEPROM_ERROR_CMD_ACK;
 4278              	 .loc 3 1165 0 is_stmt 1
 4279 0226 FB8B     	 ldrh r3,[r7,#30]
 4280 0228 43F40053 	 orr r3,r3,#8192
 4281 022c FB83     	 strh r3,[r7,#30]
1166:../SSC/Src/ecatappl.c ****             break;
 4282              	 .loc 3 1166 0
 4283 022e 00E0     	 b .L115
 4284              	.L137:
1004:../SSC/Src/ecatappl.c ****         case ESC_EEPROM_CMD_READ_MASK:
 4285              	 .loc 3 1004 0
 4286 0230 00BF     	 nop
 4287              	.L115:
1167:../SSC/Src/ecatappl.c ****         }
1168:../SSC/Src/ecatappl.c **** 
1169:../SSC/Src/ecatappl.c **** /*ECATCHANGE_START(V5.12) EEPROM3*/
1170:../SSC/Src/ecatappl.c ****         /* reset the store eeprom timeout counter*/
1171:../SSC/Src/ecatappl.c ****         u16EepromStoreTimeoutCounter = 0;
 4288              	 .loc 3 1171 0
 4289 0232 0E4B     	 ldr r3,.L138+36
 4290 0234 0022     	 movs r2,#0
 4291 0236 1A80     	 strh r2,[r3]
 4292              	.LBB13:
1172:../SSC/Src/ecatappl.c **** /*ECATCHANGE_END(V5.12) EEPROM3*/
1173:../SSC/Src/ecatappl.c **** 
1174:../SSC/Src/ecatappl.c ****         {
1175:../SSC/Src/ecatappl.c ****         UINT16 TmpData = SWAPWORD(EEPROMReg);
 4293              	 .loc 3 1175 0
 4294 0238 FB8B     	 ldrh r3,[r7,#30]
 4295 023a 3B80     	 strh r3,[r7]
1176:../SSC/Src/ecatappl.c ****         HW_EscWriteWord(TmpData,ESC_EEPROM_CONTROL_OFFSET);
 4296              	 .loc 3 1176 0
 4297 023c 024A     	 ldr r2,.L138
 4298 023e 3B88     	 ldrh r3,[r7]
 4299 0240 1380     	 strh r3,[r2]
 4300              	.L107:
 4301              	.LBE13:
 4302              	.LBE8:
1177:../SSC/Src/ecatappl.c ****         }
1178:../SSC/Src/ecatappl.c ****     }
1179:../SSC/Src/ecatappl.c **** }
 4303              	 .loc 3 1179 0
 4304 0242 2037     	 adds r7,r7,#32
 4305              	.LCFI75:
 4306              	 .cfi_def_cfa_offset 8
 4307 0244 BD46     	 mov sp,r7
 4308              	.LCFI76:
 4309              	 .cfi_def_cfa_register 13
 4310              	 
 4311 0246 80BD     	 pop {r7,pc}
 4312              	.L139:
 4313              	 .align 2
 4314              	.L138:
 4315 0248 02050154 	 .word 1409352962
 4316 024c 04050154 	 .word 1409352964
 4317 0250 00000000 	 .word pAPPL_EEPROM_Read
 4318 0254 00000000 	 .word pEEPROM
 4319 0258 00000000 	 .word EepromReadSize
 4320 025c 00000000 	 .word pAPPL_EEPROM_Write
 4321 0260 00000000 	 .word u16EepromStoreTimeoutValue
 4322 0264 00000000 	 .word pAPPL_EEPROM_Reload
 4323 0268 08050154 	 .word 1409352968
 4324 026c 00000000 	 .word u16EepromStoreTimeoutCounter
 4325              	 .cfi_endproc
 4326              	.LFE188:
 4328              	 .text
 4329              	.Letext0:
 4330              	 .file 4 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4331              	 .file 5 "c:\\program files\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4332              	 .file 6 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 4333              	 .file 7 "../SSC/Src/objdef.h"
 4334              	 .file 8 "C:/src/bakalarka_workspace/ETHCAT_FWUPDATE_SSC_APPLICATION_XMC48/Libraries/CMSIS/Include/core_cm4.h"
 4335              	 .file 9 "../SSC/Src/eeprom.h"
 4336              	 .file 10 "../SSC/Src/ecatslv.h"
 4337              	 .file 11 "../SSC/Src/ecatappl.h"
 4338              	 .file 12 "../SSC/Src/coeappl.h"
 4339              	 .file 13 "../SSC/Src/applInterface.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ecatappl.c
    {standard input}:20     .text.XMC_ECAT_GetALEventRegister:00000000 $t
    {standard input}:24     .text.XMC_ECAT_GetALEventRegister:00000000 XMC_ECAT_GetALEventRegister
    {standard input}:57     .text.XMC_ECAT_GetALEventRegister:00000018 $d
    {standard input}:62     .text.HW_EscRead:00000000 $t
    {standard input}:66     .text.HW_EscRead:00000000 HW_EscRead
    {standard input}:110    .text.HW_EscReadIsr:00000000 $t
    {standard input}:114    .text.HW_EscReadIsr:00000000 HW_EscReadIsr
    {standard input}:156    .text.HW_EscWrite:00000000 $t
    {standard input}:160    .text.HW_EscWrite:00000000 HW_EscWrite
    {standard input}:203    .text.HW_EscWriteIsr:00000000 $t
    {standard input}:207    .text.HW_EscWriteIsr:00000000 HW_EscWriteIsr
    {standard input}:249    .text.HW_GetALEventRegister:00000000 $t
    {standard input}:253    .text.HW_GetALEventRegister:00000000 HW_GetALEventRegister
    {standard input}:277    .text.HW_GetALEventRegister_Isr:00000000 $t
    {standard input}:281    .text.HW_GetALEventRegister_Isr:00000000 HW_GetALEventRegister_Isr
                            *COM*:00000004 pEEPROM
                            *COM*:00000001 bEcatWaitForInputUpdate
                            *COM*:00000001 bEtherCATRunLed
                            *COM*:00000001 bEtherCATErrorLed
                            *COM*:00000001 bRunApplication
                            *COM*:00000002 EepromReadSize
                            *COM*:00000004 pAPPL_EEPROM_Read
                            *COM*:00000004 pAPPL_EEPROM_Write
                            *COM*:00000004 pAPPL_EEPROM_Reload
                            *COM*:00000004 pAPPL_EEPROM_Store
                            *COM*:00000004 pAPPL_FoeRead
                            *COM*:00000004 pAPPL_FoeReadData
                            *COM*:00000004 pAPPL_FoeError
                            *COM*:00000004 pAPPL_FoeWrite
                            *COM*:00000004 pAPPL_FoeWriteData
                            *COM*:00000004 pAPPL_MainLoop
    {standard input}:325    .data.aEepromData:00000000 aEepromData
    {standard input}:322    .data.aEepromData:00000000 $d
                            *COM*:00000004 u32CycleTimeStartValue
                            *COM*:00000004 u32MinCycleTimeStartValue
                            *COM*:00000004 u32SystemTimeReadFailure
                            *COM*:00000001 bMinCycleTimeMeasurementStarted
                            *COM*:00000004 u32MinCycleTimeValue
                            *COM*:00000002 u16EepromStoreTimeoutCounter
                            *COM*:00000002 u16EepromStoreTimeoutValue
                            *COM*:0000000c aPdOutputData
                            *COM*:0000000c aPdInputData
    {standard input}:2387   .bss.bInitFinished:00000000 bInitFinished
    {standard input}:2388   .bss.bInitFinished:00000000 $d
    {standard input}:2390   .text.PDO_InputMapping:00000000 $t
    {standard input}:2395   .text.PDO_InputMapping:00000000 PDO_InputMapping
    {standard input}:2869   .text.GetSystemTimeDelay:00000000 GetSystemTimeDelay
    {standard input}:2490   .text.PDO_InputMapping:00000080 $d
    {standard input}:2499   .text.PDO_OutputMapping:00000000 $t
    {standard input}:2504   .text.PDO_OutputMapping:00000000 PDO_OutputMapping
    {standard input}:2772   .text.HandleCycleTimeMeasurement:00000000 HandleCycleTimeMeasurement
    {standard input}:2608   .text.PDO_OutputMapping:00000090 $d
    {standard input}:2620   .text.ECAT_CheckTimer:00000000 $t
    {standard input}:2625   .text.ECAT_CheckTimer:00000000 ECAT_CheckTimer
    {standard input}:2753   .text.ECAT_CheckTimer:000000d0 $d
    {standard input}:2767   .text.HandleCycleTimeMeasurement:00000000 $t
    {standard input}:2856   .text.HandleCycleTimeMeasurement:00000070 $d
    {standard input}:2864   .text.GetSystemTimeDelay:00000000 $t
    {standard input}:2961   .text.GetSystemTimeDelay:00000068 $d
    {standard input}:2967   .text.PDI_Isr:00000000 $t
    {standard input}:2972   .text.PDI_Isr:00000000 PDI_Isr
    {standard input}:3867   .text.ECAT_Application:00000000 ECAT_Application
    {standard input}:3161   .text.PDI_Isr:0000011c $d
    {standard input}:3178   .text.Sync0_Isr:00000000 $t
    {standard input}:3183   .text.Sync0_Isr:00000000 Sync0_Isr
    {standard input}:3393   .text.Sync0_Isr:00000128 $d
    {standard input}:3409   .text.Sync1_Isr:00000000 $t
    {standard input}:3414   .text.Sync1_Isr:00000000 Sync1_Isr
    {standard input}:3459   .text.Sync1_Isr:00000030 $d
    {standard input}:3468   .text.MainInit:00000000 $t
    {standard input}:3473   .text.MainInit:00000000 MainInit
    {standard input}:3673   .text.MainInit:00000104 $d
    {standard input}:3697   .text.MainLoop:00000000 $t
    {standard input}:3702   .text.MainLoop:00000000 MainLoop
    {standard input}:3849   .text.MainLoop:000000d4 $d
    {standard input}:3862   .text.ECAT_Application:00000000 $t
    {standard input}:3909   .text.ECAT_Application:00000030 $d
    {standard input}:3916   .text.EEPROM_CommandHandler:00000000 $t
    {standard input}:3921   .text.EEPROM_CommandHandler:00000000 EEPROM_CommandHandler
    {standard input}:4315   .text.EEPROM_CommandHandler:00000248 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memcpy
APPL_InputMapping
sSyncManOutPar
sSyncManInPar
nEscAddrInputData
nPdInputSize
APPL_OutputMapping
nEscAddrOutputData
nPdOutputSize
DC_CheckWatchdog
bEcatWaitForAlControlRes
EsmTimeoutCounter
b32BitDc
u64Timestamp
u32CheckForDcOverrunCnt
bDcSyncActive
COE_UpdateSyncErrorStatus
bEscIntEnabled
bDcRunning
u16SmSync0Counter
bEcatFirstOutputsReceived
bEcatOutputUpdateRunning
u8dummy
bEcatInputUpdateRunning
Sync0WdCounter
LatchInputSync0Counter
u16SmSync0Value
sErrorSettings
LatchInputSync0Value
Sync1WdCounter
ECAT_Init
COE_ObjInit
DISABLE_ESC_INT
ENABLE_ESC_INT
COE_SyncTimeStamp
ECAT_Main
COE_Main
CheckIfEcatError
APPL_Application
HW_EepromReload
