   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "esc_hw_eep.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB130:
  26              	 .file 1 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE130:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB131:
 262:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE131:
 114 0022 00BF     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_GPIO_GetInput:
 120              	.LFB133:
 288:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** {
 310:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 313:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** }
 314:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** {
 121              	 .loc 1 334 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 137 0008 0B46     	 mov r3,r1
 138 000a FB70     	 strb r3,[r7,#3]
 335:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 139              	 .loc 1 337 0
 140 000c 7B68     	 ldr r3,[r7,#4]
 141 000e 5A6A     	 ldr r2,[r3,#36]
 142 0010 FB78     	 ldrb r3,[r7,#3]
 143 0012 22FA03F3 	 lsr r3,r2,r3
 144 0016 03F00103 	 and r3,r3,#1
 338:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_gpio.h **** }
 145              	 .loc 1 338 0
 146 001a 1846     	 mov r0,r3
 147 001c 0C37     	 adds r7,r7,#12
 148              	.LCFI15:
 149              	 .cfi_def_cfa_offset 4
 150 001e BD46     	 mov sp,r7
 151              	.LCFI16:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 0020 5DF8047B 	 ldr r7,[sp],#4
 155              	.LCFI17:
 156              	 .cfi_restore 7
 157              	 .cfi_def_cfa_offset 0
 158 0024 7047     	 bx lr
 159              	 .cfi_endproc
 160              	.LFE133:
 162 0026 00BF     	 .section .text.XMC_FCE_InitializeSeedValue,"ax",%progbits
 163              	 .align 2
 164              	 .thumb
 165              	 .thumb_func
 167              	XMC_FCE_InitializeSeedValue:
 168              	.LFB156:
 169              	 .file 2 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc/xmc_fce.h"
   1:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
   2:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @file xmc_fce.h
   3:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @date 2015-06-20
   4:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
   5:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @cond
   6:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** ***************************************************************************************************
   7:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
   9:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * All rights reserved.                        
  11:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *                                             
  12:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * following conditions are met:   
  14:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *                                                                              
  15:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * disclaimer.                        
  17:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 
  18:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 
  21:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *                                                                              
  24:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *                                                                              
  32:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
  35:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
  36:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Change History
  37:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * --------------
  38:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
  39:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 2015-02-20:
  40:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *     - Initial
  41:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *      
  42:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 2015-05-20:
  43:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *     - Description updated <br>
  44:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *   
  45:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 2015-06-20:
  46:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  47:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @endcond 
  48:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
  49:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
  50:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
  51:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #ifndef XMC_FCE_H
  52:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_H
  53:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
  54:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
  55:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * HEADER FILES
  56:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
  57:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  
  58:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #include <xmc_common.h>
  59:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
  60:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #if defined (FCE)
  61:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
  62:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
  63:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @addtogroup XMClib
  64:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @{
  65:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
  66:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
  67:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
  68:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @addtogroup FCE
  69:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @brief Flexible CRC Engine(FCE) driver for the XMC microcontroller family.
  70:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
  71:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The FCE provides a parallel implementation of Cyclic Redundancy Code (CRC)
  72:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * algorithms. The current FCE version for the XMC4000 microcontroller family implements the
  73:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * IEEE 802.3 ethernet CRC32, the CCITT CRC16 and the SAE J1850 CRC8 polynomials.
  74:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The primary target of FCE is to be used as an hardware acceleration engine for software
  75:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * applications or operating systems services using CRC signatures.
  76:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
  77:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @image html fce_overview.png	 
  78:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @image latex ../images/fce_overview.png	 
  79:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE Features: <br>
  80:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @image html fce_polynomials.png
  81:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @image latex ../images/fce_polynomials.png
  82:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *    * CRC kernel 0 and 1: IEEE 802.3 CRC32 ethernet polynomial: 0x04C11DB71 <br>
  83:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *    * CRC kernel 2: CCITT CRC16 polynomial: 0x1021 <br>
  84:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *    * CRC kernel 3: SAE J1850 CRC8 polynomial: 0x1D <br>
  85:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *    * Configuration Registers enable to control the CRC operation and perform automatic checksum 
  86:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *      the end of a message. <br>
  87:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *    * Extended register interface to control reliability of FCE execution in safety applications.
  88:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *    * Error notification scheme via dedicated interrupt node for: <br>
  89:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****         a)Transient error detection: Error interrupt generation (maskable) with local status regist
  90:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 		  (cleared by software) <br>
  91:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****         b)Checksum failure: Error interrupt generation (maskable) with local status register (clear
  92:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 		
  93:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****      FCE provides one interrupt line to the interrupt system. Each CRC engine has its own set of fl
  94:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
  95:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @{
  96:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
  97:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  
  98:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
  99:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * MACROS
 100:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 101:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  
 102:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC32_0        FCE_KE0 /**< Kernel 0 <br> */
 103:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC32_1        FCE_KE1 /**< Kernel 1 <br> */
 104:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC16          FCE_KE2 /**< Kernel 2 <br> */
 105:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_CRC8           FCE_KE3 /**< Kernel 3 <br> */
 106:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 107:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFIN_SET      (1U) /**< Enables input reflection */
 108:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFIN_RESET    (0U) /**< Disables input reflection */
 109:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFOUT_SET     (1U) /**< Enables output reflection */
 110:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_REFOUT_RESET   (0U) /**< Disables output reflection */
 111:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_INVSEL_SET     (1U) /**< Enables output inversion */
 112:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #define XMC_FCE_INVSEL_RESET   (0U) /**< Disables output inversion */
 113:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 114:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 115:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * ENUMS
 116:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 117:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  
 118:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 119:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE interrupt configuration
 120:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 121:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CONFIG_INTERRUPT
 122:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 123:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_CMI = FCE_KE_CFG_CMI_Msk, /**< Enables CRC Mismatch interrupt \n*/
 124:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_CEI = FCE_KE_CFG_CEI_Msk, /**< Enables Configuration error interrupt \n*/
 125:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_LEI = FCE_KE_CFG_LEI_Msk, /**< Enables Length error interrupt \n*/
 126:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_BEI = FCE_KE_CFG_BEI_Msk  /**< Enables Bus error interrupt \n*/
 127:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_INTERRUPT_t;
 128:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 129:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 130:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE operation configuration
 131:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 132:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CONFIG_OPERATION
 133:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 134:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_CCE = FCE_KE_CFG_CCE_Msk, /**< Enables CRC check */
 135:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_ALR = FCE_KE_CFG_ALR_Msk  /**< Enables Automatic length reload */
 136:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_OPERATION_t;
 137:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 138:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 139:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE algorithm configuration
 140:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 141:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CONFIG_ALGO
 142:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 143:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_REFIN  = FCE_KE_CFG_REFIN_Msk,  /**< Enables input byte reflection */
 144:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_REFOUT = FCE_KE_CFG_REFOUT_Msk, /**< Enables Final CRC reflection */
 145:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CFG_CONFIG_XSEL   = FCE_KE_CFG_XSEL_Msk    /**< Enables output inversion */
 146:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_ALGO_t;
 147:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 148:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 149:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE status flag configuration
 150:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 151:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_STS_FLAG
 152:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 153:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_MISMATCH_CRC = FCE_KE_STS_CMF_Msk, /**< CRC Mismatch flag */
 154:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_CONFIG_ERROR = FCE_KE_STS_CEF_Msk, /**< Configuration Error flag */
 155:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_LENGTH_ERROR = FCE_KE_STS_LEF_Msk, /**< Length Error flag */
 156:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STS_BUS_ERROR    = FCE_KE_STS_BEF_Msk	 /**< Bus Error flag */
 157:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_STS_FLAG_t;
 158:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 159:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 160:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE control configuration
 161:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 162:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_CTR_TEST
 163:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 164:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CTR_MISMATCH_CRC   = FCE_KE_CTR_FCM_Msk,      /**< Forces CRC mismatch */
 165:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CTR_MISMATCH_CFG   = FCE_KE_CTR_FRM_CFG_Msk,	/**< Forces CFG Register mismatch */
 166:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CTR_MISMATCH_CHECK = FCE_KE_CTR_FRM_CHECK_Msk /**< Forces CRC Check Register mismatch */
 167:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CTR_TEST_t;
 168:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 169:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 170:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE status enumeration
 171:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 172:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** typedef enum XMC_FCE_STATUS
 173:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 174:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STATUS_OK = 0, /**< Returns OK on success */
 175:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STATUS_BUSY,   /**< Returns BUSY when API is busy with a previous request */
 176:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_STATUS_ERROR   /**< Returns ERROR when API cannot fulfil request */
 177:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_STATUS_t;
 178:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 179:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 180:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * DATA STRUCTURES
 181:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 182:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 183:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 184:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE kernel
 185:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */ 
 186:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** typedef FCE_KE_TypeDef XMC_FCE_Kernel_t;
 187:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 188:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /* Anonymous structure/union guard start */
 189:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #if defined (__CC_ARM)
 190:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   #pragma push
 191:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   #pragma anon_unions
 192:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #elif defined (__TASKING__)
 193:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   #pragma warning 586
 194:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #endif
 195:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 196:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 197:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @brief XMC_FCE configuration structure
 198:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 199:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** typedef struct XMC_FCE_CONFIG
 200:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 201:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   union
 202:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   {
 203:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****     uint32_t regval;
 204:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****     struct
 205:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****     {
 206:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 	  uint32_t               : 8;
 207:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****       uint32_t config_refin  : 1;  /**< Enables byte-wise reflection */
 208:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****       uint32_t config_refout : 1;  /**< Enables bit-wise reflection */
 209:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****       uint32_t config_xsel   : 1;  /**< Enables output inversion */
 210:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****       uint32_t               : 21; /**< Reserved bits */	  
 211:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****     };
 212:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   };
 213:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_CONFIG_t;
 214:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 215:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /* Anonymous structure/union guard end */
 216:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #if defined (__CC_ARM)
 217:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   #pragma pop
 218:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #elif defined (__TASKING__)
 219:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   #pragma warning restore
 220:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #endif
 221:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 222:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 223:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * FCE handler
 224:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 225:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** typedef struct XMC_FCE
 226:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 227:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_Kernel_t *kernel_ptr;    /**< FCE Kernel Pointer */
 228:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   XMC_FCE_CONFIG_t fce_cfg_update; /**< FCE CFG register update */
 229:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   uint32_t seedvalue;              /**< CRC seed value to be used */
 230:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** } XMC_FCE_t;
 231:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 232:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**************************************************************************************************
 233:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * API PROTOTYPES
 234:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  **************************************************************************************************
 235:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  
 236:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #ifdef __cplusplus
 237:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** extern "C" {
 238:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** #endif
 239:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  
 240:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 241:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 242:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return uint32_t Module revision number
 243:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 244:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 245:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Read FCE module revision number <br>
 246:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 
 247:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 248:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The value of a module revision starts with 0x01 (first revision). The current revision
 249:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * number is 0x01.
 250:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 251:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE uint32_t XMC_FCE_ReadModuleRev(void)
 252:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 253:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   return (uint32_t)(FCE->ID & FCE_ID_MOD_REV_Msk);
 254:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 255:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 256:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 257:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 258:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return uint32_t Module type
 259:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 260:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 261:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Read the FCE module type <br>
 262:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 
 263:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 264:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The return value is currently 0xC0. It defines the module as a 32-bit module.
 265:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 266:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE uint32_t XMC_FCE_ReadModuleType(void)
 267:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 268:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   return (uint32_t)((FCE->ID & FCE_ID_MOD_TYPE_Msk) >> FCE_ID_MOD_TYPE_Pos);
 269:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 270:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 271:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 272:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 273:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return uint32_t Module number
 274:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 275:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 276:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Read FCE module number <br>
 277:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 
 278:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 279:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The return value for FCE module is currently 0x00CA.
 280:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 281:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE uint32_t XMC_FCE_ReadModuleNumber(void)
 282:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 283:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   return ((uint32_t)((FCE->ID & FCE_ID_MOD_NUMBER_Msk) >> FCE_ID_MOD_NUMBER_Pos));
 284:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 285:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 286:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 287:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 288:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return bool Disable status
 289:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 290:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 291:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 292:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Return the disable status <br>
 293:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 294:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 295:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function reads the FCE module disable status (DISS) bit. It returns "true" if
 296:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * set, "false" otherwise.
 297:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 298:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE bool XMC_FCE_Get_DisableStatus(void)
 299:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 300:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   return (bool)(FCE->CLC &= (uint32_t)~FCE_CLC_DISS_Msk);
 301:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 302:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 303:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 304:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 305:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 306:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 307:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 308:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Disable the FCE module <br>
 309:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 
 310:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 311:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function asserts the FCE peripheral reset and sets the DISR bit in the CLC
 312:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * register.
 313:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 314:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 315:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * All pending transactions running on the bus slave interface must be completed before
 316:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * entering the disabled state.
 317:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 318:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** void XMC_FCE_Disable(void);
 319:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 320:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 321:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param None
 322:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 323:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 324:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 325:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Enable the FCE module <br>
 326:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 327:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 328:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function de-asserts the peripheral reset and clears the DISR bit CLC register.
 329:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 330:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** void XMC_FCE_Enable(void);
 331:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 332:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 333:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 334:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return ::XMC_FCE_STATUS_t
 335:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 336:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 337:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Initialize the FCE engine <br>
 338:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 
 339:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 340:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function sets to the CFG and CRC registers with the FCE configuration and
 341:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * seeds values. The function always returns XMC_FCE_STATUS_SUCCESS.
 342:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 343:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 344:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The software must first ensure that the CRC kernel is properly configured with the
 345:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * initial CRC value (seed value).
 346:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 347:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** XMC_FCE_STATUS_t XMC_FCE_Init(const XMC_FCE_t *const engine);
 348:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 349:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 350:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 351:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param seedvalue Initial CRC value
 352:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 353:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 354:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 355:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Initialize FCE seed value
 356:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 357:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 358:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function sets the initial CRC (seed) value in the CRC register.
 359:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 360:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_InitializeSeedValue(const XMC_FCE_t *const engine, uint32_t seedvalue)
 361:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 170              	 .loc 2 361 0
 171              	 .cfi_startproc
 172              	 
 173              	 
 174              	 
 175 0000 80B4     	 push {r7}
 176              	.LCFI18:
 177              	 .cfi_def_cfa_offset 4
 178              	 .cfi_offset 7,-4
 179 0002 83B0     	 sub sp,sp,#12
 180              	.LCFI19:
 181              	 .cfi_def_cfa_offset 16
 182 0004 00AF     	 add r7,sp,#0
 183              	.LCFI20:
 184              	 .cfi_def_cfa_register 7
 185 0006 7860     	 str r0,[r7,#4]
 186 0008 3960     	 str r1,[r7]
 362:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CRC = seedvalue;
 187              	 .loc 2 362 0
 188 000a 7B68     	 ldr r3,[r7,#4]
 189 000c 1B68     	 ldr r3,[r3]
 190 000e 3A68     	 ldr r2,[r7]
 191 0010 9A61     	 str r2,[r3,#24]
 363:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 192              	 .loc 2 363 0
 193 0012 0C37     	 adds r7,r7,#12
 194              	.LCFI21:
 195              	 .cfi_def_cfa_offset 4
 196 0014 BD46     	 mov sp,r7
 197              	.LCFI22:
 198              	 .cfi_def_cfa_register 13
 199              	 
 200 0016 5DF8047B 	 ldr r7,[sp],#4
 201              	.LCFI23:
 202              	 .cfi_restore 7
 203              	 .cfi_def_cfa_offset 0
 204 001a 7047     	 bx lr
 205              	 .cfi_endproc
 206              	.LFE156:
 208              	 .section .text.XMC_FCE_GetCRCResult,"ax",%progbits
 209              	 .align 2
 210              	 .thumb
 211              	 .thumb_func
 213              	XMC_FCE_GetCRCResult:
 214              	.LFB167:
 364:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 365:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 366:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 367:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param event OR'd values of ::XMC_FCE_CONFIG_INTERRUPT_t enumeration values
 368:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 369:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 370:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 371:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Enable FCE event(s) <br>
 372:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 373:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 374:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function sets the CFG register to enable FCE event(s).
 375:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 376:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_EnableEvent(const XMC_FCE_t *const engine, uint32_t event)
 377:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 378:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG |= (uint32_t)event;
 379:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 380:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 381:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 382:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 383:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param event OR'd values of ::XMC_FCE_CONFIG_INTERRUPT_t enumeration values
 384:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 385:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 386:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 387:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Disable FCE event(s) <br>
 388:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 389:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 390:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function clears the CFG register to disable FCE event(s).
 391:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 392:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_DisableEvent(const XMC_FCE_t *const engine, uint32_t event)
 393:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 394:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG &= ~(uint32_t)event;
 395:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 396:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 397:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 398:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 399:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param event Event of type ::XMC_FCE_STS_FLAG_t
 400:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return bool
 401:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 402:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 403:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Return the event status of FCE event <br>
 404:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 405:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 406:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function returns the status of a single requested FCE event by reading the
 407:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * appropriate bit-fields of the STS register.
 408:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 409:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE bool XMC_FCE_GetEventStatus(const XMC_FCE_t *const engine, XMC_FCE_STS_FLAG_t event
 410:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 411:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   return (bool) (engine->kernel_ptr->STS & (uint32_t)event);
 412:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 413:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 414:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 415:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 416:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param event Event of type ::XMC_FCE_STS_FLAG_t
 417:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 418:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 419:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 420:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Clear an FCE event <br>
 421:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 422:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 423:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function clears requested FCE events by setting the bit-fields of the STS
 424:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * register.
 425:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 426:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_ClearEvent(const XMC_FCE_t *const engine, XMC_FCE_STS_FLAG_t event)
 427:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 428:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->STS |= (uint32_t)event;
 429:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 430:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 431:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 432:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 433:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param operation FCE operation of type ::XMC_FCE_CONFIG_OPERATION_t
 434:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 435:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 436:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 437:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Enable CRC operations <br>
 438:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 439:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 440:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function enables FRC operations by writing to the CFG register. 
 441:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 442:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 443:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * CRC comparison check (at the end of message) can be enabled using the CCE bit-field.
 444:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Automatic reload of LENGTH field (at the end of message) can be enabled using the
 445:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * ALR bit field.
 446:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 447:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_EnableOperation(const XMC_FCE_t *const engine, uint32_t operation)
 448:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 449:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG |= operation;
 450:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 451:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 452:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 453:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 454:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param operation FCE operation of type ::XMC_FCE_CONFIG_OPERATION_t
 455:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 456:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 457:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 458:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Disable CRC operations <br>
 459:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 460:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 461:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * The function disables FRC operations by writing to the CFG register.
 462:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 463:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 464:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * CRC comparison check (at the end of message) can be disabled using the CCE bit-field.
 465:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Automatic reload of LENGTH field (at the end of message) can be disabled using the
 466:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * ALR bit field.
 467:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 468:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_DisableOperation(const XMC_FCE_t *const engine, uint32_t operation)
 469:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 470:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG &= ~(uint32_t)operation;
 471:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 472:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 473:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 474:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 475:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param algo A valid algorithm of type ::XMC_FCE_CONFIG_ALGO_t or a valid combination
 476:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *             of logically OR'd algorithms
 477:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 478:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 479:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 480:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Enables CRC algorithm(s) <br>
 481:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 482:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 483:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Options for enabling CRC algorithm:    <br>
 484:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * REFIN: Input byte wise reflection      <br>
 485:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * REFOUT: Output bit wise reflection     <br>
 486:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * XSEL: Value to be XORed with final CRC <br>
 487:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 488:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_EnableCRCAlgorithm(const XMC_FCE_t *const engine, uint32_t algo)
 489:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 490:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG |= (uint32_t)algo;
 491:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 492:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 493:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 494:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 495:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param algo A valid algorithm of type ::XMC_FCE_CONFIG_ALGO_t or a valid combination
 496:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *             of logically OR'd algorithms
 497:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 498:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 499:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 500:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Disable CRC algorithm(s) <br>
 501:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 502:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 503:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Options for disabling CRC algorithm:   <br>
 504:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * REFIN: Input byte wise reflection      <br>
 505:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * REFOUT: Output bit wise reflection     <br>
 506:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * XSEL: Value to be XORed with final CRC <br>
 507:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 508:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_DisableCRCAlgorithm(const XMC_FCE_t *const engine, uint32_t algo)
 509:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 510:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CFG &= ~(uint32_t)algo;
 511:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 512:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 513:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 514:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 515:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param checkvalue Checksum value
 516:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 517:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 518:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 519:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Updates CRC check value <br>
 520:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 521:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 522:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * When the CFG.CCE bit field is set, every time the IR register is written, the
 523:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * LENGTH register is decremented by one until it reaches zero. The hardware monitors
 524:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * the transition of the LENGTH register from 1 to 0 to detect the end of the
 525:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * message and proceed with the comparison of the result register (RES) value with
 526:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * the CHECK register value.
 527:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 528:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_UpdateCRCCheck(const XMC_FCE_t *const engine, const uint32_t checkvalu
 529:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 530:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CHECK = 0xFACECAFEU;
 531:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->CHECK = checkvalue;
 532:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 533:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 534:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 535:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 536:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param checklength Checksum length
 537:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None <br>
 538:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 539:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 540:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Updates CRC length specified in the input parameter <br>
 541:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 542:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par
 543:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * When the ALR bit field is set to 1, every write to the IR register decrements
 544:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * the value of the LENGTH bit field. The LENGTH field shall be reloaded with its
 545:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * configuration value at the end of the cycle where LENGTH reaches 0.
 546:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 547:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_UpdateLength(const XMC_FCE_t *const engine, const uint32_t checklength
 548:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 549:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->LENGTH = 0xFACECAFEU;
 550:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   engine->kernel_ptr->LENGTH = checklength;
 551:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 552:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 553:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 554:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to @ref XMC_FCE_t, pointing to the FCE base address
 555:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param data Pointer to the data buffer
 556:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param length Total number of bytes of data buffer
 557:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param result Pointer to computed CRC result
 558:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return XMC_FCE_STATUS_ERROR on error
 559:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return XMC_FCE_STATUS_SUCCESS otherwise.
 560:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 561:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 562:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Calculate and updates the CRC8 checksum in the result pointer <br>
 563:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 564:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 565:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * A write to IRm (m = 3) triggers the CRC kernel to update the message checksum
 566:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * according to the IR and current CRC register contents. Any write transaction
 567:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * is allowed to this IRm register. Only the lower 8-bit of the write transactions
 568:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * will be used. ::XMC_FCE_GetCRCResult() should be called after invoking
 569:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * ::XMC_FCE_CalculateCRC8() to get final CRC value.
 570:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 571:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC8(const XMC_FCE_t *const engine,
 572:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****                                        const uint8_t *data,
 573:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 									   uint32_t length,
 574:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 									   uint8_t *result);
 575:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 576:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 577:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 578:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param data Pointer to the data buffer
 579:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param length Length of data buffer
 580:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param result Pointer to computed CRC result
 581:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return XMC_FCE_STATUS_ERROR on error
 582:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return XMC_FCE_STATUS_SUCCESS otherwise.
 583:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 584:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 585:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Calculate and update the RC16 checksum in the result pointer <br>
 586:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 587:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note: </b><br>
 588:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * A write to Internal Register (IRm m = 2) triggers the CRC kernel to update the
 589:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * message checksum according to the IR and current CRC register contents. Only 32-bit
 590:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * or 16-bit write transactions are permitted. Any other bus write transaction will
 591:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * lead to a bus error. Only the lower 16-bit of the write transactions will be used.
 592:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * ::XMC_FCE_GetCRCResult() should be called after ::XMC_FCE_CalculateCRC16() to get
 593:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * final CRC value.
 594:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 595:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC16(const XMC_FCE_t *const engine,
 596:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****                                         const uint16_t *data,
 597:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 										uint32_t length,
 598:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 										uint16_t *result);
 599:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 600:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 601:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to @ref XMC_FCE_t, pointing to the FCE base address
 602:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param data Pointer to the data buffer
 603:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param length Total number of bytes of data buffer
 604:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param result Pointer to computed CRC result
 605:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return XMC_FCE_STATUS_ERROR on error
 606:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return XMC_FCE_STATUS_SUCCESS otherwise.
 607:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 608:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description</b><br>
 609:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Calculate and update the calculated CRC32 checksum in the result pointer <br>
 610:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 611:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Note:</b><br>
 612:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * A write to Internal Register (IRm, m = 0-1) triggers the CRC kernel to update
 613:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * the message checksum according to the IR and current CRC register contents. Only
 614:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * 32-bit write transactions are permitted. Any other bus write transaction will
 615:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * lead to a bus error. ::XMC_FCE_GetCRCResult() should be called after
 616:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * ::XMC_FCE_CalculateCRC32() to get final CRC value.
 617:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 618:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC32(const XMC_FCE_t *const engine,
 619:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****                                         const uint32_t *data,
 620:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 										uint32_t length,
 621:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 										uint32_t *result);
 622:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** 
 623:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** /**
 624:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param engine Constant pointer to ::XMC_FCE_t, pointing to the FCE base address
 625:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @param result Pointer to CRC result
 626:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * @return None
 627:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  *
 628:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * \par<b>Description: </b><br>
 629:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  * Read the final CRC value from RES register <br>
 630:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****  */
 631:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** __STATIC_INLINE void XMC_FCE_GetCRCResult(const XMC_FCE_t *const engine, uint32_t *result)
 632:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** {
 215              	 .loc 2 632 0
 216              	 .cfi_startproc
 217              	 
 218              	 
 219              	 
 220 0000 80B4     	 push {r7}
 221              	.LCFI24:
 222              	 .cfi_def_cfa_offset 4
 223              	 .cfi_offset 7,-4
 224 0002 83B0     	 sub sp,sp,#12
 225              	.LCFI25:
 226              	 .cfi_def_cfa_offset 16
 227 0004 00AF     	 add r7,sp,#0
 228              	.LCFI26:
 229              	 .cfi_def_cfa_register 7
 230 0006 7860     	 str r0,[r7,#4]
 231 0008 3960     	 str r1,[r7]
 633:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h ****   *result= engine->kernel_ptr->RES;
 232              	 .loc 2 633 0
 233 000a 7B68     	 ldr r3,[r7,#4]
 234 000c 1B68     	 ldr r3,[r3]
 235 000e 5A68     	 ldr r2,[r3,#4]
 236 0010 3B68     	 ldr r3,[r7]
 237 0012 1A60     	 str r2,[r3]
 634:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_fce.h **** }
 238              	 .loc 2 634 0
 239 0014 0C37     	 adds r7,r7,#12
 240              	.LCFI27:
 241              	 .cfi_def_cfa_offset 4
 242 0016 BD46     	 mov sp,r7
 243              	.LCFI28:
 244              	 .cfi_def_cfa_register 13
 245              	 
 246 0018 5DF8047B 	 ldr r7,[sp],#4
 247              	.LCFI29:
 248              	 .cfi_restore 7
 249              	 .cfi_def_cfa_offset 0
 250 001c 7047     	 bx lr
 251              	 .cfi_endproc
 252              	.LFE167:
 254 001e 00BF     	 .section .rodata.fce_config,"a",%progbits
 255              	 .align 2
 258              	fce_config:
 259 0000 20000250 	 .word 1342308384
 260 0004 00       	 .space 1
 261 0005 00       	 .byte 0
 262 0006 0000     	 .space 2
 263 0008 00000000 	 .word 0
 264              	 .section .bss.eep_buf,"aw",%nobits
 265              	 .align 2
 268              	eep_buf:
 269 0000 00000000 	 .space 3968
 269      00000000 
 269      00000000 
 269      00000000 
 269      00000000 
 270              	 .section .bss.eep_buf_dirty,"aw",%nobits
 273              	eep_buf_dirty:
 274 0000 00       	 .space 1
 275              	 .section .bss.eep_last_write,"aw",%nobits
 276              	 .align 2
 279              	eep_last_write:
 280 0000 00000000 	 .space 4
 281              	 .section .bss.eep_write_req,"aw",%nobits
 284              	eep_write_req:
 285 0000 00       	 .space 1
 286              	 .section .bss.eep_curr_block,"aw",%nobits
 287              	 .align 2
 290              	eep_curr_block:
 291 0000 00000000 	 .space 4
 292              	 .section .bss.eep_next_block,"aw",%nobits
 293              	 .align 2
 296              	eep_next_block:
 297 0000 00000000 	 .space 4
 298              	 .section .bss.eep_write_src,"aw",%nobits
 299              	 .align 2
 302              	eep_write_src:
 303 0000 00000000 	 .space 4
 304              	 .section .bss.eep_write_dst,"aw",%nobits
 305              	 .align 2
 308              	eep_write_dst:
 309 0000 00000000 	 .space 4
 310              	 .section .bss.eep_write_page,"aw",%nobits
 311              	 .align 2
 314              	eep_write_page:
 315 0000 00000000 	 .space 4
 316              	 .section .bss.eep_write_buf,"aw",%nobits
 317              	 .align 2
 320              	eep_write_buf:
 321 0000 00000000 	 .space 4096
 321      00000000 
 321      00000000 
 321      00000000 
 321      00000000 
 322              	 .section .rodata.gpio_config_btn,"a",%progbits
 323              	 .align 2
 326              	gpio_config_btn:
 327 0000 30       	 .byte 48
 328 0001 000000   	 .space 3
 329 0004 00000000 	 .word 0
 330 0008 00       	 .byte 0
 331 0009 000000   	 .space 3
 332              	 .section .rodata.gpio_config_led,"a",%progbits
 333              	 .align 2
 336              	gpio_config_led:
 337 0000 80       	 .byte -128
 338 0001 000000   	 .space 3
 339 0004 00000100 	 .word 65536
 340 0008 02       	 .byte 2
 341 0009 000000   	 .space 3
 342              	 .section .text.EEP_init,"ax",%progbits
 343              	 .align 2
 344              	 .global EEP_init
 345              	 .thumb
 346              	 .thumb_func
 348              	EEP_init:
 349              	.LFB168:
 350              	 .file 3 "../esc_hw_eep.c"
   1:../esc_hw_eep.c **** /*
   2:../esc_hw_eep.c ****  * Licensed under the GNU General Public License version 2 with exceptions. See
   3:../esc_hw_eep.c ****  * LICENSE file in the project root for full license information
   4:../esc_hw_eep.c ****  */
   5:../esc_hw_eep.c **** 
   6:../esc_hw_eep.c ****  /** \file
   7:../esc_hw_eep.c ****  * \brief
   8:../esc_hw_eep.c ****  * ESC hardware specific EEPROM emulation functions.
   9:../esc_hw_eep.c ****  */
  10:../esc_hw_eep.c **** 
  11:../esc_hw_eep.c **** #include "cc.h"
  12:../esc_hw_eep.c **** #include "esc.h"
  13:../esc_hw_eep.c **** #include "esc_hw_eep.h"
  14:../esc_hw_eep.c **** 
  15:../esc_hw_eep.c **** #include <string.h>
  16:../esc_hw_eep.c **** 
  17:../esc_hw_eep.c **** extern const uint8_t _binary_sii_eeprom_bin_start;
  18:../esc_hw_eep.c **** extern const uint8_t _binary_sii_eeprom_bin_end;
  19:../esc_hw_eep.c **** 
  20:../esc_hw_eep.c **** #define SII_EE_DEFLT (&_binary_sii_eeprom_bin_start)
  21:../esc_hw_eep.c **** #define SII_EE_DEFLT_SIZE (uint32_t)(&_binary_sii_eeprom_bin_end - &_binary_sii_eeprom_bin_start)
  22:../esc_hw_eep.c **** 
  23:../esc_hw_eep.c **** #if EEP_BYTES_PER_BLOCK > EEP_BYTES_PER_SECTOR
  24:../esc_hw_eep.c **** #error EEP_BYTES_PER_BLOCK needs to fit into EEP_BYTES_PER_SECTOR
  25:../esc_hw_eep.c **** #endif
  26:../esc_hw_eep.c **** 
  27:../esc_hw_eep.c **** static const XMC_FCE_t fce_config =
  28:../esc_hw_eep.c **** {
  29:../esc_hw_eep.c ****    .kernel_ptr = EPP_FCE_CRC32,
  30:../esc_hw_eep.c ****    .fce_cfg_update.config_refin = XMC_FCE_REFIN_RESET,
  31:../esc_hw_eep.c ****    .fce_cfg_update.config_refout = XMC_FCE_REFOUT_RESET,
  32:../esc_hw_eep.c ****    .fce_cfg_update.config_xsel = XMC_FCE_INVSEL_RESET,
  33:../esc_hw_eep.c ****    .seedvalue = 0
  34:../esc_hw_eep.c **** };
  35:../esc_hw_eep.c **** 
  36:../esc_hw_eep.c **** static uint8_t eep_buf[EEP_EMU_BYTES];
  37:../esc_hw_eep.c **** static uint8_t eep_buf_dirty;
  38:../esc_hw_eep.c **** static uint32_t eep_last_write;
  39:../esc_hw_eep.c **** 
  40:../esc_hw_eep.c **** static uint8_t eep_write_req;
  41:../esc_hw_eep.c **** static eep_block_t *eep_curr_block;
  42:../esc_hw_eep.c **** static eep_block_t *eep_next_block;
  43:../esc_hw_eep.c **** 
  44:../esc_hw_eep.c **** static uint32_t *eep_write_src;
  45:../esc_hw_eep.c **** static uint32_t *eep_write_dst;
  46:../esc_hw_eep.c **** static uint32_t eep_write_page;
  47:../esc_hw_eep.c **** 
  48:../esc_hw_eep.c **** static eep_block_t eep_write_buf;
  49:../esc_hw_eep.c **** 
  50:../esc_hw_eep.c **** static void init_flash_data(void);
  51:../esc_hw_eep.c **** static void find_latest_block(eep_block_t *addr);
  52:../esc_hw_eep.c **** static eep_block_t *get_next_block(eep_block_t *block);
  53:../esc_hw_eep.c **** static eep_block_t *cleanup_unused_sect(eep_block_t *block);
  54:../esc_hw_eep.c **** 
  55:../esc_hw_eep.c **** static int32_t is_sector_empty(uint32_t *addr);
  56:../esc_hw_eep.c **** static uint32_t crc32(const uint8_t *data, uint32_t length);
  57:../esc_hw_eep.c **** 
  58:../esc_hw_eep.c **** #ifdef EEP_DEFAULT_BTN
  59:../esc_hw_eep.c **** 
  60:../esc_hw_eep.c **** static const XMC_GPIO_CONFIG_t gpio_config_btn = {
  61:../esc_hw_eep.c ****   .mode = XMC_GPIO_MODE_INPUT_INVERTED_PULL_UP,
  62:../esc_hw_eep.c ****   .output_level = 0,
  63:../esc_hw_eep.c ****   .output_strength = 0
  64:../esc_hw_eep.c **** };
  65:../esc_hw_eep.c **** 
  66:../esc_hw_eep.c **** #define EEP_DEFAULT_BTN_INIT()  XMC_GPIO_Init(EEP_DEFAULT_BTN, &gpio_config_btn)
  67:../esc_hw_eep.c **** #define EEP_DEFAULT_BTN_STATE() XMC_GPIO_GetInput(EEP_DEFAULT_BTN)
  68:../esc_hw_eep.c **** 
  69:../esc_hw_eep.c **** #else
  70:../esc_hw_eep.c **** 
  71:../esc_hw_eep.c **** #define EEP_DEFAULT_BTN_INIT()  { }
  72:../esc_hw_eep.c **** #define EEP_DEFAULT_BTN_STATE() 0
  73:../esc_hw_eep.c **** 
  74:../esc_hw_eep.c **** #endif
  75:../esc_hw_eep.c **** 
  76:../esc_hw_eep.c **** #ifdef EEP_BUSY_LED
  77:../esc_hw_eep.c **** 
  78:../esc_hw_eep.c **** static const XMC_GPIO_CONFIG_t gpio_config_led = {
  79:../esc_hw_eep.c ****   .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
  80:../esc_hw_eep.c ****   .output_level = XMC_GPIO_OUTPUT_LEVEL_LOW,
  81:../esc_hw_eep.c ****   .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_SOFT_EDGE
  82:../esc_hw_eep.c **** };
  83:../esc_hw_eep.c **** 
  84:../esc_hw_eep.c **** #define EEP_BUSY_LED_INIT() XMC_GPIO_Init(EEP_BUSY_LED, &gpio_config_led)
  85:../esc_hw_eep.c **** #define EEP_BUSY_LED_ON()   XMC_GPIO_SetOutputHigh(EEP_BUSY_LED)
  86:../esc_hw_eep.c **** #define EEP_BUSY_LED_OFF()  XMC_GPIO_SetOutputLow(EEP_BUSY_LED)
  87:../esc_hw_eep.c **** 
  88:../esc_hw_eep.c **** #else
  89:../esc_hw_eep.c **** 
  90:../esc_hw_eep.c **** #define EEP_BUSY_LED_INIT() { }
  91:../esc_hw_eep.c **** #define EEP_BUSY_LED_ON()   { }
  92:../esc_hw_eep.c **** #define EEP_BUSY_LED_OFF()  { }
  93:../esc_hw_eep.c **** 
  94:../esc_hw_eep.c **** #endif
  95:../esc_hw_eep.c **** 
  96:../esc_hw_eep.c **** /** Initialize EEPROM emulation (load default data, validate checksums, ...).
  97:../esc_hw_eep.c ****  *
  98:../esc_hw_eep.c ****  */
  99:../esc_hw_eep.c **** void EEP_init (void)
 100:../esc_hw_eep.c **** {
 351              	 .loc 3 100 0
 352              	 .cfi_startproc
 353              	 
 354              	 
 355 0000 80B5     	 push {r7,lr}
 356              	.LCFI30:
 357              	 .cfi_def_cfa_offset 8
 358              	 .cfi_offset 7,-8
 359              	 .cfi_offset 14,-4
 360 0002 00AF     	 add r7,sp,#0
 361              	.LCFI31:
 362              	 .cfi_def_cfa_register 7
 101:../esc_hw_eep.c ****    /* initialize write buffer */
 102:../esc_hw_eep.c ****    memset(&eep_write_buf, 0, EEP_BYTES_PER_BLOCK);
 363              	 .loc 3 102 0
 364 0004 2748     	 ldr r0,.L10
 365 0006 0021     	 movs r1,#0
 366 0008 4FF48052 	 mov r2,#4096
 367 000c FFF7FEFF 	 bl memset
 103:../esc_hw_eep.c **** 
 104:../esc_hw_eep.c ****    /* configure I/Os */
 105:../esc_hw_eep.c ****    EEP_DEFAULT_BTN_INIT();
 368              	 .loc 3 105 0
 369 0010 2548     	 ldr r0,.L10+4
 370 0012 0D21     	 movs r1,#13
 371 0014 254A     	 ldr r2,.L10+8
 372 0016 FFF7FEFF 	 bl XMC_GPIO_Init
 106:../esc_hw_eep.c ****    EEP_BUSY_LED_INIT();
 373              	 .loc 3 106 0
 374 001a 2548     	 ldr r0,.L10+12
 375 001c 0921     	 movs r1,#9
 376 001e 254A     	 ldr r2,.L10+16
 377 0020 FFF7FEFF 	 bl XMC_GPIO_Init
 107:../esc_hw_eep.c **** 
 108:../esc_hw_eep.c ****    /* Enable FCE module */
 109:../esc_hw_eep.c ****    XMC_FCE_Enable();
 378              	 .loc 3 109 0
 379 0024 FFF7FEFF 	 bl XMC_FCE_Enable
 110:../esc_hw_eep.c **** 
 111:../esc_hw_eep.c ****    /* Initialize the FCE Configuration */
 112:../esc_hw_eep.c ****    XMC_FCE_Init(&fce_config);
 380              	 .loc 3 112 0
 381 0028 2348     	 ldr r0,.L10+20
 382 002a FFF7FEFF 	 bl XMC_FCE_Init
 113:../esc_hw_eep.c **** 
 114:../esc_hw_eep.c ****    /* try to find latest block in both sectors */
 115:../esc_hw_eep.c ****    eep_curr_block = NULL;
 383              	 .loc 3 115 0
 384 002e 234B     	 ldr r3,.L10+24
 385 0030 0022     	 movs r2,#0
 386 0032 1A60     	 str r2,[r3]
 116:../esc_hw_eep.c ****    if (!EEP_DEFAULT_BTN_STATE()) {
 387              	 .loc 3 116 0
 388 0034 1C48     	 ldr r0,.L10+4
 389 0036 0D21     	 movs r1,#13
 390 0038 FFF7FEFF 	 bl XMC_GPIO_GetInput
 391 003c 0346     	 mov r3,r0
 392 003e 002B     	 cmp r3,#0
 393 0040 05D1     	 bne .L8
 117:../esc_hw_eep.c ****       find_latest_block((eep_block_t *) EEP_SECTOR_A);
 394              	 .loc 3 117 0
 395 0042 1F48     	 ldr r0,.L10+28
 396 0044 FFF7FEFF 	 bl find_latest_block
 118:../esc_hw_eep.c ****       find_latest_block((eep_block_t *) EEP_SECTOR_B);
 397              	 .loc 3 118 0
 398 0048 1E48     	 ldr r0,.L10+32
 399 004a FFF7FEFF 	 bl find_latest_block
 400              	.L8:
 119:../esc_hw_eep.c ****    }
 120:../esc_hw_eep.c **** 
 121:../esc_hw_eep.c ****    EEP_BUSY_LED_ON();
 401              	 .loc 3 121 0
 402 004e 1848     	 ldr r0,.L10+12
 403 0050 0921     	 movs r1,#9
 404 0052 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 122:../esc_hw_eep.c **** 
 123:../esc_hw_eep.c ****    /* no valid block found -> initialize flash with default data */
 124:../esc_hw_eep.c ****    if (eep_curr_block == NULL) {
 405              	 .loc 3 124 0
 406 0056 194B     	 ldr r3,.L10+24
 407 0058 1B68     	 ldr r3,[r3]
 408 005a 002B     	 cmp r3,#0
 409 005c 01D1     	 bne .L9
 125:../esc_hw_eep.c ****       init_flash_data();
 410              	 .loc 3 125 0
 411 005e FFF7FEFF 	 bl init_flash_data
 412              	.L9:
 126:../esc_hw_eep.c ****    }
 127:../esc_hw_eep.c **** 
 128:../esc_hw_eep.c ****    /* cleanup unused block */
 129:../esc_hw_eep.c ****    cleanup_unused_sect(eep_curr_block);
 413              	 .loc 3 129 0
 414 0062 164B     	 ldr r3,.L10+24
 415 0064 1B68     	 ldr r3,[r3]
 416 0066 1846     	 mov r0,r3
 417 0068 FFF7FEFF 	 bl cleanup_unused_sect
 130:../esc_hw_eep.c **** 
 131:../esc_hw_eep.c ****    /* copy data from block to emu buffer */
 132:../esc_hw_eep.c ****    memcpy(eep_buf, eep_curr_block->data, EEP_EMU_BYTES);
 418              	 .loc 3 132 0
 419 006c 134B     	 ldr r3,.L10+24
 420 006e 1B68     	 ldr r3,[r3]
 421 0070 154A     	 ldr r2,.L10+36
 422 0072 1146     	 mov r1,r2
 423 0074 0833     	 adds r3,r3,#8
 424 0076 4FF47862 	 mov r2,#3968
 425 007a 0846     	 mov r0,r1
 426 007c 1946     	 mov r1,r3
 427 007e FFF7FEFF 	 bl memcpy
 133:../esc_hw_eep.c **** 
 134:../esc_hw_eep.c ****    EEP_BUSY_LED_OFF();
 428              	 .loc 3 134 0
 429 0082 0B48     	 ldr r0,.L10+12
 430 0084 0921     	 movs r1,#9
 431 0086 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 135:../esc_hw_eep.c **** 
 136:../esc_hw_eep.c ****    /* initialize state variables */
 137:../esc_hw_eep.c ****    eep_buf_dirty = 0;
 432              	 .loc 3 137 0
 433 008a 104B     	 ldr r3,.L10+40
 434 008c 0022     	 movs r2,#0
 435 008e 1A70     	 strb r2,[r3]
 138:../esc_hw_eep.c ****    eep_last_write = 0;
 436              	 .loc 3 138 0
 437 0090 0F4B     	 ldr r3,.L10+44
 438 0092 0022     	 movs r2,#0
 439 0094 1A60     	 str r2,[r3]
 139:../esc_hw_eep.c ****    eep_write_req = 0;
 440              	 .loc 3 139 0
 441 0096 0F4B     	 ldr r3,.L10+48
 442 0098 0022     	 movs r2,#0
 443 009a 1A70     	 strb r2,[r3]
 140:../esc_hw_eep.c ****    eep_next_block = NULL;
 444              	 .loc 3 140 0
 445 009c 0E4B     	 ldr r3,.L10+52
 446 009e 0022     	 movs r2,#0
 447 00a0 1A60     	 str r2,[r3]
 141:../esc_hw_eep.c **** }
 448              	 .loc 3 141 0
 449 00a2 80BD     	 pop {r7,pc}
 450              	.L11:
 451              	 .align 2
 452              	.L10:
 453 00a4 00000000 	 .word eep_write_buf
 454 00a8 008F0248 	 .word 1208127232
 455 00ac 00000000 	 .word gpio_config_btn
 456 00b0 00850248 	 .word 1208124672
 457 00b4 00000000 	 .word gpio_config_led
 458 00b8 00000000 	 .word fce_config
 459 00bc 00000000 	 .word eep_curr_block
 460 00c0 0000180C 	 .word 202899456
 461 00c4 00001C0C 	 .word 203161600
 462 00c8 00000000 	 .word eep_buf
 463 00cc 00000000 	 .word eep_buf_dirty
 464 00d0 00000000 	 .word eep_last_write
 465 00d4 00000000 	 .word eep_write_req
 466 00d8 00000000 	 .word eep_next_block
 467              	 .cfi_endproc
 468              	.LFE168:
 470              	 .section .text.EEP_hw_process,"ax",%progbits
 471              	 .align 2
 472              	 .global EEP_hw_process
 473              	 .thumb
 474              	 .thumb_func
 476              	EEP_hw_process:
 477              	.LFB169:
 142:../esc_hw_eep.c **** 
 143:../esc_hw_eep.c **** /** EEPROM emulation controller side periodic task.
 144:../esc_hw_eep.c ****  *
 145:../esc_hw_eep.c ****  */
 146:../esc_hw_eep.c **** void EEP_hw_process (void)
 147:../esc_hw_eep.c **** {
 478              	 .loc 3 147 0
 479              	 .cfi_startproc
 480              	 
 481              	 
 482 0000 80B5     	 push {r7,lr}
 483              	.LCFI32:
 484              	 .cfi_def_cfa_offset 8
 485              	 .cfi_offset 7,-8
 486              	 .cfi_offset 14,-4
 487 0002 82B0     	 sub sp,sp,#8
 488              	.LCFI33:
 489              	 .cfi_def_cfa_offset 16
 490 0004 00AF     	 add r7,sp,#0
 491              	.LCFI34:
 492              	 .cfi_def_cfa_register 7
 148:../esc_hw_eep.c ****    /* check for dirty buffer and set write */
 149:../esc_hw_eep.c ****    if (eep_buf_dirty) {
 493              	 .loc 3 149 0
 494 0006 3D4B     	 ldr r3,.L17
 495 0008 1B78     	 ldrb r3,[r3]
 496 000a 002B     	 cmp r3,#0
 497 000c 11D0     	 beq .L13
 498              	.LBB2:
 150:../esc_hw_eep.c ****       int32_t idle_time = ((int32_t) ESCvar.Time) - ((int32_t) eep_last_write);
 499              	 .loc 3 150 0
 500 000e 3C4B     	 ldr r3,.L17+4
 501 0010 D3F8CC30 	 ldr r3,[r3,#204]
 502 0014 1A46     	 mov r2,r3
 503 0016 3B4B     	 ldr r3,.L17+8
 504 0018 1B68     	 ldr r3,[r3]
 505 001a D31A     	 subs r3,r2,r3
 506 001c 7B60     	 str r3,[r7,#4]
 151:../esc_hw_eep.c ****       if (idle_time > EEP_IDLE_TIMEOUT) {
 507              	 .loc 3 151 0
 508 001e 7B68     	 ldr r3,[r7,#4]
 509 0020 394A     	 ldr r2,.L17+12
 510 0022 9342     	 cmp r3,r2
 511 0024 05DD     	 ble .L13
 152:../esc_hw_eep.c ****          eep_buf_dirty = 0;
 512              	 .loc 3 152 0
 513 0026 354B     	 ldr r3,.L17
 514 0028 0022     	 movs r2,#0
 515 002a 1A70     	 strb r2,[r3]
 153:../esc_hw_eep.c ****          eep_write_req = 1;
 516              	 .loc 3 153 0
 517 002c 374B     	 ldr r3,.L17+16
 518 002e 0122     	 movs r2,#1
 519 0030 1A70     	 strb r2,[r3]
 520              	.L13:
 521              	.LBE2:
 154:../esc_hw_eep.c ****       }
 155:../esc_hw_eep.c ****    }
 156:../esc_hw_eep.c **** 
 157:../esc_hw_eep.c ****    /* check for write process */
 158:../esc_hw_eep.c ****    if (eep_next_block != NULL) {
 522              	 .loc 3 158 0
 523 0032 374B     	 ldr r3,.L17+20
 524 0034 1B68     	 ldr r3,[r3]
 525 0036 002B     	 cmp r3,#0
 526 0038 29D0     	 beq .L14
 159:../esc_hw_eep.c ****       /* write flash page */
 160:../esc_hw_eep.c ****       XMC_FLASH_ProgramPage(eep_write_dst, eep_write_src);
 527              	 .loc 3 160 0
 528 003a 364B     	 ldr r3,.L17+24
 529 003c 1A68     	 ldr r2,[r3]
 530 003e 364B     	 ldr r3,.L17+28
 531 0040 1B68     	 ldr r3,[r3]
 532 0042 1046     	 mov r0,r2
 533 0044 1946     	 mov r1,r3
 534 0046 FFF7FEFF 	 bl XMC_FLASH_ProgramPage
 161:../esc_hw_eep.c ****       eep_write_src += XMC_FLASH_WORDS_PER_PAGE;
 535              	 .loc 3 161 0
 536 004a 334B     	 ldr r3,.L17+28
 537 004c 1B68     	 ldr r3,[r3]
 538 004e 03F58073 	 add r3,r3,#256
 539 0052 314A     	 ldr r2,.L17+28
 540 0054 1360     	 str r3,[r2]
 162:../esc_hw_eep.c ****       eep_write_dst += XMC_FLASH_WORDS_PER_PAGE;
 541              	 .loc 3 162 0
 542 0056 2F4B     	 ldr r3,.L17+24
 543 0058 1B68     	 ldr r3,[r3]
 544 005a 03F58073 	 add r3,r3,#256
 545 005e 2D4A     	 ldr r2,.L17+24
 546 0060 1360     	 str r3,[r2]
 163:../esc_hw_eep.c **** 
 164:../esc_hw_eep.c ****       /* update counter */
 165:../esc_hw_eep.c ****       eep_write_page++;
 547              	 .loc 3 165 0
 548 0062 2E4B     	 ldr r3,.L17+32
 549 0064 1B68     	 ldr r3,[r3]
 550 0066 0133     	 adds r3,r3,#1
 551 0068 2C4A     	 ldr r2,.L17+32
 552 006a 1360     	 str r3,[r2]
 166:../esc_hw_eep.c **** 
 167:../esc_hw_eep.c ****       /* check for finished job */
 168:../esc_hw_eep.c ****       if (eep_write_page >= EEP_PAGES_PER_BLOCK) {
 553              	 .loc 3 168 0
 554 006c 2B4B     	 ldr r3,.L17+32
 555 006e 1B68     	 ldr r3,[r3]
 556 0070 0F2B     	 cmp r3,#15
 557 0072 0BD9     	 bls .L15
 169:../esc_hw_eep.c ****          /* update block pointer and reset write state */
 170:../esc_hw_eep.c ****          eep_curr_block = eep_next_block;
 558              	 .loc 3 170 0
 559 0074 264B     	 ldr r3,.L17+20
 560 0076 1B68     	 ldr r3,[r3]
 561 0078 294A     	 ldr r2,.L17+36
 562 007a 1360     	 str r3,[r2]
 171:../esc_hw_eep.c ****          eep_next_block = NULL;
 563              	 .loc 3 171 0
 564 007c 244B     	 ldr r3,.L17+20
 565 007e 0022     	 movs r2,#0
 566 0080 1A60     	 str r2,[r3]
 172:../esc_hw_eep.c **** 
 173:../esc_hw_eep.c ****          EEP_BUSY_LED_OFF();
 567              	 .loc 3 173 0
 568 0082 2848     	 ldr r0,.L17+40
 569 0084 0921     	 movs r1,#9
 570 0086 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 174:../esc_hw_eep.c ****       }
 175:../esc_hw_eep.c **** 
 176:../esc_hw_eep.c ****       return;
 571              	 .loc 3 176 0
 572 008a 34E0     	 b .L12
 573              	.L15:
 574 008c 33E0     	 b .L12
 575              	.L14:
 177:../esc_hw_eep.c ****    }
 178:../esc_hw_eep.c **** 
 179:../esc_hw_eep.c ****    /* start write of new block */
 180:../esc_hw_eep.c ****    if (eep_write_req) {
 576              	 .loc 3 180 0
 577 008e 1F4B     	 ldr r3,.L17+16
 578 0090 1B78     	 ldrb r3,[r3]
 579 0092 002B     	 cmp r3,#0
 580 0094 2FD0     	 beq .L12
 181:../esc_hw_eep.c ****       EEP_BUSY_LED_ON();
 581              	 .loc 3 181 0
 582 0096 2348     	 ldr r0,.L17+40
 583 0098 0921     	 movs r1,#9
 584 009a FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 182:../esc_hw_eep.c **** 
 183:../esc_hw_eep.c ****       /* get next block */
 184:../esc_hw_eep.c ****       eep_next_block = get_next_block(eep_curr_block);
 585              	 .loc 3 184 0
 586 009e 204B     	 ldr r3,.L17+36
 587 00a0 1B68     	 ldr r3,[r3]
 588 00a2 1846     	 mov r0,r3
 589 00a4 FFF7FEFF 	 bl get_next_block
 590 00a8 0246     	 mov r2,r0
 591 00aa 194B     	 ldr r3,.L17+20
 592 00ac 1A60     	 str r2,[r3]
 185:../esc_hw_eep.c **** 
 186:../esc_hw_eep.c ****       /* copy data */
 187:../esc_hw_eep.c ****       memcpy(eep_write_buf.data, eep_buf, EEP_EMU_BYTES);
 593              	 .loc 3 187 0
 594 00ae 1E4B     	 ldr r3,.L17+44
 595 00b0 1E4A     	 ldr r2,.L17+48
 596 00b2 0833     	 adds r3,r3,#8
 597 00b4 1146     	 mov r1,r2
 598 00b6 4FF47862 	 mov r2,#3968
 599 00ba 1846     	 mov r0,r3
 600 00bc FFF7FEFF 	 bl memcpy
 188:../esc_hw_eep.c **** 
 189:../esc_hw_eep.c ****       /* setup header */
 190:../esc_hw_eep.c ****       eep_write_buf.header.seq = eep_curr_block->header.seq + 1;
 601              	 .loc 3 190 0
 602 00c0 174B     	 ldr r3,.L17+36
 603 00c2 1B68     	 ldr r3,[r3]
 604 00c4 1B68     	 ldr r3,[r3]
 605 00c6 0133     	 adds r3,r3,#1
 606 00c8 174A     	 ldr r2,.L17+44
 607 00ca 1360     	 str r3,[r2]
 191:../esc_hw_eep.c ****       eep_write_buf.header.crc = crc32 (eep_write_buf.data, EEP_DATA_BYTES);
 608              	 .loc 3 191 0
 609 00cc 1848     	 ldr r0,.L17+52
 610 00ce 40F6F871 	 movw r1,#4088
 611 00d2 FFF7FEFF 	 bl crc32
 612 00d6 0246     	 mov r2,r0
 613 00d8 134B     	 ldr r3,.L17+44
 614 00da 5A60     	 str r2,[r3,#4]
 192:../esc_hw_eep.c **** 
 193:../esc_hw_eep.c ****       /* initialize write position */
 194:../esc_hw_eep.c ****       eep_write_src = (uint32_t *) &eep_write_buf;
 615              	 .loc 3 194 0
 616 00dc 0E4B     	 ldr r3,.L17+28
 617 00de 124A     	 ldr r2,.L17+44
 618 00e0 1A60     	 str r2,[r3]
 195:../esc_hw_eep.c ****       eep_write_dst = (uint32_t *) eep_next_block;
 619              	 .loc 3 195 0
 620 00e2 0B4B     	 ldr r3,.L17+20
 621 00e4 1B68     	 ldr r3,[r3]
 622 00e6 0B4A     	 ldr r2,.L17+24
 623 00e8 1360     	 str r3,[r2]
 196:../esc_hw_eep.c ****       eep_write_page = 0;
 624              	 .loc 3 196 0
 625 00ea 0C4B     	 ldr r3,.L17+32
 626 00ec 0022     	 movs r2,#0
 627 00ee 1A60     	 str r2,[r3]
 197:../esc_hw_eep.c **** 
 198:../esc_hw_eep.c ****       /* reset write request */
 199:../esc_hw_eep.c ****       eep_write_req = 0;
 628              	 .loc 3 199 0
 629 00f0 064B     	 ldr r3,.L17+16
 630 00f2 0022     	 movs r2,#0
 631 00f4 1A70     	 strb r2,[r3]
 632              	.L12:
 200:../esc_hw_eep.c ****    }
 201:../esc_hw_eep.c **** }
 633              	 .loc 3 201 0
 634 00f6 0837     	 adds r7,r7,#8
 635              	.LCFI35:
 636              	 .cfi_def_cfa_offset 8
 637 00f8 BD46     	 mov sp,r7
 638              	.LCFI36:
 639              	 .cfi_def_cfa_register 13
 640              	 
 641 00fa 80BD     	 pop {r7,pc}
 642              	.L18:
 643              	 .align 2
 644              	.L17:
 645 00fc 00000000 	 .word eep_buf_dirty
 646 0100 00000000 	 .word ESCvar
 647 0104 00000000 	 .word eep_last_write
 648 0108 00E1F505 	 .word 100000000
 649 010c 00000000 	 .word eep_write_req
 650 0110 00000000 	 .word eep_next_block
 651 0114 00000000 	 .word eep_write_dst
 652 0118 00000000 	 .word eep_write_src
 653 011c 00000000 	 .word eep_write_page
 654 0120 00000000 	 .word eep_curr_block
 655 0124 00850248 	 .word 1208124672
 656 0128 00000000 	 .word eep_write_buf
 657 012c 00000000 	 .word eep_buf
 658 0130 08000000 	 .word eep_write_buf+8
 659              	 .cfi_endproc
 660              	.LFE169:
 662              	 .section .text.EEP_read,"ax",%progbits
 663              	 .align 2
 664              	 .global EEP_read
 665              	 .thumb
 666              	 .thumb_func
 668              	EEP_read:
 669              	.LFB170:
 202:../esc_hw_eep.c **** 
 203:../esc_hw_eep.c **** /** EEPROM read function
 204:../esc_hw_eep.c ****  *
 205:../esc_hw_eep.c ****  * @param[in]   addr     = EEPROM byte address
 206:../esc_hw_eep.c ****  * @param[out]  data     = pointer to buffer of output data
 207:../esc_hw_eep.c ****  * @param[in]   count    = number of bytes to read
 208:../esc_hw_eep.c ****  * @return 0 on OK, 1 on error
 209:../esc_hw_eep.c ****  */
 210:../esc_hw_eep.c **** int8_t EEP_read (uint32_t addr, uint8_t *data, uint16_t count)
 211:../esc_hw_eep.c **** {
 670              	 .loc 3 211 0
 671              	 .cfi_startproc
 672              	 
 673              	 
 674 0000 80B5     	 push {r7,lr}
 675              	.LCFI37:
 676              	 .cfi_def_cfa_offset 8
 677              	 .cfi_offset 7,-8
 678              	 .cfi_offset 14,-4
 679 0002 84B0     	 sub sp,sp,#16
 680              	.LCFI38:
 681              	 .cfi_def_cfa_offset 24
 682 0004 00AF     	 add r7,sp,#0
 683              	.LCFI39:
 684              	 .cfi_def_cfa_register 7
 685 0006 F860     	 str r0,[r7,#12]
 686 0008 B960     	 str r1,[r7,#8]
 687 000a 1346     	 mov r3,r2
 688 000c FB80     	 strh r3,[r7,#6]
 212:../esc_hw_eep.c ****    if (addr >= EEP_EMU_BYTES) {
 689              	 .loc 3 212 0
 690 000e FB68     	 ldr r3,[r7,#12]
 691 0010 B3F5786F 	 cmp r3,#3968
 692 0014 01D3     	 bcc .L20
 213:../esc_hw_eep.c ****       return 1;
 693              	 .loc 3 213 0
 694 0016 0123     	 movs r3,#1
 695 0018 09E0     	 b .L21
 696              	.L20:
 214:../esc_hw_eep.c ****    }
 215:../esc_hw_eep.c **** 
 216:../esc_hw_eep.c ****    /* read data from ram buffer */
 217:../esc_hw_eep.c ****    memcpy(data, eep_buf + addr, count);
 697              	 .loc 3 217 0
 698 001a FB68     	 ldr r3,[r7,#12]
 699 001c 064A     	 ldr r2,.L22
 700 001e 1A44     	 add r2,r2,r3
 701 0020 FB88     	 ldrh r3,[r7,#6]
 702 0022 B868     	 ldr r0,[r7,#8]
 703 0024 1146     	 mov r1,r2
 704 0026 1A46     	 mov r2,r3
 705 0028 FFF7FEFF 	 bl memcpy
 218:../esc_hw_eep.c **** 
 219:../esc_hw_eep.c ****    return 0;
 706              	 .loc 3 219 0
 707 002c 0023     	 movs r3,#0
 708              	.L21:
 709 002e 5BB2     	 sxtb r3,r3
 220:../esc_hw_eep.c **** }
 710              	 .loc 3 220 0
 711 0030 1846     	 mov r0,r3
 712 0032 1037     	 adds r7,r7,#16
 713              	.LCFI40:
 714              	 .cfi_def_cfa_offset 8
 715 0034 BD46     	 mov sp,r7
 716              	.LCFI41:
 717              	 .cfi_def_cfa_register 13
 718              	 
 719 0036 80BD     	 pop {r7,pc}
 720              	.L23:
 721              	 .align 2
 722              	.L22:
 723 0038 00000000 	 .word eep_buf
 724              	 .cfi_endproc
 725              	.LFE170:
 727              	 .section .text.EEP_write,"ax",%progbits
 728              	 .align 2
 729              	 .global EEP_write
 730              	 .thumb
 731              	 .thumb_func
 733              	EEP_write:
 734              	.LFB171:
 221:../esc_hw_eep.c **** 
 222:../esc_hw_eep.c **** /** EEPROM write function
 223:../esc_hw_eep.c ****  *
 224:../esc_hw_eep.c ****  * @param[in]   addr     = EEPROM byte address
 225:../esc_hw_eep.c ****  * @param[out]  data     = pointer to buffer of input data
 226:../esc_hw_eep.c ****  * @param[in]   count    = number of bytes to write
 227:../esc_hw_eep.c ****  * @return 0 on OK, 1 on error
 228:../esc_hw_eep.c ****  */
 229:../esc_hw_eep.c **** int8_t EEP_write (uint32_t addr, uint8_t *data, uint16_t count)
 230:../esc_hw_eep.c **** {
 735              	 .loc 3 230 0
 736              	 .cfi_startproc
 737              	 
 738              	 
 739 0000 80B5     	 push {r7,lr}
 740              	.LCFI42:
 741              	 .cfi_def_cfa_offset 8
 742              	 .cfi_offset 7,-8
 743              	 .cfi_offset 14,-4
 744 0002 84B0     	 sub sp,sp,#16
 745              	.LCFI43:
 746              	 .cfi_def_cfa_offset 24
 747 0004 00AF     	 add r7,sp,#0
 748              	.LCFI44:
 749              	 .cfi_def_cfa_register 7
 750 0006 F860     	 str r0,[r7,#12]
 751 0008 B960     	 str r1,[r7,#8]
 752 000a 1346     	 mov r3,r2
 753 000c FB80     	 strh r3,[r7,#6]
 231:../esc_hw_eep.c ****    if (addr >= EEP_EMU_BYTES) {
 754              	 .loc 3 231 0
 755 000e FB68     	 ldr r3,[r7,#12]
 756 0010 B3F5786F 	 cmp r3,#3968
 757 0014 01D3     	 bcc .L25
 232:../esc_hw_eep.c ****       return 1;
 758              	 .loc 3 232 0
 759 0016 0123     	 movs r3,#1
 760 0018 14E0     	 b .L26
 761              	.L25:
 233:../esc_hw_eep.c ****    }
 234:../esc_hw_eep.c **** 
 235:../esc_hw_eep.c ****    /* write data to ram buffer */
 236:../esc_hw_eep.c ****    memcpy(eep_buf + addr, data, count);
 762              	 .loc 3 236 0
 763 001a FB68     	 ldr r3,[r7,#12]
 764 001c 0C4A     	 ldr r2,.L27
 765 001e 1A44     	 add r2,r2,r3
 766 0020 FB88     	 ldrh r3,[r7,#6]
 767 0022 1046     	 mov r0,r2
 768 0024 B968     	 ldr r1,[r7,#8]
 769 0026 1A46     	 mov r2,r3
 770 0028 FFF7FEFF 	 bl memcpy
 237:../esc_hw_eep.c **** 
 238:../esc_hw_eep.c ****    /* mark buffer as dirty */
 239:../esc_hw_eep.c ****    eep_buf_dirty = 1;
 771              	 .loc 3 239 0
 772 002c 094B     	 ldr r3,.L27+4
 773 002e 0122     	 movs r2,#1
 774 0030 1A70     	 strb r2,[r3]
 240:../esc_hw_eep.c ****    eep_write_req = 0;
 775              	 .loc 3 240 0
 776 0032 094B     	 ldr r3,.L27+8
 777 0034 0022     	 movs r2,#0
 778 0036 1A70     	 strb r2,[r3]
 241:../esc_hw_eep.c ****    eep_last_write = ESCvar.Time;
 779              	 .loc 3 241 0
 780 0038 084B     	 ldr r3,.L27+12
 781 003a D3F8CC30 	 ldr r3,[r3,#204]
 782 003e 084A     	 ldr r2,.L27+16
 783 0040 1360     	 str r3,[r2]
 242:../esc_hw_eep.c **** 
 243:../esc_hw_eep.c ****    return 0;
 784              	 .loc 3 243 0
 785 0042 0023     	 movs r3,#0
 786              	.L26:
 787 0044 5BB2     	 sxtb r3,r3
 244:../esc_hw_eep.c **** }
 788              	 .loc 3 244 0
 789 0046 1846     	 mov r0,r3
 790 0048 1037     	 adds r7,r7,#16
 791              	.LCFI45:
 792              	 .cfi_def_cfa_offset 8
 793 004a BD46     	 mov sp,r7
 794              	.LCFI46:
 795              	 .cfi_def_cfa_register 13
 796              	 
 797 004c 80BD     	 pop {r7,pc}
 798              	.L28:
 799 004e 00BF     	 .align 2
 800              	.L27:
 801 0050 00000000 	 .word eep_buf
 802 0054 00000000 	 .word eep_buf_dirty
 803 0058 00000000 	 .word eep_write_req
 804 005c 00000000 	 .word ESCvar
 805 0060 00000000 	 .word eep_last_write
 806              	 .cfi_endproc
 807              	.LFE171:
 809              	 .section .text.init_flash_data,"ax",%progbits
 810              	 .align 2
 811              	 .thumb
 812              	 .thumb_func
 814              	init_flash_data:
 815              	.LFB172:
 245:../esc_hw_eep.c **** 
 246:../esc_hw_eep.c **** static void init_flash_data(void)
 247:../esc_hw_eep.c **** {
 816              	 .loc 3 247 0
 817              	 .cfi_startproc
 818              	 
 819              	 
 820 0000 80B5     	 push {r7,lr}
 821              	.LCFI47:
 822              	 .cfi_def_cfa_offset 8
 823              	 .cfi_offset 7,-8
 824              	 .cfi_offset 14,-4
 825 0002 84B0     	 sub sp,sp,#16
 826              	.LCFI48:
 827              	 .cfi_def_cfa_offset 24
 828 0004 00AF     	 add r7,sp,#0
 829              	.LCFI49:
 830              	 .cfi_def_cfa_register 7
 248:../esc_hw_eep.c ****    uint32_t i;
 249:../esc_hw_eep.c ****    const uint32_t *src;
 250:../esc_hw_eep.c ****    uint32_t *dst;
 251:../esc_hw_eep.c **** 
 252:../esc_hw_eep.c ****    /* erase both sectors */
 253:../esc_hw_eep.c ****    XMC_FLASH_EraseSector(EEP_SECTOR_A);
 831              	 .loc 3 253 0
 832 0006 1E48     	 ldr r0,.L32
 833 0008 FFF7FEFF 	 bl XMC_FLASH_EraseSector
 254:../esc_hw_eep.c ****    XMC_FLASH_EraseSector(EEP_SECTOR_B);
 834              	 .loc 3 254 0
 835 000c 1D48     	 ldr r0,.L32+4
 836 000e FFF7FEFF 	 bl XMC_FLASH_EraseSector
 255:../esc_hw_eep.c **** 
 256:../esc_hw_eep.c ****    /* copy default data to write buffer */
 257:../esc_hw_eep.c ****    memcpy(eep_write_buf.data, SII_EE_DEFLT, (SII_EE_DEFLT_SIZE < EEP_EMU_BYTES) ? SII_EE_DEFLT_SIZE
 837              	 .loc 3 257 0
 838 0012 1D4A     	 ldr r2,.L32+8
 839 0014 1D4B     	 ldr r3,.L32+12
 840 0016 D31A     	 subs r3,r2,r3
 841 0018 B3F5786F 	 cmp r3,#3968
 842 001c 28BF     	 it cs
 843 001e 4FF47863 	 movcs r3,#3968
 844 0022 1B48     	 ldr r0,.L32+16
 845 0024 1949     	 ldr r1,.L32+12
 846 0026 1A46     	 mov r2,r3
 847 0028 FFF7FEFF 	 bl memcpy
 258:../esc_hw_eep.c **** 
 259:../esc_hw_eep.c ****    /* setup header data */
 260:../esc_hw_eep.c ****    eep_write_buf.header.seq = 0;
 848              	 .loc 3 260 0
 849 002c 194B     	 ldr r3,.L32+20
 850 002e 0022     	 movs r2,#0
 851 0030 1A60     	 str r2,[r3]
 261:../esc_hw_eep.c ****    eep_write_buf.header.crc = crc32 (eep_write_buf.data, EEP_DATA_BYTES);
 852              	 .loc 3 261 0
 853 0032 1748     	 ldr r0,.L32+16
 854 0034 40F6F871 	 movw r1,#4088
 855 0038 FFF7FEFF 	 bl crc32
 856 003c 0246     	 mov r2,r0
 857 003e 154B     	 ldr r3,.L32+20
 858 0040 5A60     	 str r2,[r3,#4]
 262:../esc_hw_eep.c **** 
 263:../esc_hw_eep.c ****    /* write pages */
 264:../esc_hw_eep.c ****    src = (const uint32_t *) &eep_write_buf;
 859              	 .loc 3 264 0
 860 0042 144B     	 ldr r3,.L32+20
 861 0044 BB60     	 str r3,[r7,#8]
 265:../esc_hw_eep.c ****    dst = EEP_SECTOR_A;
 862              	 .loc 3 265 0
 863 0046 0E4B     	 ldr r3,.L32
 864 0048 7B60     	 str r3,[r7,#4]
 266:../esc_hw_eep.c ****    for (i = 0; i < EEP_PAGES_PER_BLOCK; i++) {
 865              	 .loc 3 266 0
 866 004a 0023     	 movs r3,#0
 867 004c FB60     	 str r3,[r7,#12]
 868 004e 0EE0     	 b .L30
 869              	.L31:
 267:../esc_hw_eep.c ****       XMC_FLASH_ProgramPage(dst, src);
 870              	 .loc 3 267 0 discriminator 3
 871 0050 7868     	 ldr r0,[r7,#4]
 872 0052 B968     	 ldr r1,[r7,#8]
 873 0054 FFF7FEFF 	 bl XMC_FLASH_ProgramPage
 268:../esc_hw_eep.c ****       src += XMC_FLASH_WORDS_PER_PAGE;
 874              	 .loc 3 268 0 discriminator 3
 875 0058 BB68     	 ldr r3,[r7,#8]
 876 005a 03F58073 	 add r3,r3,#256
 877 005e BB60     	 str r3,[r7,#8]
 269:../esc_hw_eep.c ****       dst += XMC_FLASH_WORDS_PER_PAGE;
 878              	 .loc 3 269 0 discriminator 3
 879 0060 7B68     	 ldr r3,[r7,#4]
 880 0062 03F58073 	 add r3,r3,#256
 881 0066 7B60     	 str r3,[r7,#4]
 266:../esc_hw_eep.c ****       XMC_FLASH_ProgramPage(dst, src);
 882              	 .loc 3 266 0 discriminator 3
 883 0068 FB68     	 ldr r3,[r7,#12]
 884 006a 0133     	 adds r3,r3,#1
 885 006c FB60     	 str r3,[r7,#12]
 886              	.L30:
 266:../esc_hw_eep.c ****       XMC_FLASH_ProgramPage(dst, src);
 887              	 .loc 3 266 0 is_stmt 0 discriminator 1
 888 006e FB68     	 ldr r3,[r7,#12]
 889 0070 0F2B     	 cmp r3,#15
 890 0072 EDD9     	 bls .L31
 270:../esc_hw_eep.c ****    }
 271:../esc_hw_eep.c **** 
 272:../esc_hw_eep.c ****    /* set current block */
 273:../esc_hw_eep.c ****    eep_curr_block = (eep_block_t *) EEP_SECTOR_A;
 891              	 .loc 3 273 0 is_stmt 1
 892 0074 084B     	 ldr r3,.L32+24
 893 0076 024A     	 ldr r2,.L32
 894 0078 1A60     	 str r2,[r3]
 274:../esc_hw_eep.c **** }
 895              	 .loc 3 274 0
 896 007a 1037     	 adds r7,r7,#16
 897              	.LCFI50:
 898              	 .cfi_def_cfa_offset 8
 899 007c BD46     	 mov sp,r7
 900              	.LCFI51:
 901              	 .cfi_def_cfa_register 13
 902              	 
 903 007e 80BD     	 pop {r7,pc}
 904              	.L33:
 905              	 .align 2
 906              	.L32:
 907 0080 0000180C 	 .word 202899456
 908 0084 00001C0C 	 .word 203161600
 909 0088 00000000 	 .word _binary_sii_eeprom_bin_end
 910 008c 00000000 	 .word _binary_sii_eeprom_bin_start
 911 0090 08000000 	 .word eep_write_buf+8
 912 0094 00000000 	 .word eep_write_buf
 913 0098 00000000 	 .word eep_curr_block
 914              	 .cfi_endproc
 915              	.LFE172:
 917              	 .section .text.find_latest_block,"ax",%progbits
 918              	 .align 2
 919              	 .thumb
 920              	 .thumb_func
 922              	find_latest_block:
 923              	.LFB173:
 275:../esc_hw_eep.c **** 
 276:../esc_hw_eep.c **** static void find_latest_block(eep_block_t *addr)
 277:../esc_hw_eep.c **** {
 924              	 .loc 3 277 0
 925              	 .cfi_startproc
 926              	 
 927              	 
 928 0000 80B5     	 push {r7,lr}
 929              	.LCFI52:
 930              	 .cfi_def_cfa_offset 8
 931              	 .cfi_offset 7,-8
 932              	 .cfi_offset 14,-4
 933 0002 84B0     	 sub sp,sp,#16
 934              	.LCFI53:
 935              	 .cfi_def_cfa_offset 24
 936 0004 00AF     	 add r7,sp,#0
 937              	.LCFI54:
 938              	 .cfi_def_cfa_register 7
 939 0006 7860     	 str r0,[r7,#4]
 278:../esc_hw_eep.c ****    uint32_t blk, crc;
 279:../esc_hw_eep.c **** 
 280:../esc_hw_eep.c ****    for (blk = 0; blk < EPP_BLOCKS_PER_SECT; blk++, addr++) {
 940              	 .loc 3 280 0
 941 0008 0023     	 movs r3,#0
 942 000a FB60     	 str r3,[r7,#12]
 943 000c 23E0     	 b .L35
 944              	.L39:
 281:../esc_hw_eep.c ****       /* check crc, skip invalid blocks */
 282:../esc_hw_eep.c ****       crc = crc32 (addr->data, EEP_DATA_BYTES);
 945              	 .loc 3 282 0
 946 000e 7B68     	 ldr r3,[r7,#4]
 947 0010 0833     	 adds r3,r3,#8
 948 0012 1846     	 mov r0,r3
 949 0014 40F6F871 	 movw r1,#4088
 950 0018 FFF7FEFF 	 bl crc32
 951 001c B860     	 str r0,[r7,#8]
 283:../esc_hw_eep.c ****       if (addr->header.crc != crc) {
 952              	 .loc 3 283 0
 953 001e 7B68     	 ldr r3,[r7,#4]
 954 0020 5A68     	 ldr r2,[r3,#4]
 955 0022 BB68     	 ldr r3,[r7,#8]
 956 0024 9A42     	 cmp r2,r3
 957 0026 00D0     	 beq .L36
 284:../esc_hw_eep.c ****          continue;
 958              	 .loc 3 284 0
 959 0028 0EE0     	 b .L37
 960              	.L36:
 285:../esc_hw_eep.c ****       }
 286:../esc_hw_eep.c **** 
 287:../esc_hw_eep.c ****       /* check sequence number and update last pointer */
 288:../esc_hw_eep.c ****       if (eep_curr_block == NULL || (addr->header.seq - eep_curr_block->header.seq) > 0) {
 961              	 .loc 3 288 0
 962 002a 0E4B     	 ldr r3,.L40
 963 002c 1B68     	 ldr r3,[r3]
 964 002e 002B     	 cmp r3,#0
 965 0030 07D0     	 beq .L38
 966              	 .loc 3 288 0 is_stmt 0 discriminator 1
 967 0032 7B68     	 ldr r3,[r7,#4]
 968 0034 1A68     	 ldr r2,[r3]
 969 0036 0B4B     	 ldr r3,.L40
 970 0038 1B68     	 ldr r3,[r3]
 971 003a 1B68     	 ldr r3,[r3]
 972 003c D31A     	 subs r3,r2,r3
 973 003e 002B     	 cmp r3,#0
 974 0040 02DD     	 ble .L37
 975              	.L38:
 289:../esc_hw_eep.c ****          eep_curr_block = addr;
 976              	 .loc 3 289 0 is_stmt 1
 977 0042 084A     	 ldr r2,.L40
 978 0044 7B68     	 ldr r3,[r7,#4]
 979 0046 1360     	 str r3,[r2]
 980              	.L37:
 280:../esc_hw_eep.c ****       /* check crc, skip invalid blocks */
 981              	 .loc 3 280 0 discriminator 2
 982 0048 FB68     	 ldr r3,[r7,#12]
 983 004a 0133     	 adds r3,r3,#1
 984 004c FB60     	 str r3,[r7,#12]
 985 004e 7B68     	 ldr r3,[r7,#4]
 986 0050 03F58053 	 add r3,r3,#4096
 987 0054 7B60     	 str r3,[r7,#4]
 988              	.L35:
 280:../esc_hw_eep.c ****       /* check crc, skip invalid blocks */
 989              	 .loc 3 280 0 is_stmt 0 discriminator 1
 990 0056 FB68     	 ldr r3,[r7,#12]
 991 0058 3F2B     	 cmp r3,#63
 992 005a D8D9     	 bls .L39
 290:../esc_hw_eep.c ****       }
 291:../esc_hw_eep.c ****    }
 292:../esc_hw_eep.c **** }
 993              	 .loc 3 292 0 is_stmt 1
 994 005c 1037     	 adds r7,r7,#16
 995              	.LCFI55:
 996              	 .cfi_def_cfa_offset 8
 997 005e BD46     	 mov sp,r7
 998              	.LCFI56:
 999              	 .cfi_def_cfa_register 13
 1000              	 
 1001 0060 80BD     	 pop {r7,pc}
 1002              	.L41:
 1003 0062 00BF     	 .align 2
 1004              	.L40:
 1005 0064 00000000 	 .word eep_curr_block
 1006              	 .cfi_endproc
 1007              	.LFE173:
 1009              	 .section .text.get_next_block,"ax",%progbits
 1010              	 .align 2
 1011              	 .thumb
 1012              	 .thumb_func
 1014              	get_next_block:
 1015              	.LFB174:
 293:../esc_hw_eep.c **** 
 294:../esc_hw_eep.c **** static eep_block_t *get_next_block(eep_block_t *block)
 295:../esc_hw_eep.c **** {
 1016              	 .loc 3 295 0
 1017              	 .cfi_startproc
 1018              	 
 1019              	 
 1020 0000 80B5     	 push {r7,lr}
 1021              	.LCFI57:
 1022              	 .cfi_def_cfa_offset 8
 1023              	 .cfi_offset 7,-8
 1024              	 .cfi_offset 14,-4
 1025 0002 84B0     	 sub sp,sp,#16
 1026              	.LCFI58:
 1027              	 .cfi_def_cfa_offset 24
 1028 0004 00AF     	 add r7,sp,#0
 1029              	.LCFI59:
 1030              	 .cfi_def_cfa_register 7
 1031 0006 7860     	 str r0,[r7,#4]
 296:../esc_hw_eep.c ****    /* simple case: new block fits in current sector */
 297:../esc_hw_eep.c ****    uint32_t sect_offset = ((uint32_t)block) & (EEP_BYTES_PER_SECTOR - 1);
 1032              	 .loc 3 297 0
 1033 0008 7B68     	 ldr r3,[r7,#4]
 1034 000a C3F31103 	 ubfx r3,r3,#0,#18
 1035 000e FB60     	 str r3,[r7,#12]
 298:../esc_hw_eep.c ****    if ((sect_offset + EEP_BYTES_PER_BLOCK) < EEP_BYTES_PER_SECTOR) {
 1036              	 .loc 3 298 0
 1037 0010 FB68     	 ldr r3,[r7,#12]
 1038 0012 03F58053 	 add r3,r3,#4096
 1039 0016 B3F5802F 	 cmp r3,#262144
 1040 001a 03D2     	 bcs .L43
 299:../esc_hw_eep.c ****       return block + 1;
 1041              	 .loc 3 299 0
 1042 001c 7B68     	 ldr r3,[r7,#4]
 1043 001e 03F58053 	 add r3,r3,#4096
 1044 0022 03E0     	 b .L44
 1045              	.L43:
 300:../esc_hw_eep.c ****    }
 301:../esc_hw_eep.c **** 
 302:../esc_hw_eep.c ****    /* use other sector */
 303:../esc_hw_eep.c ****    return cleanup_unused_sect(block);
 1046              	 .loc 3 303 0
 1047 0024 7868     	 ldr r0,[r7,#4]
 1048 0026 FFF7FEFF 	 bl cleanup_unused_sect
 1049 002a 0346     	 mov r3,r0
 1050              	.L44:
 304:../esc_hw_eep.c **** }
 1051              	 .loc 3 304 0
 1052 002c 1846     	 mov r0,r3
 1053 002e 1037     	 adds r7,r7,#16
 1054              	.LCFI60:
 1055              	 .cfi_def_cfa_offset 8
 1056 0030 BD46     	 mov sp,r7
 1057              	.LCFI61:
 1058              	 .cfi_def_cfa_register 13
 1059              	 
 1060 0032 80BD     	 pop {r7,pc}
 1061              	 .cfi_endproc
 1062              	.LFE174:
 1064              	 .section .text.cleanup_unused_sect,"ax",%progbits
 1065              	 .align 2
 1066              	 .thumb
 1067              	 .thumb_func
 1069              	cleanup_unused_sect:
 1070              	.LFB175:
 305:../esc_hw_eep.c **** 
 306:../esc_hw_eep.c **** static eep_block_t *cleanup_unused_sect(eep_block_t *block)
 307:../esc_hw_eep.c **** {
 1071              	 .loc 3 307 0
 1072              	 .cfi_startproc
 1073              	 
 1074              	 
 1075 0000 80B5     	 push {r7,lr}
 1076              	.LCFI62:
 1077              	 .cfi_def_cfa_offset 8
 1078              	 .cfi_offset 7,-8
 1079              	 .cfi_offset 14,-4
 1080 0002 84B0     	 sub sp,sp,#16
 1081              	.LCFI63:
 1082              	 .cfi_def_cfa_offset 24
 1083 0004 00AF     	 add r7,sp,#0
 1084              	.LCFI64:
 1085              	 .cfi_def_cfa_register 7
 1086 0006 7860     	 str r0,[r7,#4]
 308:../esc_hw_eep.c ****    /* get other sector */
 309:../esc_hw_eep.c ****    uint32_t *sect_addr = (uint32_t *) (((uint32_t)block) & ~(EEP_BYTES_PER_SECTOR - 1));
 1087              	 .loc 3 309 0
 1088 0008 7B68     	 ldr r3,[r7,#4]
 1089 000a 9B0C     	 lsrs r3,r3,#18
 1090 000c 9B04     	 lsls r3,r3,#18
 1091 000e FB60     	 str r3,[r7,#12]
 310:../esc_hw_eep.c ****    if (sect_addr == EEP_SECTOR_A) {
 1092              	 .loc 3 310 0
 1093 0010 FB68     	 ldr r3,[r7,#12]
 1094 0012 0B4A     	 ldr r2,.L50
 1095 0014 9342     	 cmp r3,r2
 1096 0016 02D1     	 bne .L46
 311:../esc_hw_eep.c ****       sect_addr = EEP_SECTOR_B;
 1097              	 .loc 3 311 0
 1098 0018 0A4B     	 ldr r3,.L50+4
 1099 001a FB60     	 str r3,[r7,#12]
 1100 001c 01E0     	 b .L47
 1101              	.L46:
 312:../esc_hw_eep.c ****    } else {
 313:../esc_hw_eep.c ****       sect_addr = EEP_SECTOR_A;
 1102              	 .loc 3 313 0
 1103 001e 084B     	 ldr r3,.L50
 1104 0020 FB60     	 str r3,[r7,#12]
 1105              	.L47:
 314:../esc_hw_eep.c ****    }
 315:../esc_hw_eep.c **** 
 316:../esc_hw_eep.c ****    /* check if sector is empty, erase if not */
 317:../esc_hw_eep.c ****    if (!is_sector_empty(sect_addr)) {
 1106              	 .loc 3 317 0
 1107 0022 F868     	 ldr r0,[r7,#12]
 1108 0024 FFF7FEFF 	 bl is_sector_empty
 1109 0028 0346     	 mov r3,r0
 1110 002a 002B     	 cmp r3,#0
 1111 002c 02D1     	 bne .L48
 318:../esc_hw_eep.c ****       XMC_FLASH_EraseSector(sect_addr);
 1112              	 .loc 3 318 0
 1113 002e F868     	 ldr r0,[r7,#12]
 1114 0030 FFF7FEFF 	 bl XMC_FLASH_EraseSector
 1115              	.L48:
 319:../esc_hw_eep.c ****    }
 320:../esc_hw_eep.c **** 
 321:../esc_hw_eep.c ****    return (eep_block_t *) sect_addr;
 1116              	 .loc 3 321 0
 1117 0034 FB68     	 ldr r3,[r7,#12]
 322:../esc_hw_eep.c **** }
 1118              	 .loc 3 322 0
 1119 0036 1846     	 mov r0,r3
 1120 0038 1037     	 adds r7,r7,#16
 1121              	.LCFI65:
 1122              	 .cfi_def_cfa_offset 8
 1123 003a BD46     	 mov sp,r7
 1124              	.LCFI66:
 1125              	 .cfi_def_cfa_register 13
 1126              	 
 1127 003c 80BD     	 pop {r7,pc}
 1128              	.L51:
 1129 003e 00BF     	 .align 2
 1130              	.L50:
 1131 0040 0000180C 	 .word 202899456
 1132 0044 00001C0C 	 .word 203161600
 1133              	 .cfi_endproc
 1134              	.LFE175:
 1136              	 .section .text.is_sector_empty,"ax",%progbits
 1137              	 .align 2
 1138              	 .thumb
 1139              	 .thumb_func
 1141              	is_sector_empty:
 1142              	.LFB176:
 323:../esc_hw_eep.c **** 
 324:../esc_hw_eep.c **** static int32_t is_sector_empty(uint32_t *addr)
 325:../esc_hw_eep.c **** {
 1143              	 .loc 3 325 0
 1144              	 .cfi_startproc
 1145              	 
 1146              	 
 1147              	 
 1148 0000 80B4     	 push {r7}
 1149              	.LCFI67:
 1150              	 .cfi_def_cfa_offset 4
 1151              	 .cfi_offset 7,-4
 1152 0002 85B0     	 sub sp,sp,#20
 1153              	.LCFI68:
 1154              	 .cfi_def_cfa_offset 24
 1155 0004 00AF     	 add r7,sp,#0
 1156              	.LCFI69:
 1157              	 .cfi_def_cfa_register 7
 1158 0006 7860     	 str r0,[r7,#4]
 326:../esc_hw_eep.c ****    uint32_t i;
 327:../esc_hw_eep.c **** 
 328:../esc_hw_eep.c ****    /* check for all bytes erased */
 329:../esc_hw_eep.c ****    for (i=0; i<EEP_BYTES_PER_SECTOR; i+=sizeof(uint32_t), addr++) {
 1159              	 .loc 3 329 0
 1160 0008 0023     	 movs r3,#0
 1161 000a FB60     	 str r3,[r7,#12]
 1162 000c 0BE0     	 b .L53
 1163              	.L56:
 330:../esc_hw_eep.c ****       if (*addr != 0) {
 1164              	 .loc 3 330 0
 1165 000e 7B68     	 ldr r3,[r7,#4]
 1166 0010 1B68     	 ldr r3,[r3]
 1167 0012 002B     	 cmp r3,#0
 1168 0014 01D0     	 beq .L54
 331:../esc_hw_eep.c ****         return 0;
 1169              	 .loc 3 331 0
 1170 0016 0023     	 movs r3,#0
 1171 0018 0AE0     	 b .L55
 1172              	.L54:
 329:../esc_hw_eep.c ****       if (*addr != 0) {
 1173              	 .loc 3 329 0 discriminator 2
 1174 001a FB68     	 ldr r3,[r7,#12]
 1175 001c 0433     	 adds r3,r3,#4
 1176 001e FB60     	 str r3,[r7,#12]
 1177 0020 7B68     	 ldr r3,[r7,#4]
 1178 0022 0433     	 adds r3,r3,#4
 1179 0024 7B60     	 str r3,[r7,#4]
 1180              	.L53:
 329:../esc_hw_eep.c ****       if (*addr != 0) {
 1181              	 .loc 3 329 0 is_stmt 0 discriminator 1
 1182 0026 FB68     	 ldr r3,[r7,#12]
 1183 0028 B3F5802F 	 cmp r3,#262144
 1184 002c EFD3     	 bcc .L56
 332:../esc_hw_eep.c ****       }
 333:../esc_hw_eep.c ****    }
 334:../esc_hw_eep.c ****    return 1;
 1185              	 .loc 3 334 0 is_stmt 1
 1186 002e 0123     	 movs r3,#1
 1187              	.L55:
 335:../esc_hw_eep.c **** }
 1188              	 .loc 3 335 0
 1189 0030 1846     	 mov r0,r3
 1190 0032 1437     	 adds r7,r7,#20
 1191              	.LCFI70:
 1192              	 .cfi_def_cfa_offset 4
 1193 0034 BD46     	 mov sp,r7
 1194              	.LCFI71:
 1195              	 .cfi_def_cfa_register 13
 1196              	 
 1197 0036 5DF8047B 	 ldr r7,[sp],#4
 1198              	.LCFI72:
 1199              	 .cfi_restore 7
 1200              	 .cfi_def_cfa_offset 0
 1201 003a 7047     	 bx lr
 1202              	 .cfi_endproc
 1203              	.LFE176:
 1205              	 .section .text.crc32,"ax",%progbits
 1206              	 .align 2
 1207              	 .thumb
 1208              	 .thumb_func
 1210              	crc32:
 1211              	.LFB177:
 336:../esc_hw_eep.c **** 
 337:../esc_hw_eep.c **** static uint32_t crc32(const uint8_t *data, uint32_t length)
 338:../esc_hw_eep.c **** {
 1212              	 .loc 3 338 0
 1213              	 .cfi_startproc
 1214              	 
 1215              	 
 1216 0000 80B5     	 push {r7,lr}
 1217              	.LCFI73:
 1218              	 .cfi_def_cfa_offset 8
 1219              	 .cfi_offset 7,-8
 1220              	 .cfi_offset 14,-4
 1221 0002 84B0     	 sub sp,sp,#16
 1222              	.LCFI74:
 1223              	 .cfi_def_cfa_offset 24
 1224 0004 00AF     	 add r7,sp,#0
 1225              	.LCFI75:
 1226              	 .cfi_def_cfa_register 7
 1227 0006 7860     	 str r0,[r7,#4]
 1228 0008 3960     	 str r1,[r7]
 339:../esc_hw_eep.c ****    uint32_t crc;
 340:../esc_hw_eep.c **** 
 341:../esc_hw_eep.c ****    XMC_FCE_InitializeSeedValue(&fce_config, 0xffffffff);
 1229              	 .loc 3 341 0
 1230 000a 0C48     	 ldr r0,.L59
 1231 000c 4FF0FF31 	 mov r1,#-1
 1232 0010 FFF7FEFF 	 bl XMC_FCE_InitializeSeedValue
 342:../esc_hw_eep.c ****    XMC_FCE_CalculateCRC32(&fce_config, (const uint32_t *) data, length & ~3L, &crc);
 1233              	 .loc 3 342 0
 1234 0014 3B68     	 ldr r3,[r7]
 1235 0016 23F00302 	 bic r2,r3,#3
 1236 001a 07F10C03 	 add r3,r7,#12
 1237 001e 0748     	 ldr r0,.L59
 1238 0020 7968     	 ldr r1,[r7,#4]
 1239 0022 FFF7FEFF 	 bl XMC_FCE_CalculateCRC32
 343:../esc_hw_eep.c ****    XMC_FCE_GetCRCResult(&fce_config, &crc);
 1240              	 .loc 3 343 0
 1241 0026 07F10C03 	 add r3,r7,#12
 1242 002a 0448     	 ldr r0,.L59
 1243 002c 1946     	 mov r1,r3
 1244 002e FFF7FEFF 	 bl XMC_FCE_GetCRCResult
 344:../esc_hw_eep.c **** 
 345:../esc_hw_eep.c ****    return crc;
 1245              	 .loc 3 345 0
 1246 0032 FB68     	 ldr r3,[r7,#12]
 346:../esc_hw_eep.c **** }
 1247              	 .loc 3 346 0
 1248 0034 1846     	 mov r0,r3
 1249 0036 1037     	 adds r7,r7,#16
 1250              	.LCFI76:
 1251              	 .cfi_def_cfa_offset 8
 1252 0038 BD46     	 mov sp,r7
 1253              	.LCFI77:
 1254              	 .cfi_def_cfa_register 13
 1255              	 
 1256 003a 80BD     	 pop {r7,pc}
 1257              	.L60:
 1258              	 .align 2
 1259              	.L59:
 1260 003c 00000000 	 .word fce_config
 1261              	 .cfi_endproc
 1262              	.LFE177:
 1264              	 .text
 1265              	.Letext0:
 1266              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1267              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1268              	 .file 6 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 1269              	 .file 7 "C:/Workspaces/SOES-SAMPLE/soes/soes/esc.h"
 1270              	 .file 8 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 1271              	 .file 9 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc/xmc4_gpio.h"
 1272              	 .file 10 "../esc_hw_eep.h"
 1273              	 .file 11 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 esc_hw_eep.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:119    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:163    .text.XMC_FCE_InitializeSeedValue:00000000 $t
    {standard input}:167    .text.XMC_FCE_InitializeSeedValue:00000000 XMC_FCE_InitializeSeedValue
    {standard input}:209    .text.XMC_FCE_GetCRCResult:00000000 $t
    {standard input}:213    .text.XMC_FCE_GetCRCResult:00000000 XMC_FCE_GetCRCResult
    {standard input}:255    .rodata.fce_config:00000000 $d
    {standard input}:258    .rodata.fce_config:00000000 fce_config
    {standard input}:265    .bss.eep_buf:00000000 $d
    {standard input}:268    .bss.eep_buf:00000000 eep_buf
    {standard input}:273    .bss.eep_buf_dirty:00000000 eep_buf_dirty
    {standard input}:274    .bss.eep_buf_dirty:00000000 $d
    {standard input}:276    .bss.eep_last_write:00000000 $d
    {standard input}:279    .bss.eep_last_write:00000000 eep_last_write
    {standard input}:284    .bss.eep_write_req:00000000 eep_write_req
    {standard input}:285    .bss.eep_write_req:00000000 $d
    {standard input}:287    .bss.eep_curr_block:00000000 $d
    {standard input}:290    .bss.eep_curr_block:00000000 eep_curr_block
    {standard input}:293    .bss.eep_next_block:00000000 $d
    {standard input}:296    .bss.eep_next_block:00000000 eep_next_block
    {standard input}:299    .bss.eep_write_src:00000000 $d
    {standard input}:302    .bss.eep_write_src:00000000 eep_write_src
    {standard input}:305    .bss.eep_write_dst:00000000 $d
    {standard input}:308    .bss.eep_write_dst:00000000 eep_write_dst
    {standard input}:311    .bss.eep_write_page:00000000 $d
    {standard input}:314    .bss.eep_write_page:00000000 eep_write_page
    {standard input}:317    .bss.eep_write_buf:00000000 $d
    {standard input}:320    .bss.eep_write_buf:00000000 eep_write_buf
    {standard input}:323    .rodata.gpio_config_btn:00000000 $d
    {standard input}:326    .rodata.gpio_config_btn:00000000 gpio_config_btn
    {standard input}:333    .rodata.gpio_config_led:00000000 $d
    {standard input}:336    .rodata.gpio_config_led:00000000 gpio_config_led
    {standard input}:343    .text.EEP_init:00000000 $t
    {standard input}:348    .text.EEP_init:00000000 EEP_init
    {standard input}:922    .text.find_latest_block:00000000 find_latest_block
    {standard input}:814    .text.init_flash_data:00000000 init_flash_data
    {standard input}:1069   .text.cleanup_unused_sect:00000000 cleanup_unused_sect
    {standard input}:453    .text.EEP_init:000000a4 $d
    {standard input}:471    .text.EEP_hw_process:00000000 $t
    {standard input}:476    .text.EEP_hw_process:00000000 EEP_hw_process
    {standard input}:1014   .text.get_next_block:00000000 get_next_block
    {standard input}:1210   .text.crc32:00000000 crc32
    {standard input}:645    .text.EEP_hw_process:000000fc $d
    {standard input}:663    .text.EEP_read:00000000 $t
    {standard input}:668    .text.EEP_read:00000000 EEP_read
    {standard input}:723    .text.EEP_read:00000038 $d
    {standard input}:728    .text.EEP_write:00000000 $t
    {standard input}:733    .text.EEP_write:00000000 EEP_write
    {standard input}:801    .text.EEP_write:00000050 $d
    {standard input}:810    .text.init_flash_data:00000000 $t
    {standard input}:907    .text.init_flash_data:00000080 $d
    {standard input}:918    .text.find_latest_block:00000000 $t
    {standard input}:1005   .text.find_latest_block:00000064 $d
    {standard input}:1010   .text.get_next_block:00000000 $t
    {standard input}:1065   .text.cleanup_unused_sect:00000000 $t
    {standard input}:1141   .text.is_sector_empty:00000000 is_sector_empty
    {standard input}:1131   .text.cleanup_unused_sect:00000040 $d
    {standard input}:1137   .text.is_sector_empty:00000000 $t
    {standard input}:1206   .text.crc32:00000000 $t
    {standard input}:1260   .text.crc32:0000003c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
XMC_GPIO_Init
XMC_FCE_Enable
XMC_FCE_Init
memcpy
XMC_FLASH_ProgramPage
ESCvar
XMC_FLASH_EraseSector
_binary_sii_eeprom_bin_end
_binary_sii_eeprom_bin_start
XMC_FCE_CalculateCRC32
