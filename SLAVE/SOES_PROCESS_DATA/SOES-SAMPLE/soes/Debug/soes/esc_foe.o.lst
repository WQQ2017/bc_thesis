   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "esc_foe.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm foe_file_name,16,4
  20              	 .section .bss.foe_cfg,"aw",%nobits
  21              	 .align 2
  24              	foe_cfg:
  25 0000 00000000 	 .space 4
  26              	 .section .bss.foe_files,"aw",%nobits
  27              	 .align 2
  30              	foe_files:
  31 0000 00000000 	 .space 4
  32              	 .section .bss.foe_file,"aw",%nobits
  33              	 .align 2
  36              	foe_file:
  37 0000 00000000 	 .space 4
  38              	 .section .bss.FOEvar,"aw",%nobits
  39              	 .align 2
  42              	FOEvar:
  43 0000 00000000 	 .space 19
  43      00000000 
  43      00000000 
  43      00000000 
  43      000000
  44 0013 00       	 .section .text.FOE_fopen,"ax",%progbits
  45              	 .align 2
  46              	 .global FOE_fopen
  47              	 .thumb
  48              	 .thumb_func
  50              	FOE_fopen:
  51              	.LFB0:
  52              	 .file 1 "../soes/esc_foe.c"
   1:../soes/esc_foe.c **** /*
   2:../soes/esc_foe.c ****  * Licensed under the GNU General Public License version 2 with exceptions. See
   3:../soes/esc_foe.c ****  * LICENSE file in the project root for full license information
   4:../soes/esc_foe.c ****  */
   5:../soes/esc_foe.c **** 
   6:../soes/esc_foe.c ****  /** \file
   7:../soes/esc_foe.c ****  * \brief
   8:../soes/esc_foe.c ****  * File over EtherCAT (FoE) module.
   9:../soes/esc_foe.c ****  */
  10:../soes/esc_foe.c **** 
  11:../soes/esc_foe.c **** 
  12:../soes/esc_foe.c **** #include <cc.h>
  13:../soes/esc_foe.c **** #include "esc.h"
  14:../soes/esc_foe.c **** #include "esc_foe.h"
  15:../soes/esc_foe.c **** #include <string.h>
  16:../soes/esc_foe.c **** 
  17:../soes/esc_foe.c ****  /** \file
  18:../soes/esc_foe.c ****  * \brief
  19:../soes/esc_foe.c ****  * File over EtherCAT (FoE) module.
  20:../soes/esc_foe.c ****  *
  21:../soes/esc_foe.c ****  * FOE read / write and FOE service functions
  22:../soes/esc_foe.c ****  */
  23:../soes/esc_foe.c **** 
  24:../soes/esc_foe.c **** //define if FOE_read should be supported
  25:../soes/esc_foe.c **** //#define FOE_READ_SUPPORTED
  26:../soes/esc_foe.c **** 
  27:../soes/esc_foe.c **** /** Variable holding current filename read at FOE Open.
  28:../soes/esc_foe.c ****  */
  29:../soes/esc_foe.c **** char foe_file_name[FOE_FN_MAX + 1];
  30:../soes/esc_foe.c **** 
  31:../soes/esc_foe.c **** 
  32:../soes/esc_foe.c **** /** Main FoE configuration pointer data array. Structure i allocated and filled
  33:../soes/esc_foe.c ****  * by the application defining what preferences it require.
  34:../soes/esc_foe.c ****  */
  35:../soes/esc_foe.c **** static foe_cfg_t * foe_cfg;
  36:../soes/esc_foe.c **** /** Collection of files possible to receive by FoE. Structure i allocated and
  37:../soes/esc_foe.c ****  * filled by the application defining what preferences it require.
  38:../soes/esc_foe.c ****  */
  39:../soes/esc_foe.c **** static foe_writefile_cfg_t * foe_files;
  40:../soes/esc_foe.c **** /** Pointer to current file configuration item used by FoE.
  41:../soes/esc_foe.c ****  */
  42:../soes/esc_foe.c **** static foe_writefile_cfg_t * foe_file;
  43:../soes/esc_foe.c **** /** Main FoE status data array. Structure gets filled with current status
  44:../soes/esc_foe.c ****  * variables during FoE usage.
  45:../soes/esc_foe.c ****  */
  46:../soes/esc_foe.c **** static _FOEvar FOEvar;
  47:../soes/esc_foe.c **** 
  48:../soes/esc_foe.c **** /** Validate a write or read request by checking filename and password.
  49:../soes/esc_foe.c ****  *
  50:../soes/esc_foe.c ****  * @param[in] name      = Filename
  51:../soes/esc_foe.c ****  * @param[in] num_chars = Length of filename
  52:../soes/esc_foe.c ****  * @param[in] pass      = Numeric variable of password
  53:../soes/esc_foe.c ****  * @param[in] op        = Request op-code
  54:../soes/esc_foe.c ****  * @return 0= if we succeed, FOE_ERR_NOTFOUND something wrong with filename or
  55:../soes/esc_foe.c ****  * password
  56:../soes/esc_foe.c ****  */
  57:../soes/esc_foe.c **** int FOE_fopen (char *name, uint8_t num_chars, uint32_t pass, uint8_t op)
  58:../soes/esc_foe.c **** {
  53              	 .loc 1 58 0
  54              	 .cfi_startproc
  55              	 
  56              	 
  57 0000 80B5     	 push {r7,lr}
  58              	.LCFI0:
  59              	 .cfi_def_cfa_offset 8
  60              	 .cfi_offset 7,-8
  61              	 .cfi_offset 14,-4
  62 0002 86B0     	 sub sp,sp,#24
  63              	.LCFI1:
  64              	 .cfi_def_cfa_offset 32
  65 0004 00AF     	 add r7,sp,#0
  66              	.LCFI2:
  67              	 .cfi_def_cfa_register 7
  68 0006 F860     	 str r0,[r7,#12]
  69 0008 7A60     	 str r2,[r7,#4]
  70 000a 1A46     	 mov r2,r3
  71 000c 0B46     	 mov r3,r1
  72 000e FB72     	 strb r3,[r7,#11]
  73 0010 1346     	 mov r3,r2
  74 0012 BB72     	 strb r3,[r7,#10]
  59:../soes/esc_foe.c ****    uint32_t i;
  60:../soes/esc_foe.c **** 
  61:../soes/esc_foe.c ****    /* Unpack the file name into characters we can look at. */
  62:../soes/esc_foe.c ****    if (num_chars > FOE_FN_MAX)
  75              	 .loc 1 62 0
  76 0014 FB7A     	 ldrb r3,[r7,#11]
  77 0016 0F2B     	 cmp r3,#15
  78 0018 01D9     	 bls .L2
  63:../soes/esc_foe.c ****    {
  64:../soes/esc_foe.c ****       num_chars = FOE_FN_MAX;
  79              	 .loc 1 64 0
  80 001a 0F23     	 movs r3,#15
  81 001c FB72     	 strb r3,[r7,#11]
  82              	.L2:
  65:../soes/esc_foe.c ****    }
  66:../soes/esc_foe.c **** 
  67:../soes/esc_foe.c ****    for (i = 0; i < num_chars; i++)
  83              	 .loc 1 67 0
  84 001e 0023     	 movs r3,#0
  85 0020 7B61     	 str r3,[r7,#20]
  86 0022 0BE0     	 b .L3
  87              	.L4:
  68:../soes/esc_foe.c ****    {
  69:../soes/esc_foe.c ****       foe_file_name[i] = name[i];
  88              	 .loc 1 69 0 discriminator 3
  89 0024 FA68     	 ldr r2,[r7,#12]
  90 0026 7B69     	 ldr r3,[r7,#20]
  91 0028 1344     	 add r3,r3,r2
  92 002a 1978     	 ldrb r1,[r3]
  93 002c 434A     	 ldr r2,.L11
  94 002e 7B69     	 ldr r3,[r7,#20]
  95 0030 1344     	 add r3,r3,r2
  96 0032 0A46     	 mov r2,r1
  97 0034 1A70     	 strb r2,[r3]
  67:../soes/esc_foe.c ****    {
  98              	 .loc 1 67 0 discriminator 3
  99 0036 7B69     	 ldr r3,[r7,#20]
 100 0038 0133     	 adds r3,r3,#1
 101 003a 7B61     	 str r3,[r7,#20]
 102              	.L3:
  67:../soes/esc_foe.c ****    {
 103              	 .loc 1 67 0 is_stmt 0 discriminator 1
 104 003c FA7A     	 ldrb r2,[r7,#11]
 105 003e 7B69     	 ldr r3,[r7,#20]
 106 0040 9A42     	 cmp r2,r3
 107 0042 EFD8     	 bhi .L4
  70:../soes/esc_foe.c ****    }
  71:../soes/esc_foe.c ****    foe_file_name[i] = '\0';
 108              	 .loc 1 71 0 is_stmt 1
 109 0044 3D4A     	 ldr r2,.L11
 110 0046 7B69     	 ldr r3,[r7,#20]
 111 0048 1344     	 add r3,r3,r2
 112 004a 0022     	 movs r2,#0
 113 004c 1A70     	 strb r2,[r3]
  72:../soes/esc_foe.c **** 
  73:../soes/esc_foe.c ****    /* Figure out what file they're talking about. */
  74:../soes/esc_foe.c ****    for (i = 0; i < foe_cfg->n_files; i++)
 114              	 .loc 1 74 0
 115 004e 0023     	 movs r3,#0
 116 0050 7B61     	 str r3,[r7,#20]
 117 0052 66E0     	 b .L5
 118              	.L10:
  75:../soes/esc_foe.c ****    {
  76:../soes/esc_foe.c ****       if ((0 == strncmp (foe_file_name, foe_files[i].name, num_chars)) &&
 119              	 .loc 1 76 0
 120 0054 3A4B     	 ldr r3,.L11+4
 121 0056 1968     	 ldr r1,[r3]
 122 0058 7A69     	 ldr r2,[r7,#20]
 123 005a 1346     	 mov r3,r2
 124 005c DB00     	 lsls r3,r3,#3
 125 005e 9B1A     	 subs r3,r3,r2
 126 0060 9B00     	 lsls r3,r3,#2
 127 0062 0B44     	 add r3,r3,r1
 128 0064 1A68     	 ldr r2,[r3]
 129 0066 FB7A     	 ldrb r3,[r7,#11]
 130 0068 3448     	 ldr r0,.L11
 131 006a 1146     	 mov r1,r2
 132 006c 1A46     	 mov r2,r3
 133 006e FFF7FEFF 	 bl strncmp
 134 0072 0346     	 mov r3,r0
 135 0074 002B     	 cmp r3,#0
 136 0076 51D1     	 bne .L6
  77:../soes/esc_foe.c ****           (pass == foe_files[i].filepass))
 137              	 .loc 1 77 0 discriminator 1
 138 0078 314B     	 ldr r3,.L11+4
 139 007a 1968     	 ldr r1,[r3]
 140 007c 7A69     	 ldr r2,[r7,#20]
 141 007e 1346     	 mov r3,r2
 142 0080 DB00     	 lsls r3,r3,#3
 143 0082 9B1A     	 subs r3,r3,r2
 144 0084 9B00     	 lsls r3,r3,#2
 145 0086 0B44     	 add r3,r3,r1
 146 0088 5A69     	 ldr r2,[r3,#20]
  76:../soes/esc_foe.c ****           (pass == foe_files[i].filepass))
 147              	 .loc 1 76 0 discriminator 1
 148 008a 7B68     	 ldr r3,[r7,#4]
 149 008c 9A42     	 cmp r2,r3
 150 008e 45D1     	 bne .L6
  78:../soes/esc_foe.c ****       {
  79:../soes/esc_foe.c ****          foe_file = &foe_files[i];
 151              	 .loc 1 79 0
 152 0090 2B4B     	 ldr r3,.L11+4
 153 0092 1968     	 ldr r1,[r3]
 154 0094 7A69     	 ldr r2,[r7,#20]
 155 0096 1346     	 mov r3,r2
 156 0098 DB00     	 lsls r3,r3,#3
 157 009a 9B1A     	 subs r3,r3,r2
 158 009c 9B00     	 lsls r3,r3,#2
 159 009e 0B44     	 add r3,r3,r1
 160 00a0 284A     	 ldr r2,.L11+8
 161 00a2 1360     	 str r3,[r2]
  80:../soes/esc_foe.c ****          foe_file->address_offset = 0;
 162              	 .loc 1 80 0
 163 00a4 274B     	 ldr r3,.L11+8
 164 00a6 1B68     	 ldr r3,[r3]
 165 00a8 0022     	 movs r2,#0
 166 00aa DA60     	 str r2,[r3,#12]
  81:../soes/esc_foe.c ****          foe_file->total_size = 0;
 167              	 .loc 1 81 0
 168 00ac 254B     	 ldr r3,.L11+8
 169 00ae 1B68     	 ldr r3,[r3]
 170 00b0 0022     	 movs r2,#0
 171 00b2 1A61     	 str r2,[r3,#16]
  82:../soes/esc_foe.c ****          switch (op)
 172              	 .loc 1 82 0
 173 00b4 BB7A     	 ldrb r3,[r7,#10]
 174 00b6 012B     	 cmp r3,#1
 175 00b8 02D0     	 beq .L7
 176 00ba 022B     	 cmp r3,#2
 177 00bc 17D0     	 beq .L8
 178 00be 2DE0     	 b .L6
 179              	.L7:
  83:../soes/esc_foe.c ****          {
  84:../soes/esc_foe.c ****             case FOE_OP_RRQ:
  85:../soes/esc_foe.c ****             {
  86:../soes/esc_foe.c ****                FOEvar.fposition = 0;
 180              	 .loc 1 86 0
 181 00c0 214B     	 ldr r3,.L11+12
 182 00c2 0022     	 movs r2,#0
 183 00c4 DA71     	 strb r2,[r3,#7]
 184 00c6 0022     	 movs r2,#0
 185 00c8 1A72     	 strb r2,[r3,#8]
 186 00ca 0022     	 movs r2,#0
 187 00cc 5A72     	 strb r2,[r3,#9]
 188 00ce 0022     	 movs r2,#0
 189 00d0 9A72     	 strb r2,[r3,#10]
  87:../soes/esc_foe.c ****                FOEvar.fend = foe_files[i].max_data;
 190              	 .loc 1 87 0
 191 00d2 1B4B     	 ldr r3,.L11+4
 192 00d4 1968     	 ldr r1,[r3]
 193 00d6 7A69     	 ldr r2,[r7,#20]
 194 00d8 1346     	 mov r3,r2
 195 00da DB00     	 lsls r3,r3,#3
 196 00dc 9B1A     	 subs r3,r3,r2
 197 00de 9B00     	 lsls r3,r3,#2
 198 00e0 0B44     	 add r3,r3,r1
 199 00e2 5B68     	 ldr r3,[r3,#4]
 200 00e4 184A     	 ldr r2,.L11+12
 201 00e6 C2F80F30 	 str r3,[r2,#15]
  88:../soes/esc_foe.c ****                return 0;
 202              	 .loc 1 88 0
 203 00ea 0023     	 movs r3,#0
 204 00ec 21E0     	 b .L9
 205              	.L8:
  89:../soes/esc_foe.c ****             }
  90:../soes/esc_foe.c ****             case FOE_OP_WRQ:
  91:../soes/esc_foe.c ****             {
  92:../soes/esc_foe.c ****                FOEvar.fposition = 0;
 206              	 .loc 1 92 0
 207 00ee 164B     	 ldr r3,.L11+12
 208 00f0 0022     	 movs r2,#0
 209 00f2 DA71     	 strb r2,[r3,#7]
 210 00f4 0022     	 movs r2,#0
 211 00f6 1A72     	 strb r2,[r3,#8]
 212 00f8 0022     	 movs r2,#0
 213 00fa 5A72     	 strb r2,[r3,#9]
 214 00fc 0022     	 movs r2,#0
 215 00fe 9A72     	 strb r2,[r3,#10]
  93:../soes/esc_foe.c ****                FOEvar.fend = foe_files[i].max_data;
 216              	 .loc 1 93 0
 217 0100 0F4B     	 ldr r3,.L11+4
 218 0102 1968     	 ldr r1,[r3]
 219 0104 7A69     	 ldr r2,[r7,#20]
 220 0106 1346     	 mov r3,r2
 221 0108 DB00     	 lsls r3,r3,#3
 222 010a 9B1A     	 subs r3,r3,r2
 223 010c 9B00     	 lsls r3,r3,#2
 224 010e 0B44     	 add r3,r3,r1
 225 0110 5B68     	 ldr r3,[r3,#4]
 226 0112 0D4A     	 ldr r2,.L11+12
 227 0114 C2F80F30 	 str r3,[r2,#15]
  94:../soes/esc_foe.c ****                return 0;
 228              	 .loc 1 94 0
 229 0118 0023     	 movs r3,#0
 230 011a 0AE0     	 b .L9
 231              	.L6:
  74:../soes/esc_foe.c ****    {
 232              	 .loc 1 74 0 discriminator 2
 233 011c 7B69     	 ldr r3,[r7,#20]
 234 011e 0133     	 adds r3,r3,#1
 235 0120 7B61     	 str r3,[r7,#20]
 236              	.L5:
  74:../soes/esc_foe.c ****    {
 237              	 .loc 1 74 0 is_stmt 0 discriminator 1
 238 0122 0A4B     	 ldr r3,.L11+16
 239 0124 1B68     	 ldr r3,[r3]
 240 0126 DA68     	 ldr r2,[r3,#12]
 241 0128 7B69     	 ldr r3,[r7,#20]
 242 012a 9A42     	 cmp r2,r3
 243 012c 92D8     	 bhi .L10
  95:../soes/esc_foe.c ****             }
  96:../soes/esc_foe.c ****          }
  97:../soes/esc_foe.c ****       }
  98:../soes/esc_foe.c ****    }
  99:../soes/esc_foe.c **** 
 100:../soes/esc_foe.c ****    return FOE_ERR_NOTFOUND;
 244              	 .loc 1 100 0 is_stmt 1
 245 012e 48F20103 	 movw r3,#32769
 246              	.L9:
 101:../soes/esc_foe.c **** }
 247              	 .loc 1 101 0
 248 0132 1846     	 mov r0,r3
 249 0134 1837     	 adds r7,r7,#24
 250              	.LCFI3:
 251              	 .cfi_def_cfa_offset 8
 252 0136 BD46     	 mov sp,r7
 253              	.LCFI4:
 254              	 .cfi_def_cfa_register 13
 255              	 
 256 0138 80BD     	 pop {r7,pc}
 257              	.L12:
 258 013a 00BF     	 .align 2
 259              	.L11:
 260 013c 00000000 	 .word foe_file_name
 261 0140 00000000 	 .word foe_files
 262 0144 00000000 	 .word foe_file
 263 0148 00000000 	 .word FOEvar
 264 014c 00000000 	 .word foe_cfg
 265              	 .cfi_endproc
 266              	.LFE0:
 268              	 .section .text.FOE_fwrite,"ax",%progbits
 269              	 .align 2
 270              	 .global FOE_fwrite
 271              	 .thumb
 272              	 .thumb_func
 274              	FOE_fwrite:
 275              	.LFB1:
 102:../soes/esc_foe.c **** 
 103:../soes/esc_foe.c **** #ifdef FOE_READ_SUPPORTED
 104:../soes/esc_foe.c **** /** Function writing local data to mailbox buffer to be sent as next FoE frame.
 105:../soes/esc_foe.c ****  * It will try to fill the Mailbox buffer available if there is enough data
 106:../soes/esc_foe.c ****  * left to read.
 107:../soes/esc_foe.c ****  *
 108:../soes/esc_foe.c ****  * @param[in] data      = pointer to buffer
 109:../soes/esc_foe.c ****  * @param[in] maxlength = max length of data possible to read, controlled by
 110:../soes/esc_foe.c ****  * Mailbox - FoE and Mailbox frame headers.
 111:../soes/esc_foe.c **** 
 112:../soes/esc_foe.c ****  * @return Number of copied bytes.
 113:../soes/esc_foe.c ****  */
 114:../soes/esc_foe.c **** uint16_t FOE_fread (uint8_t * data, uint16_t maxlength)
 115:../soes/esc_foe.c **** {
 116:../soes/esc_foe.c ****    uint16_t ncopied = 0;
 117:../soes/esc_foe.c **** 
 118:../soes/esc_foe.c ****    while (maxlength && (FOEvar.fend - FOEvar.fposition))
 119:../soes/esc_foe.c ****    {
 120:../soes/esc_foe.c ****       maxlength--;
 121:../soes/esc_foe.c ****       *(data++) = fbuffer[FOEvar.fposition++];
 122:../soes/esc_foe.c ****       ncopied++;
 123:../soes/esc_foe.c ****    }
 124:../soes/esc_foe.c **** 
 125:../soes/esc_foe.c ****    return ncopied;
 126:../soes/esc_foe.c **** }
 127:../soes/esc_foe.c **** #endif
 128:../soes/esc_foe.c **** 
 129:../soes/esc_foe.c **** /** Function reading mailbox buffer to local buffer to be handled by
 130:../soes/esc_foe.c ****  * application write hook. Ex. flash routine used by software update.
 131:../soes/esc_foe.c ****  * It will consume the buffer and call the write hook every time the configured
 132:../soes/esc_foe.c ****  * flush buffer limit is reached.
 133:../soes/esc_foe.c ****  *
 134:../soes/esc_foe.c ****  *
 135:../soes/esc_foe.c ****  * @param[in] data   = Pointer to buffer
 136:../soes/esc_foe.c ****  * @param[in] length = Length of data to read
 137:../soes/esc_foe.c **** 
 138:../soes/esc_foe.c ****  * @return Number of copied bytes.
 139:../soes/esc_foe.c ****  */
 140:../soes/esc_foe.c **** uint16_t FOE_fwrite (uint8_t *data, uint16_t length)
 141:../soes/esc_foe.c **** {
 276              	 .loc 1 141 0
 277              	 .cfi_startproc
 278              	 
 279              	 
 280 0000 80B5     	 push {r7,lr}
 281              	.LCFI5:
 282              	 .cfi_def_cfa_offset 8
 283              	 .cfi_offset 7,-8
 284              	 .cfi_offset 14,-4
 285 0002 84B0     	 sub sp,sp,#16
 286              	.LCFI6:
 287              	 .cfi_def_cfa_offset 24
 288 0004 00AF     	 add r7,sp,#0
 289              	.LCFI7:
 290              	 .cfi_def_cfa_register 7
 291 0006 7860     	 str r0,[r7,#4]
 292 0008 0B46     	 mov r3,r1
 293 000a 7B80     	 strh r3,[r7,#2]
 142:../soes/esc_foe.c ****     uint16_t ncopied = 0;
 294              	 .loc 1 142 0
 295 000c 0023     	 movs r3,#0
 296 000e FB81     	 strh r3,[r7,#14]
 143:../soes/esc_foe.c ****     uint32_t failed = 0;
 297              	 .loc 1 143 0
 298 0010 0023     	 movs r3,#0
 299 0012 BB60     	 str r3,[r7,#8]
 144:../soes/esc_foe.c **** 
 145:../soes/esc_foe.c ****     DPRINT("FOE_fwrite\n");
 146:../soes/esc_foe.c ****     FOEvar.fprevposition = FOEvar.fposition;
 300              	 .loc 1 146 0
 301 0014 324B     	 ldr r3,.L19
 302 0016 D3F80730 	 ldr r3,[r3,#7]
 303 001a 314A     	 ldr r2,.L19
 304 001c C2F80B30 	 str r3,[r2,#11]
 147:../soes/esc_foe.c ****     while (length && (FOEvar.fend - FOEvar.fposition) && !failed)
 305              	 .loc 1 147 0
 306 0020 43E0     	 b .L14
 307              	.L17:
 148:../soes/esc_foe.c ****     {
 149:../soes/esc_foe.c ****        length--;
 308              	 .loc 1 149 0
 309 0022 7B88     	 ldrh r3,[r7,#2]
 310 0024 013B     	 subs r3,r3,#1
 311 0026 7B80     	 strh r3,[r7,#2]
 150:../soes/esc_foe.c ****        foe_cfg->fbuffer[FOEvar.fbufposition++] = *(data++);
 312              	 .loc 1 150 0
 313 0028 2E4B     	 ldr r3,.L19+4
 314 002a 1B68     	 ldr r3,[r3]
 315 002c 1A68     	 ldr r2,[r3]
 316 002e 2C4B     	 ldr r3,.L19
 317 0030 B3F80130 	 ldrh r3,[r3,#1]
 318 0034 9BB2     	 uxth r3,r3
 319 0036 591C     	 adds r1,r3,#1
 320 0038 88B2     	 uxth r0,r1
 321 003a 2949     	 ldr r1,.L19
 322 003c A1F80100 	 strh r0,[r1,#1]
 323 0040 1A44     	 add r2,r2,r3
 324 0042 7B68     	 ldr r3,[r7,#4]
 325 0044 591C     	 adds r1,r3,#1
 326 0046 7960     	 str r1,[r7,#4]
 327 0048 1B78     	 ldrb r3,[r3]
 328 004a 1370     	 strb r3,[r2]
 151:../soes/esc_foe.c ****        if(FOEvar.fbufposition >= foe_cfg->buffer_size)
 329              	 .loc 1 151 0
 330 004c 244B     	 ldr r3,.L19
 331 004e B3F80130 	 ldrh r3,[r3,#1]
 332 0052 9BB2     	 uxth r3,r3
 333 0054 1A46     	 mov r2,r3
 334 0056 234B     	 ldr r3,.L19+4
 335 0058 1B68     	 ldr r3,[r3]
 336 005a 9B68     	 ldr r3,[r3,#8]
 337 005c 9A42     	 cmp r2,r3
 338 005e 1AD3     	 bcc .L15
 152:../soes/esc_foe.c ****        {
 153:../soes/esc_foe.c ****           failed = foe_file->write_function (foe_file, foe_cfg->fbuffer);
 339              	 .loc 1 153 0
 340 0060 214B     	 ldr r3,.L19+8
 341 0062 1B68     	 ldr r3,[r3]
 342 0064 9B69     	 ldr r3,[r3,#24]
 343 0066 204A     	 ldr r2,.L19+8
 344 0068 1168     	 ldr r1,[r2]
 345 006a 1E4A     	 ldr r2,.L19+4
 346 006c 1268     	 ldr r2,[r2]
 347 006e 1268     	 ldr r2,[r2]
 348 0070 0846     	 mov r0,r1
 349 0072 1146     	 mov r1,r2
 350 0074 9847     	 blx r3
 351 0076 B860     	 str r0,[r7,#8]
 154:../soes/esc_foe.c ****           FOEvar.fbufposition = 0;
 352              	 .loc 1 154 0
 353 0078 194B     	 ldr r3,.L19
 354 007a 0022     	 movs r2,#0
 355 007c 5A70     	 strb r2,[r3,#1]
 356 007e 0022     	 movs r2,#0
 357 0080 9A70     	 strb r2,[r3,#2]
 155:../soes/esc_foe.c ****           foe_file->address_offset += foe_cfg->buffer_size;
 358              	 .loc 1 155 0
 359 0082 194B     	 ldr r3,.L19+8
 360 0084 1B68     	 ldr r3,[r3]
 361 0086 184A     	 ldr r2,.L19+8
 362 0088 1268     	 ldr r2,[r2]
 363 008a D168     	 ldr r1,[r2,#12]
 364 008c 154A     	 ldr r2,.L19+4
 365 008e 1268     	 ldr r2,[r2]
 366 0090 9268     	 ldr r2,[r2,#8]
 367 0092 0A44     	 add r2,r2,r1
 368 0094 DA60     	 str r2,[r3,#12]
 369              	.L15:
 156:../soes/esc_foe.c ****        }
 157:../soes/esc_foe.c ****        FOEvar.fposition++;
 370              	 .loc 1 157 0
 371 0096 124B     	 ldr r3,.L19
 372 0098 D3F80730 	 ldr r3,[r3,#7]
 373 009c 0133     	 adds r3,r3,#1
 374 009e 104A     	 ldr r2,.L19
 375 00a0 C2F80730 	 str r3,[r2,#7]
 158:../soes/esc_foe.c ****        ncopied++;
 376              	 .loc 1 158 0
 377 00a4 FB89     	 ldrh r3,[r7,#14]
 378 00a6 0133     	 adds r3,r3,#1
 379 00a8 FB81     	 strh r3,[r7,#14]
 380              	.L14:
 147:../soes/esc_foe.c ****     {
 381              	 .loc 1 147 0
 382 00aa 7B88     	 ldrh r3,[r7,#2]
 383 00ac 002B     	 cmp r3,#0
 384 00ae 0AD0     	 beq .L16
 147:../soes/esc_foe.c ****     {
 385              	 .loc 1 147 0 is_stmt 0 discriminator 1
 386 00b0 0B4B     	 ldr r3,.L19
 387 00b2 D3F80F20 	 ldr r2,[r3,#15]
 388 00b6 0A4B     	 ldr r3,.L19
 389 00b8 D3F80730 	 ldr r3,[r3,#7]
 390 00bc 9A42     	 cmp r2,r3
 391 00be 02D0     	 beq .L16
 147:../soes/esc_foe.c ****     {
 392              	 .loc 1 147 0 discriminator 2
 393 00c0 BB68     	 ldr r3,[r7,#8]
 394 00c2 002B     	 cmp r3,#0
 395 00c4 ADD0     	 beq .L17
 396              	.L16:
 159:../soes/esc_foe.c ****     }
 160:../soes/esc_foe.c **** 
 161:../soes/esc_foe.c ****     foe_file->total_size += ncopied;
 397              	 .loc 1 161 0 is_stmt 1
 398 00c6 084B     	 ldr r3,.L19+8
 399 00c8 1B68     	 ldr r3,[r3]
 400 00ca 074A     	 ldr r2,.L19+8
 401 00cc 1268     	 ldr r2,[r2]
 402 00ce 1169     	 ldr r1,[r2,#16]
 403 00d0 FA89     	 ldrh r2,[r7,#14]
 404 00d2 0A44     	 add r2,r2,r1
 405 00d4 1A61     	 str r2,[r3,#16]
 162:../soes/esc_foe.c **** 
 163:../soes/esc_foe.c ****     DPRINT("FOE_fwrite END with : %d\n",ncopied);
 164:../soes/esc_foe.c ****     return ncopied;
 406              	 .loc 1 164 0
 407 00d6 FB89     	 ldrh r3,[r7,#14]
 165:../soes/esc_foe.c **** }
 408              	 .loc 1 165 0
 409 00d8 1846     	 mov r0,r3
 410 00da 1037     	 adds r7,r7,#16
 411              	.LCFI8:
 412              	 .cfi_def_cfa_offset 8
 413 00dc BD46     	 mov sp,r7
 414              	.LCFI9:
 415              	 .cfi_def_cfa_register 13
 416              	 
 417 00de 80BD     	 pop {r7,pc}
 418              	.L20:
 419              	 .align 2
 420              	.L19:
 421 00e0 00000000 	 .word FOEvar
 422 00e4 00000000 	 .word foe_cfg
 423 00e8 00000000 	 .word foe_file
 424              	 .cfi_endproc
 425              	.LFE1:
 427              	 .section .text.FOE_fclose,"ax",%progbits
 428              	 .align 2
 429              	 .global FOE_fclose
 430              	 .thumb
 431              	 .thumb_func
 433              	FOE_fclose:
 434              	.LFB2:
 166:../soes/esc_foe.c **** 
 167:../soes/esc_foe.c **** 
 168:../soes/esc_foe.c **** /** Function handling the final FOE_fwrite when we close up regardless
 169:../soes/esc_foe.c ****  * if we have filled the buffers or not.
 170:../soes/esc_foe.c ****  *
 171:../soes/esc_foe.c ****  * @return Number of copied bytes on success, 0= if failed.
 172:../soes/esc_foe.c ****  */
 173:../soes/esc_foe.c **** uint32_t FOE_fclose (void)
 174:../soes/esc_foe.c **** {
 435              	 .loc 1 174 0
 436              	 .cfi_startproc
 437              	 
 438              	 
 439 0000 80B5     	 push {r7,lr}
 440              	.LCFI10:
 441              	 .cfi_def_cfa_offset 8
 442              	 .cfi_offset 7,-8
 443              	 .cfi_offset 14,-4
 444 0002 82B0     	 sub sp,sp,#8
 445              	.LCFI11:
 446              	 .cfi_def_cfa_offset 16
 447 0004 00AF     	 add r7,sp,#0
 448              	.LCFI12:
 449              	 .cfi_def_cfa_register 7
 175:../soes/esc_foe.c ****    uint32_t i;
 176:../soes/esc_foe.c ****    uint32_t failed = 0;
 450              	 .loc 1 176 0
 451 0006 0023     	 movs r3,#0
 452 0008 3B60     	 str r3,[r7]
 177:../soes/esc_foe.c **** 
 178:../soes/esc_foe.c ****    DPRINT("FOE_fclose\n");
 179:../soes/esc_foe.c ****    if (FOEvar.fbufposition)
 453              	 .loc 1 179 0
 454 000a 234B     	 ldr r3,.L26
 455 000c B3F80130 	 ldrh r3,[r3,#1]
 456 0010 9BB2     	 uxth r3,r3
 457 0012 002B     	 cmp r3,#0
 458 0014 3AD0     	 beq .L22
 180:../soes/esc_foe.c ****    {
 181:../soes/esc_foe.c **** 
 182:../soes/esc_foe.c ****       DPRINT("FOE_fclose EXTRA write\n");
 183:../soes/esc_foe.c ****       for(i = FOEvar.fbufposition; i < foe_cfg->buffer_size; i++)
 459              	 .loc 1 183 0
 460 0016 204B     	 ldr r3,.L26
 461 0018 B3F80130 	 ldrh r3,[r3,#1]
 462 001c 9BB2     	 uxth r3,r3
 463 001e 7B60     	 str r3,[r7,#4]
 464 0020 13E0     	 b .L23
 465              	.L24:
 184:../soes/esc_foe.c ****       {
 185:../soes/esc_foe.c ****          foe_cfg->fbuffer[FOEvar.fbufposition++] = foe_cfg->empty_write;
 466              	 .loc 1 185 0 discriminator 3
 467 0022 1E4B     	 ldr r3,.L26+4
 468 0024 1B68     	 ldr r3,[r3]
 469 0026 1A68     	 ldr r2,[r3]
 470 0028 1B4B     	 ldr r3,.L26
 471 002a B3F80130 	 ldrh r3,[r3,#1]
 472 002e 9BB2     	 uxth r3,r3
 473 0030 591C     	 adds r1,r3,#1
 474 0032 88B2     	 uxth r0,r1
 475 0034 1849     	 ldr r1,.L26
 476 0036 A1F80100 	 strh r0,[r1,#1]
 477 003a 1344     	 add r3,r3,r2
 478 003c 174A     	 ldr r2,.L26+4
 479 003e 1268     	 ldr r2,[r2]
 480 0040 1279     	 ldrb r2,[r2,#4]
 481 0042 1A70     	 strb r2,[r3]
 183:../soes/esc_foe.c ****       {
 482              	 .loc 1 183 0 discriminator 3
 483 0044 7B68     	 ldr r3,[r7,#4]
 484 0046 0133     	 adds r3,r3,#1
 485 0048 7B60     	 str r3,[r7,#4]
 486              	.L23:
 183:../soes/esc_foe.c ****       {
 487              	 .loc 1 183 0 is_stmt 0 discriminator 1
 488 004a 144B     	 ldr r3,.L26+4
 489 004c 1B68     	 ldr r3,[r3]
 490 004e 9A68     	 ldr r2,[r3,#8]
 491 0050 7B68     	 ldr r3,[r7,#4]
 492 0052 9A42     	 cmp r2,r3
 493 0054 E5D8     	 bhi .L24
 186:../soes/esc_foe.c ****       }
 187:../soes/esc_foe.c ****       failed = foe_file->write_function (foe_file, foe_cfg->fbuffer);
 494              	 .loc 1 187 0 is_stmt 1
 495 0056 124B     	 ldr r3,.L26+8
 496 0058 1B68     	 ldr r3,[r3]
 497 005a 9B69     	 ldr r3,[r3,#24]
 498 005c 104A     	 ldr r2,.L26+8
 499 005e 1168     	 ldr r1,[r2]
 500 0060 0E4A     	 ldr r2,.L26+4
 501 0062 1268     	 ldr r2,[r2]
 502 0064 1268     	 ldr r2,[r2]
 503 0066 0846     	 mov r0,r1
 504 0068 1146     	 mov r1,r2
 505 006a 9847     	 blx r3
 506 006c 3860     	 str r0,[r7]
 188:../soes/esc_foe.c ****       FOEvar.fbufposition = 0;
 507              	 .loc 1 188 0
 508 006e 0A4B     	 ldr r3,.L26
 509 0070 0022     	 movs r2,#0
 510 0072 5A70     	 strb r2,[r3,#1]
 511 0074 0022     	 movs r2,#0
 512 0076 9A70     	 strb r2,[r3,#2]
 189:../soes/esc_foe.c ****       foe_file->address_offset += foe_cfg->buffer_size;
 513              	 .loc 1 189 0
 514 0078 094B     	 ldr r3,.L26+8
 515 007a 1B68     	 ldr r3,[r3]
 516 007c 084A     	 ldr r2,.L26+8
 517 007e 1268     	 ldr r2,[r2]
 518 0080 D168     	 ldr r1,[r2,#12]
 519 0082 064A     	 ldr r2,.L26+4
 520 0084 1268     	 ldr r2,[r2]
 521 0086 9268     	 ldr r2,[r2,#8]
 522 0088 0A44     	 add r2,r2,r1
 523 008a DA60     	 str r2,[r3,#12]
 524              	.L22:
 190:../soes/esc_foe.c ****       DPRINT("FOE_fclose EXTRA write ended\n");
 191:../soes/esc_foe.c ****    }
 192:../soes/esc_foe.c ****    return failed;
 525              	 .loc 1 192 0
 526 008c 3B68     	 ldr r3,[r7]
 193:../soes/esc_foe.c **** }
 527              	 .loc 1 193 0
 528 008e 1846     	 mov r0,r3
 529 0090 0837     	 adds r7,r7,#8
 530              	.LCFI13:
 531              	 .cfi_def_cfa_offset 8
 532 0092 BD46     	 mov sp,r7
 533              	.LCFI14:
 534              	 .cfi_def_cfa_register 13
 535              	 
 536 0094 80BD     	 pop {r7,pc}
 537              	.L27:
 538 0096 00BF     	 .align 2
 539              	.L26:
 540 0098 00000000 	 .word FOEvar
 541 009c 00000000 	 .word foe_cfg
 542 00a0 00000000 	 .word foe_file
 543              	 .cfi_endproc
 544              	.LFE2:
 546              	 .section .text.FOE_init,"ax",%progbits
 547              	 .align 2
 548              	 .global FOE_init
 549              	 .thumb
 550              	 .thumb_func
 552              	FOE_init:
 553              	.LFB3:
 194:../soes/esc_foe.c **** 
 195:../soes/esc_foe.c **** /** Initialize by clearing all current status variables.
 196:../soes/esc_foe.c ****  *
 197:../soes/esc_foe.c ****  */
 198:../soes/esc_foe.c **** void FOE_init ()
 199:../soes/esc_foe.c **** {
 554              	 .loc 1 199 0
 555              	 .cfi_startproc
 556              	 
 557              	 
 558              	 
 559 0000 80B4     	 push {r7}
 560              	.LCFI15:
 561              	 .cfi_def_cfa_offset 4
 562              	 .cfi_offset 7,-4
 563 0002 00AF     	 add r7,sp,#0
 564              	.LCFI16:
 565              	 .cfi_def_cfa_register 7
 200:../soes/esc_foe.c ****    DPRINT("FOE_init\n");
 201:../soes/esc_foe.c ****    FOEvar.foepacket = 0;
 566              	 .loc 1 201 0
 567 0004 134B     	 ldr r3,.L29
 568 0006 0022     	 movs r2,#0
 569 0008 DA70     	 strb r2,[r3,#3]
 570 000a 0022     	 movs r2,#0
 571 000c 1A71     	 strb r2,[r3,#4]
 572 000e 0022     	 movs r2,#0
 573 0010 5A71     	 strb r2,[r3,#5]
 574 0012 0022     	 movs r2,#0
 575 0014 9A71     	 strb r2,[r3,#6]
 202:../soes/esc_foe.c ****    FOEvar.foestate = FOE_READY;
 576              	 .loc 1 202 0
 577 0016 0F4B     	 ldr r3,.L29
 578 0018 0022     	 movs r2,#0
 579 001a 1A70     	 strb r2,[r3]
 203:../soes/esc_foe.c ****    FOEvar.fposition = 0;
 580              	 .loc 1 203 0
 581 001c 0D4B     	 ldr r3,.L29
 582 001e 0022     	 movs r2,#0
 583 0020 DA71     	 strb r2,[r3,#7]
 584 0022 0022     	 movs r2,#0
 585 0024 1A72     	 strb r2,[r3,#8]
 586 0026 0022     	 movs r2,#0
 587 0028 5A72     	 strb r2,[r3,#9]
 588 002a 0022     	 movs r2,#0
 589 002c 9A72     	 strb r2,[r3,#10]
 204:../soes/esc_foe.c ****    FOEvar.fprevposition = 0;
 590              	 .loc 1 204 0
 591 002e 094B     	 ldr r3,.L29
 592 0030 0022     	 movs r2,#0
 593 0032 DA72     	 strb r2,[r3,#11]
 594 0034 0022     	 movs r2,#0
 595 0036 1A73     	 strb r2,[r3,#12]
 596 0038 0022     	 movs r2,#0
 597 003a 5A73     	 strb r2,[r3,#13]
 598 003c 0022     	 movs r2,#0
 599 003e 9A73     	 strb r2,[r3,#14]
 205:../soes/esc_foe.c ****    FOEvar.fbufposition = 0;
 600              	 .loc 1 205 0
 601 0040 044B     	 ldr r3,.L29
 602 0042 0022     	 movs r2,#0
 603 0044 5A70     	 strb r2,[r3,#1]
 604 0046 0022     	 movs r2,#0
 605 0048 9A70     	 strb r2,[r3,#2]
 206:../soes/esc_foe.c **** }
 606              	 .loc 1 206 0
 607 004a BD46     	 mov sp,r7
 608              	.LCFI17:
 609              	 .cfi_def_cfa_register 13
 610              	 
 611 004c 5DF8047B 	 ldr r7,[sp],#4
 612              	.LCFI18:
 613              	 .cfi_restore 7
 614              	 .cfi_def_cfa_offset 0
 615 0050 7047     	 bx lr
 616              	.L30:
 617 0052 00BF     	 .align 2
 618              	.L29:
 619 0054 00000000 	 .word FOEvar
 620              	 .cfi_endproc
 621              	.LFE3:
 623              	 .section .text.FOE_abort,"ax",%progbits
 624              	 .align 2
 625              	 .global FOE_abort
 626              	 .thumb
 627              	 .thumb_func
 629              	FOE_abort:
 630              	.LFB4:
 207:../soes/esc_foe.c **** 
 208:../soes/esc_foe.c **** /** Function for sending an FOE abort frame.
 209:../soes/esc_foe.c ****  *
 210:../soes/esc_foe.c ****  * @param[in] code   = abort code
 211:../soes/esc_foe.c ****  */
 212:../soes/esc_foe.c **** void FOE_abort (uint32_t code)
 213:../soes/esc_foe.c **** {
 631              	 .loc 1 213 0
 632              	 .cfi_startproc
 633              	 
 634              	 
 635 0000 80B5     	 push {r7,lr}
 636              	.LCFI19:
 637              	 .cfi_def_cfa_offset 8
 638              	 .cfi_offset 7,-8
 639              	 .cfi_offset 14,-4
 640 0002 84B0     	 sub sp,sp,#16
 641              	.LCFI20:
 642              	 .cfi_def_cfa_offset 24
 643 0004 00AF     	 add r7,sp,#0
 644              	.LCFI21:
 645              	 .cfi_def_cfa_register 7
 646 0006 7860     	 str r0,[r7,#4]
 214:../soes/esc_foe.c ****    _FOE *foembx;
 215:../soes/esc_foe.c ****    uint8_t mbxhandle;
 216:../soes/esc_foe.c **** 
 217:../soes/esc_foe.c ****    if (code)
 647              	 .loc 1 217 0
 648 0008 7B68     	 ldr r3,[r7,#4]
 649 000a 002B     	 cmp r3,#0
 650 000c 26D0     	 beq .L32
 218:../soes/esc_foe.c ****    {
 219:../soes/esc_foe.c ****       /* Send back an error packet. */
 220:../soes/esc_foe.c ****       mbxhandle = ESC_claimbuffer ();
 651              	 .loc 1 220 0
 652 000e FFF7FEFF 	 bl ESC_claimbuffer
 653 0012 0346     	 mov r3,r0
 654 0014 FB73     	 strb r3,[r7,#15]
 221:../soes/esc_foe.c ****       if (mbxhandle)
 655              	 .loc 1 221 0
 656 0016 FB7B     	 ldrb r3,[r7,#15]
 657 0018 002B     	 cmp r3,#0
 658 001a 1FD0     	 beq .L32
 222:../soes/esc_foe.c ****       {
 223:../soes/esc_foe.c ****          foembx = (_FOE *) &MBX[mbxhandle * ESC_MBXSIZE];
 659              	 .loc 1 223 0
 660 001c FB7B     	 ldrb r3,[r7,#15]
 661 001e 124A     	 ldr r2,.L33
 662 0020 D2F86D20 	 ldr r2,[r2,#109]
 663 0024 02FB03F3 	 mul r3,r2,r3
 664 0028 104A     	 ldr r2,.L33+4
 665 002a 1344     	 add r3,r3,r2
 666 002c BB60     	 str r3,[r7,#8]
 224:../soes/esc_foe.c ****          foembx->mbxheader.length = htoes (ESC_FOEHSIZE);   /* Don't bother with error text for now
 667              	 .loc 1 224 0
 668 002e BB68     	 ldr r3,[r7,#8]
 669 0030 0022     	 movs r2,#0
 670 0032 42F00602 	 orr r2,r2,#6
 671 0036 1A70     	 strb r2,[r3]
 672 0038 0022     	 movs r2,#0
 673 003a 5A70     	 strb r2,[r3,#1]
 225:../soes/esc_foe.c ****          foembx->mbxheader.mbxtype = MBXFOE;
 674              	 .loc 1 225 0
 675 003c BA68     	 ldr r2,[r7,#8]
 676 003e 5379     	 ldrb r3,[r2,#5]
 677 0040 0421     	 movs r1,#4
 678 0042 61F30303 	 bfi r3,r1,#0,#4
 679 0046 5371     	 strb r3,[r2,#5]
 226:../soes/esc_foe.c ****          foembx->foeheader.opcode = FOE_OP_ERR;
 680              	 .loc 1 226 0
 681 0048 BB68     	 ldr r3,[r7,#8]
 682 004a 0522     	 movs r2,#5
 683 004c 9A71     	 strb r2,[r3,#6]
 227:../soes/esc_foe.c ****          foembx->foeheader.errorcode = htoel (code);
 684              	 .loc 1 227 0
 685 004e BB68     	 ldr r3,[r7,#8]
 686 0050 7A68     	 ldr r2,[r7,#4]
 687 0052 9A60     	 str r2,[r3,#8]
 228:../soes/esc_foe.c ****          MBXcontrol[mbxhandle].state = MBXstate_outreq;
 688              	 .loc 1 228 0
 689 0054 FB7B     	 ldrb r3,[r7,#15]
 690 0056 064A     	 ldr r2,.L33+8
 691 0058 0321     	 movs r1,#3
 692 005a D154     	 strb r1,[r2,r3]
 693              	.L32:
 229:../soes/esc_foe.c ****       }
 230:../soes/esc_foe.c ****       /* Nothing we can do if we can't get an outbound mailbox. */
 231:../soes/esc_foe.c ****    }
 232:../soes/esc_foe.c ****    DPRINT("FOE_abort: 0x%X\n", code);
 233:../soes/esc_foe.c ****    FOE_init ();
 694              	 .loc 1 233 0
 695 005c FFF7FEFF 	 bl FOE_init
 234:../soes/esc_foe.c **** }
 696              	 .loc 1 234 0
 697 0060 1037     	 adds r7,r7,#16
 698              	.LCFI22:
 699              	 .cfi_def_cfa_offset 8
 700 0062 BD46     	 mov sp,r7
 701              	.LCFI23:
 702              	 .cfi_def_cfa_register 13
 703              	 
 704 0064 80BD     	 pop {r7,pc}
 705              	.L34:
 706 0066 00BF     	 .align 2
 707              	.L33:
 708 0068 00000000 	 .word ESCvar
 709 006c 00000000 	 .word MBX
 710 0070 00000000 	 .word MBXcontrol
 711              	 .cfi_endproc
 712              	.LFE4:
 714              	 .section .text.FOE_send_ack,"ax",%progbits
 715              	 .align 2
 716              	 .global FOE_send_ack
 717              	 .thumb
 718              	 .thumb_func
 720              	FOE_send_ack:
 721              	.LFB5:
 235:../soes/esc_foe.c **** 
 236:../soes/esc_foe.c **** #ifdef FOE_READ_SUPPORTED
 237:../soes/esc_foe.c **** /** Sends an FoE data frame, returning the number of data bytes
 238:../soes/esc_foe.c ****  * written or an error number.
 239:../soes/esc_foe.c ****  * Error numbers will be greater than FOE_DATA_SIZE.
 240:../soes/esc_foe.c **** 
 241:../soes/esc_foe.c ****  * @param[in] data   = pointer to buffer
 242:../soes/esc_foe.c ****  * @param[in] length = length of data to read
 243:../soes/esc_foe.c **** 
 244:../soes/esc_foe.c ****  * @return Number of data bytes written or an error number. Error numbers
 245:../soes/esc_foe.c ****  * will be greater than FOE_DATA_SIZE.
 246:../soes/esc_foe.c ****  */
 247:../soes/esc_foe.c **** int FOE_send_data_packet ()
 248:../soes/esc_foe.c **** {
 249:../soes/esc_foe.c ****    _FOE *foembx;
 250:../soes/esc_foe.c ****    uint16_t data_len;
 251:../soes/esc_foe.c ****    uint8_t mbxhandle;
 252:../soes/esc_foe.c **** 
 253:../soes/esc_foe.c ****    mbxhandle = ESC_claimbuffer ();
 254:../soes/esc_foe.c ****    if (mbxhandle)
 255:../soes/esc_foe.c ****    {
 256:../soes/esc_foe.c ****       foembx = (_FOE *) &MBX[mbxhandle * ESC_MBXSIZE];
 257:../soes/esc_foe.c ****       data_len = FOE_fread (foembx->data, FOE_DATA_SIZE);
 258:../soes/esc_foe.c ****       foembx->foeheader.opcode = FOE_OP_DATA;
 259:../soes/esc_foe.c ****       foembx->foeheader.packetnumber = htoel (FOEvar.foepacket);
 260:../soes/esc_foe.c ****       FOEvar.foepacket++;
 261:../soes/esc_foe.c ****       foembx->mbxheader.length = htoes (data_len + FOEHSIZE);
 262:../soes/esc_foe.c ****       foembx->mbxheader.mbxtype = MBXFOE;
 263:../soes/esc_foe.c ****       /* Mark the outbound mailbox as filled. */
 264:../soes/esc_foe.c ****       MBXcontrol[mbxhandle].state = MBXstate_outreq;
 265:../soes/esc_foe.c ****       return data_len;
 266:../soes/esc_foe.c ****    }
 267:../soes/esc_foe.c ****    else
 268:../soes/esc_foe.c ****    {
 269:../soes/esc_foe.c ****       return FOE_ERR_PROGERROR;
 270:../soes/esc_foe.c ****    }
 271:../soes/esc_foe.c **** }
 272:../soes/esc_foe.c **** #endif
 273:../soes/esc_foe.c **** 
 274:../soes/esc_foe.c **** /** Sends an FoE ack data frame.
 275:../soes/esc_foe.c **** 
 276:../soes/esc_foe.c ****  * @return 0= or error number.
 277:../soes/esc_foe.c ****  */
 278:../soes/esc_foe.c **** int FOE_send_ack ()
 279:../soes/esc_foe.c **** {
 722              	 .loc 1 279 0
 723              	 .cfi_startproc
 724              	 
 725              	 
 726 0000 80B5     	 push {r7,lr}
 727              	.LCFI24:
 728              	 .cfi_def_cfa_offset 8
 729              	 .cfi_offset 7,-8
 730              	 .cfi_offset 14,-4
 731 0002 82B0     	 sub sp,sp,#8
 732              	.LCFI25:
 733              	 .cfi_def_cfa_offset 16
 734 0004 00AF     	 add r7,sp,#0
 735              	.LCFI26:
 736              	 .cfi_def_cfa_register 7
 280:../soes/esc_foe.c ****    _FOE *foembx;
 281:../soes/esc_foe.c ****    uint8_t mbxhandle;
 282:../soes/esc_foe.c **** 
 283:../soes/esc_foe.c ****    mbxhandle = ESC_claimbuffer ();
 737              	 .loc 1 283 0
 738 0006 FFF7FEFF 	 bl ESC_claimbuffer
 739 000a 0346     	 mov r3,r0
 740 000c FB71     	 strb r3,[r7,#7]
 284:../soes/esc_foe.c ****    if (mbxhandle)
 741              	 .loc 1 284 0
 742 000e FB79     	 ldrb r3,[r7,#7]
 743 0010 002B     	 cmp r3,#0
 744 0012 2AD0     	 beq .L36
 285:../soes/esc_foe.c ****    {
 286:../soes/esc_foe.c ****       DPRINT("FOE_send_ack\n");
 287:../soes/esc_foe.c ****       foembx = (_FOE *) &MBX[mbxhandle * ESC_MBXSIZE];
 745              	 .loc 1 287 0
 746 0014 FB79     	 ldrb r3,[r7,#7]
 747 0016 184A     	 ldr r2,.L38
 748 0018 D2F86D20 	 ldr r2,[r2,#109]
 749 001c 02FB03F3 	 mul r3,r2,r3
 750 0020 164A     	 ldr r2,.L38+4
 751 0022 1344     	 add r3,r3,r2
 752 0024 3B60     	 str r3,[r7]
 288:../soes/esc_foe.c ****       foembx->mbxheader.length = htoes (ESC_FOEHSIZE);
 753              	 .loc 1 288 0
 754 0026 3B68     	 ldr r3,[r7]
 755 0028 0022     	 movs r2,#0
 756 002a 42F00602 	 orr r2,r2,#6
 757 002e 1A70     	 strb r2,[r3]
 758 0030 0022     	 movs r2,#0
 759 0032 5A70     	 strb r2,[r3,#1]
 289:../soes/esc_foe.c ****       foembx->mbxheader.mbxtype = MBXFOE;
 760              	 .loc 1 289 0
 761 0034 3A68     	 ldr r2,[r7]
 762 0036 5379     	 ldrb r3,[r2,#5]
 763 0038 0421     	 movs r1,#4
 764 003a 61F30303 	 bfi r3,r1,#0,#4
 765 003e 5371     	 strb r3,[r2,#5]
 290:../soes/esc_foe.c ****       foembx->foeheader.opcode = FOE_OP_ACK;
 766              	 .loc 1 290 0
 767 0040 3B68     	 ldr r3,[r7]
 768 0042 0422     	 movs r2,#4
 769 0044 9A71     	 strb r2,[r3,#6]
 291:../soes/esc_foe.c ****       foembx->foeheader.packetnumber = htoel (FOEvar.foepacket);
 770              	 .loc 1 291 0
 771 0046 0E4B     	 ldr r3,.L38+8
 772 0048 D3F80320 	 ldr r2,[r3,#3]
 773 004c 3B68     	 ldr r3,[r7]
 774 004e 9A60     	 str r2,[r3,#8]
 292:../soes/esc_foe.c ****       FOEvar.foepacket++;
 775              	 .loc 1 292 0
 776 0050 0B4B     	 ldr r3,.L38+8
 777 0052 D3F80330 	 ldr r3,[r3,#3]
 778 0056 0133     	 adds r3,r3,#1
 779 0058 094A     	 ldr r2,.L38+8
 780 005a C2F80330 	 str r3,[r2,#3]
 293:../soes/esc_foe.c ****       MBXcontrol[mbxhandle].state = MBXstate_outreq;
 781              	 .loc 1 293 0
 782 005e FB79     	 ldrb r3,[r7,#7]
 783 0060 084A     	 ldr r2,.L38+12
 784 0062 0321     	 movs r1,#3
 785 0064 D154     	 strb r1,[r2,r3]
 294:../soes/esc_foe.c ****       return 0;
 786              	 .loc 1 294 0
 787 0066 0023     	 movs r3,#0
 788 0068 01E0     	 b .L37
 789              	.L36:
 295:../soes/esc_foe.c ****    }
 296:../soes/esc_foe.c ****    else
 297:../soes/esc_foe.c ****    {
 298:../soes/esc_foe.c ****       DPRINT("ERROR:FOE_send_ack\n");
 299:../soes/esc_foe.c ****       return FOE_ERR_PROGERROR;
 790              	 .loc 1 299 0
 791 006a 48F20B03 	 movw r3,#32779
 792              	.L37:
 300:../soes/esc_foe.c ****    }
 301:../soes/esc_foe.c **** }
 793              	 .loc 1 301 0
 794 006e 1846     	 mov r0,r3
 795 0070 0837     	 adds r7,r7,#8
 796              	.LCFI27:
 797              	 .cfi_def_cfa_offset 8
 798 0072 BD46     	 mov sp,r7
 799              	.LCFI28:
 800              	 .cfi_def_cfa_register 13
 801              	 
 802 0074 80BD     	 pop {r7,pc}
 803              	.L39:
 804 0076 00BF     	 .align 2
 805              	.L38:
 806 0078 00000000 	 .word ESCvar
 807 007c 00000000 	 .word MBX
 808 0080 00000000 	 .word FOEvar
 809 0084 00000000 	 .word MBXcontrol
 810              	 .cfi_endproc
 811              	.LFE5:
 813              	 .section .text.FOE_read,"ax",%progbits
 814              	 .align 2
 815              	 .global FOE_read
 816              	 .thumb
 817              	 .thumb_func
 819              	FOE_read:
 820              	.LFB6:
 302:../soes/esc_foe.c **** 
 303:../soes/esc_foe.c **** /* Handlers for various FoE states. */
 304:../soes/esc_foe.c **** 
 305:../soes/esc_foe.c **** #ifdef FOE_READ_SUPPORTED
 306:../soes/esc_foe.c **** /** FoE read request handler. Starts with Initialize, Open and Sending one frame.
 307:../soes/esc_foe.c ****  * When first frame have been sent we will send data from Ack.
 308:../soes/esc_foe.c ****  * On error we will send FOE Abort.
 309:../soes/esc_foe.c ****  *
 310:../soes/esc_foe.c ****  */
 311:../soes/esc_foe.c **** void FOE_read ()
 312:../soes/esc_foe.c **** {
 313:../soes/esc_foe.c ****    _FOE *foembx;
 314:../soes/esc_foe.c ****    uint32_t data_len;
 315:../soes/esc_foe.c ****    uint32_t password;
 316:../soes/esc_foe.c ****    int res;
 317:../soes/esc_foe.c **** 
 318:../soes/esc_foe.c ****    if (FOEvar.foestate != FOE_READY)
 319:../soes/esc_foe.c ****    {
 320:../soes/esc_foe.c ****       FOE_abort (FOE_ERR_ILLEGAL);
 321:../soes/esc_foe.c ****       return;
 322:../soes/esc_foe.c ****    }
 323:../soes/esc_foe.c **** 
 324:../soes/esc_foe.c ****    FOE_init ();
 325:../soes/esc_foe.c ****    foembx = (_FOE *) &MBX[0];
 326:../soes/esc_foe.c ****    /* Get the length of the file name in octets. */
 327:../soes/esc_foe.c ****    data_len = etohs (foembx->mbxheader.length) - FOEHSIZE;
 328:../soes/esc_foe.c ****    password = etohl (foembx->foeheader.password);
 329:../soes/esc_foe.c **** 
 330:../soes/esc_foe.c ****    res = FOE_fopen (foembx->filename, data_len, password, FOE_OP_RRQ);
 331:../soes/esc_foe.c ****    if (res == 0)
 332:../soes/esc_foe.c ****    {
 333:../soes/esc_foe.c ****       FOEvar.foepacket = 1;
 334:../soes/esc_foe.c ****       /*
 335:../soes/esc_foe.c ****        * Attempt to send the packet
 336:../soes/esc_foe.c ****        */
 337:../soes/esc_foe.c ****       res = FOE_send_data_packet ();
 338:../soes/esc_foe.c ****       if (res <= (int)FOE_DATA_SIZE)
 339:../soes/esc_foe.c ****       {
 340:../soes/esc_foe.c ****          FOEvar.foestate = FOE_WAIT_FOR_ACK;
 341:../soes/esc_foe.c ****       }
 342:../soes/esc_foe.c ****       else
 343:../soes/esc_foe.c ****       {
 344:../soes/esc_foe.c ****          FOE_abort (res);
 345:../soes/esc_foe.c ****       }
 346:../soes/esc_foe.c ****    }
 347:../soes/esc_foe.c ****    else
 348:../soes/esc_foe.c ****    {
 349:../soes/esc_foe.c ****       FOE_abort (res);
 350:../soes/esc_foe.c ****    }
 351:../soes/esc_foe.c **** }
 352:../soes/esc_foe.c **** #else
 353:../soes/esc_foe.c **** void FOE_read()
 354:../soes/esc_foe.c **** {
 821              	 .loc 1 354 0
 822              	 .cfi_startproc
 823              	 
 824              	 
 825 0000 80B5     	 push {r7,lr}
 826              	.LCFI29:
 827              	 .cfi_def_cfa_offset 8
 828              	 .cfi_offset 7,-8
 829              	 .cfi_offset 14,-4
 830 0002 00AF     	 add r7,sp,#0
 831              	.LCFI30:
 832              	 .cfi_def_cfa_register 7
 355:../soes/esc_foe.c ****    FOE_abort(FOE_ERR_NOTDEFINED);
 833              	 .loc 1 355 0
 834 0004 4FF40040 	 mov r0,#32768
 835 0008 FFF7FEFF 	 bl FOE_abort
 356:../soes/esc_foe.c **** }
 836              	 .loc 1 356 0
 837 000c 80BD     	 pop {r7,pc}
 838              	 .cfi_endproc
 839              	.LFE6:
 841 000e 00BF     	 .section .text.FOE_write,"ax",%progbits
 842              	 .align 2
 843              	 .global FOE_write
 844              	 .thumb
 845              	 .thumb_func
 847              	FOE_write:
 848              	.LFB7:
 357:../soes/esc_foe.c **** #endif
 358:../soes/esc_foe.c **** 
 359:../soes/esc_foe.c **** #ifdef FOE_READ_SUPPORTED
 360:../soes/esc_foe.c **** /** FoE data ack handler. Will continue sending next frame until finished.
 361:../soes/esc_foe.c ****  * On error we will send FOE Abort.
 362:../soes/esc_foe.c ****  */
 363:../soes/esc_foe.c **** void FOE_ack ()
 364:../soes/esc_foe.c **** {
 365:../soes/esc_foe.c ****    int res;
 366:../soes/esc_foe.c **** 
 367:../soes/esc_foe.c ****    /* Make sure we're able to take this. */
 368:../soes/esc_foe.c ****    if (FOEvar.foestate == FOE_WAIT_FOR_FINAL_ACK)
 369:../soes/esc_foe.c ****    {
 370:../soes/esc_foe.c ****       /* Move us back to ready state. */
 371:../soes/esc_foe.c ****       FOE_init ();
 372:../soes/esc_foe.c ****       return;
 373:../soes/esc_foe.c ****    }
 374:../soes/esc_foe.c ****    else if (FOEvar.foestate != FOE_WAIT_FOR_ACK)
 375:../soes/esc_foe.c ****    {
 376:../soes/esc_foe.c ****       FOE_abort (FOE_ERR_ILLEGAL);
 377:../soes/esc_foe.c ****       return;
 378:../soes/esc_foe.c ****    }
 379:../soes/esc_foe.c ****    res = FOE_send_data_packet ();
 380:../soes/esc_foe.c ****    if (res < (int) FOE_DATA_SIZE)
 381:../soes/esc_foe.c ****    {
 382:../soes/esc_foe.c ****       FOEvar.foestate = FOE_WAIT_FOR_FINAL_ACK;
 383:../soes/esc_foe.c ****    }
 384:../soes/esc_foe.c ****    else if (res >= FOE_ERR_NOTDEFINED)
 385:../soes/esc_foe.c ****    {
 386:../soes/esc_foe.c ****       FOE_abort (FOE_ERR_PROGERROR);
 387:../soes/esc_foe.c ****    }
 388:../soes/esc_foe.c **** }
 389:../soes/esc_foe.c **** #endif
 390:../soes/esc_foe.c **** 
 391:../soes/esc_foe.c **** /** FoE write request handler. Starts with Initialize, Open and Ack that we can/will
 392:../soes/esc_foe.c ****  * receive data. On error we will send FOE Abort.
 393:../soes/esc_foe.c ****  *
 394:../soes/esc_foe.c ****  */
 395:../soes/esc_foe.c **** void FOE_write ()
 396:../soes/esc_foe.c **** {
 849              	 .loc 1 396 0
 850              	 .cfi_startproc
 851              	 
 852              	 
 853 0000 80B5     	 push {r7,lr}
 854              	.LCFI31:
 855              	 .cfi_def_cfa_offset 8
 856              	 .cfi_offset 7,-8
 857              	 .cfi_offset 14,-4
 858 0002 84B0     	 sub sp,sp,#16
 859              	.LCFI32:
 860              	 .cfi_def_cfa_offset 24
 861 0004 00AF     	 add r7,sp,#0
 862              	.LCFI33:
 863              	 .cfi_def_cfa_register 7
 397:../soes/esc_foe.c ****    _FOE *foembx;
 398:../soes/esc_foe.c ****    uint32_t data_len;
 399:../soes/esc_foe.c ****    uint32_t password;
 400:../soes/esc_foe.c ****    int res;
 401:../soes/esc_foe.c **** 
 402:../soes/esc_foe.c ****    if (FOEvar.foestate != FOE_READY)
 864              	 .loc 1 402 0
 865 0006 1D4B     	 ldr r3,.L47
 866 0008 1B78     	 ldrb r3,[r3]
 867 000a 002B     	 cmp r3,#0
 868 000c 04D0     	 beq .L42
 403:../soes/esc_foe.c ****    {
 404:../soes/esc_foe.c ****       FOE_abort (FOE_ERR_ILLEGAL);
 869              	 .loc 1 404 0
 870 000e 48F20400 	 movw r0,#32772
 871 0012 FFF7FEFF 	 bl FOE_abort
 405:../soes/esc_foe.c ****       return;
 872              	 .loc 1 405 0
 873 0016 2DE0     	 b .L41
 874              	.L42:
 406:../soes/esc_foe.c ****    }
 407:../soes/esc_foe.c **** 
 408:../soes/esc_foe.c ****    FOE_init ();
 875              	 .loc 1 408 0
 876 0018 FFF7FEFF 	 bl FOE_init
 409:../soes/esc_foe.c ****    foembx = (_FOE *) &MBX[0];
 877              	 .loc 1 409 0
 878 001c 184B     	 ldr r3,.L47+4
 879 001e FB60     	 str r3,[r7,#12]
 410:../soes/esc_foe.c ****    data_len = etohs (foembx->mbxheader.length) - ESC_FOEHSIZE;
 880              	 .loc 1 410 0
 881 0020 FB68     	 ldr r3,[r7,#12]
 882 0022 1B88     	 ldrh r3,[r3]
 883 0024 9BB2     	 uxth r3,r3
 884 0026 063B     	 subs r3,r3,#6
 885 0028 BB60     	 str r3,[r7,#8]
 411:../soes/esc_foe.c ****    password = etohl (foembx->foeheader.password);
 886              	 .loc 1 411 0
 887 002a FB68     	 ldr r3,[r7,#12]
 888 002c 9B68     	 ldr r3,[r3,#8]
 889 002e 7B60     	 str r3,[r7,#4]
 412:../soes/esc_foe.c **** 
 413:../soes/esc_foe.c ****    /* Get an address we can write the file to, if possible. */
 414:../soes/esc_foe.c ****    res = FOE_fopen (foembx->filename, data_len, password, FOE_OP_WRQ);
 890              	 .loc 1 414 0
 891 0030 FB68     	 ldr r3,[r7,#12]
 892 0032 03F10C02 	 add r2,r3,#12
 893 0036 BB68     	 ldr r3,[r7,#8]
 894 0038 DBB2     	 uxtb r3,r3
 895 003a 1046     	 mov r0,r2
 896 003c 1946     	 mov r1,r3
 897 003e 7A68     	 ldr r2,[r7,#4]
 898 0040 0223     	 movs r3,#2
 899 0042 FFF7FEFF 	 bl FOE_fopen
 900 0046 3860     	 str r0,[r7]
 415:../soes/esc_foe.c ****    DPRINT("FOE_write\n");
 416:../soes/esc_foe.c ****    if (res == 0)
 901              	 .loc 1 416 0
 902 0048 3B68     	 ldr r3,[r7]
 903 004a 002B     	 cmp r3,#0
 904 004c 0ED1     	 bne .L44
 417:../soes/esc_foe.c ****    {
 418:../soes/esc_foe.c ****       res = FOE_send_ack ();
 905              	 .loc 1 418 0
 906 004e FFF7FEFF 	 bl FOE_send_ack
 907 0052 3860     	 str r0,[r7]
 419:../soes/esc_foe.c ****       if (res)
 908              	 .loc 1 419 0
 909 0054 3B68     	 ldr r3,[r7]
 910 0056 002B     	 cmp r3,#0
 911 0058 04D0     	 beq .L45
 420:../soes/esc_foe.c ****       {
 421:../soes/esc_foe.c ****          FOE_abort (res);
 912              	 .loc 1 421 0
 913 005a 3B68     	 ldr r3,[r7]
 914 005c 1846     	 mov r0,r3
 915 005e FFF7FEFF 	 bl FOE_abort
 916 0062 07E0     	 b .L41
 917              	.L45:
 422:../soes/esc_foe.c ****       }
 423:../soes/esc_foe.c ****       else
 424:../soes/esc_foe.c ****       {
 425:../soes/esc_foe.c ****          FOEvar.foestate = FOE_WAIT_FOR_DATA;
 918              	 .loc 1 425 0
 919 0064 054B     	 ldr r3,.L47
 920 0066 0322     	 movs r2,#3
 921 0068 1A70     	 strb r2,[r3]
 922 006a 03E0     	 b .L41
 923              	.L44:
 426:../soes/esc_foe.c ****       }
 427:../soes/esc_foe.c ****    }
 428:../soes/esc_foe.c ****    else
 429:../soes/esc_foe.c ****    {
 430:../soes/esc_foe.c ****       FOE_abort (res);
 924              	 .loc 1 430 0
 925 006c 3B68     	 ldr r3,[r7]
 926 006e 1846     	 mov r0,r3
 927 0070 FFF7FEFF 	 bl FOE_abort
 928              	.L41:
 431:../soes/esc_foe.c ****    }
 432:../soes/esc_foe.c **** }
 929              	 .loc 1 432 0
 930 0074 1037     	 adds r7,r7,#16
 931              	.LCFI34:
 932              	 .cfi_def_cfa_offset 8
 933 0076 BD46     	 mov sp,r7
 934              	.LCFI35:
 935              	 .cfi_def_cfa_register 13
 936              	 
 937 0078 80BD     	 pop {r7,pc}
 938              	.L48:
 939 007a 00BF     	 .align 2
 940              	.L47:
 941 007c 00000000 	 .word FOEvar
 942 0080 00000000 	 .word MBX
 943              	 .cfi_endproc
 944              	.LFE7:
 946              	 .section .text.FOE_data,"ax",%progbits
 947              	 .align 2
 948              	 .global FOE_data
 949              	 .thumb
 950              	 .thumb_func
 952              	FOE_data:
 953              	.LFB8:
 433:../soes/esc_foe.c **** /** FoE data request handler. Validates and reads data until we're finsihed. Every
 434:../soes/esc_foe.c ****  * read frame follwed by an Ack frame. On error we will send FOE Abort.
 435:../soes/esc_foe.c ****  *
 436:../soes/esc_foe.c ****  */
 437:../soes/esc_foe.c **** void FOE_data ()
 438:../soes/esc_foe.c **** {
 954              	 .loc 1 438 0
 955              	 .cfi_startproc
 956              	 
 957              	 
 958 0000 80B5     	 push {r7,lr}
 959              	.LCFI36:
 960              	 .cfi_def_cfa_offset 8
 961              	 .cfi_offset 7,-8
 962              	 .cfi_offset 14,-4
 963 0002 86B0     	 sub sp,sp,#24
 964              	.LCFI37:
 965              	 .cfi_def_cfa_offset 32
 966 0004 00AF     	 add r7,sp,#0
 967              	.LCFI38:
 968              	 .cfi_def_cfa_register 7
 439:../soes/esc_foe.c ****    _FOE *foembx;
 440:../soes/esc_foe.c ****    uint32_t packet;
 441:../soes/esc_foe.c ****    uint16_t data_len, ncopied;
 442:../soes/esc_foe.c ****    int res;
 443:../soes/esc_foe.c **** 
 444:../soes/esc_foe.c ****    if(FOEvar.foestate != FOE_WAIT_FOR_DATA)
 969              	 .loc 1 444 0
 970 0006 3D4B     	 ldr r3,.L61
 971 0008 1B78     	 ldrb r3,[r3]
 972 000a 032B     	 cmp r3,#3
 973 000c 04D0     	 beq .L50
 445:../soes/esc_foe.c ****    {
 446:../soes/esc_foe.c ****       FOE_abort(FOE_ERR_ILLEGAL);
 974              	 .loc 1 446 0
 975 000e 48F20400 	 movw r0,#32772
 976 0012 FFF7FEFF 	 bl FOE_abort
 447:../soes/esc_foe.c ****       return;
 977              	 .loc 1 447 0
 978 0016 6DE0     	 b .L49
 979              	.L50:
 448:../soes/esc_foe.c ****    }
 449:../soes/esc_foe.c **** 
 450:../soes/esc_foe.c ****    foembx = (_FOE*)&MBX[0];
 980              	 .loc 1 450 0
 981 0018 394B     	 ldr r3,.L61+4
 982 001a 7B61     	 str r3,[r7,#20]
 451:../soes/esc_foe.c ****    data_len = etohs(foembx->mbxheader.length) - ESC_FOEHSIZE;
 983              	 .loc 1 451 0
 984 001c 7B69     	 ldr r3,[r7,#20]
 985 001e 1B88     	 ldrh r3,[r3]
 986 0020 9BB2     	 uxth r3,r3
 987 0022 063B     	 subs r3,r3,#6
 988 0024 7B82     	 strh r3,[r7,#18]
 452:../soes/esc_foe.c ****    packet = etohl(foembx->foeheader.packetnumber);
 989              	 .loc 1 452 0
 990 0026 7B69     	 ldr r3,[r7,#20]
 991 0028 9B68     	 ldr r3,[r3,#8]
 992 002a FB60     	 str r3,[r7,#12]
 453:../soes/esc_foe.c **** 
 454:../soes/esc_foe.c ****    if (packet != FOEvar.foepacket)
 993              	 .loc 1 454 0
 994 002c 334B     	 ldr r3,.L61
 995 002e D3F80320 	 ldr r2,[r3,#3]
 996 0032 FB68     	 ldr r3,[r7,#12]
 997 0034 9A42     	 cmp r2,r3
 998 0036 04D0     	 beq .L52
 455:../soes/esc_foe.c ****    {
 456:../soes/esc_foe.c ****       DPRINT("FOE_data packet error,packet: %d foeheader.packet: %d\n",packet,FOEvar.foepacket);
 457:../soes/esc_foe.c ****       FOE_abort (FOE_ERR_PACKETNO);
 999              	 .loc 1 457 0
 1000 0038 48F20500 	 movw r0,#32773
 1001 003c FFF7FEFF 	 bl FOE_abort
 1002 0040 58E0     	 b .L49
 1003              	.L52:
 458:../soes/esc_foe.c ****    }
 459:../soes/esc_foe.c ****    else if (data_len == 0)
 1004              	 .loc 1 459 0
 1005 0042 7B8A     	 ldrh r3,[r7,#18]
 1006 0044 002B     	 cmp r3,#0
 1007 0046 07D1     	 bne .L53
 460:../soes/esc_foe.c ****    {
 461:../soes/esc_foe.c ****       DPRINT("FOE_data completed\n");
 462:../soes/esc_foe.c ****       FOE_fclose ();
 1008              	 .loc 1 462 0
 1009 0048 FFF7FEFF 	 bl FOE_fclose
 463:../soes/esc_foe.c ****       res = FOE_send_ack ();
 1010              	 .loc 1 463 0
 1011 004c FFF7FEFF 	 bl FOE_send_ack
 1012 0050 B860     	 str r0,[r7,#8]
 464:../soes/esc_foe.c ****       FOE_init ();
 1013              	 .loc 1 464 0
 1014 0052 FFF7FEFF 	 bl FOE_init
 1015 0056 4DE0     	 b .L49
 1016              	.L53:
 465:../soes/esc_foe.c ****    }
 466:../soes/esc_foe.c ****    else if (FOEvar.fposition + data_len > FOEvar.fend)
 1017              	 .loc 1 466 0
 1018 0058 284B     	 ldr r3,.L61
 1019 005a D3F80720 	 ldr r2,[r3,#7]
 1020 005e 7B8A     	 ldrh r3,[r7,#18]
 1021 0060 1A44     	 add r2,r2,r3
 1022 0062 264B     	 ldr r3,.L61
 1023 0064 D3F80F30 	 ldr r3,[r3,#15]
 1024 0068 9A42     	 cmp r2,r3
 1025 006a 04D9     	 bls .L54
 467:../soes/esc_foe.c ****    {
 468:../soes/esc_foe.c ****       DPRINT("FOE_data disk full\n");
 469:../soes/esc_foe.c ****       FOE_abort (FOE_ERR_DISKFULL);
 1026              	 .loc 1 469 0
 1027 006c 48F20300 	 movw r0,#32771
 1028 0070 FFF7FEFF 	 bl FOE_abort
 1029 0074 3EE0     	 b .L49
 1030              	.L54:
 470:../soes/esc_foe.c ****    }
 471:../soes/esc_foe.c ****    else
 472:../soes/esc_foe.c ****    {
 473:../soes/esc_foe.c ****       ncopied = FOE_fwrite (foembx->data, data_len);
 1031              	 .loc 1 473 0
 1032 0076 7B69     	 ldr r3,[r7,#20]
 1033 0078 03F10C02 	 add r2,r3,#12
 1034 007c 7B8A     	 ldrh r3,[r7,#18]
 1035 007e 1046     	 mov r0,r2
 1036 0080 1946     	 mov r1,r3
 1037 0082 FFF7FEFF 	 bl FOE_fwrite
 1038 0086 0346     	 mov r3,r0
 1039 0088 FB80     	 strh r3,[r7,#6]
 474:../soes/esc_foe.c ****       if (!ncopied)
 1040              	 .loc 1 474 0
 1041 008a FB88     	 ldrh r3,[r7,#6]
 1042 008c 002B     	 cmp r3,#0
 1043 008e 04D1     	 bne .L55
 475:../soes/esc_foe.c ****       {
 476:../soes/esc_foe.c ****          DPRINT("FOE_data no copied\n");
 477:../soes/esc_foe.c ****          FOE_abort (FOE_ERR_PROGERROR);
 1044              	 .loc 1 477 0
 1045 0090 48F20B00 	 movw r0,#32779
 1046 0094 FFF7FEFF 	 bl FOE_abort
 1047 0098 2CE0     	 b .L49
 1048              	.L55:
 478:../soes/esc_foe.c ****       }
 479:../soes/esc_foe.c ****       else if (data_len == ESC_FOE_DATA_SIZE)
 1049              	 .loc 1 479 0
 1050 009a 7A8A     	 ldrh r2,[r7,#18]
 1051 009c 194B     	 ldr r3,.L61+8
 1052 009e D3F86D30 	 ldr r3,[r3,#109]
 1053 00a2 0C3B     	 subs r3,r3,#12
 1054 00a4 9A42     	 cmp r2,r3
 1055 00a6 12D1     	 bne .L56
 480:../soes/esc_foe.c ****       {
 481:../soes/esc_foe.c ****          DPRINT("FOE_data data_len == FOE_DATA_SIZE\n");
 482:../soes/esc_foe.c ****          if (ncopied != data_len)
 1056              	 .loc 1 482 0
 1057 00a8 FA88     	 ldrh r2,[r7,#6]
 1058 00aa 7B8A     	 ldrh r3,[r7,#18]
 1059 00ac 9A42     	 cmp r2,r3
 1060 00ae 03D0     	 beq .L57
 483:../soes/esc_foe.c ****          {
 484:../soes/esc_foe.c ****             DPRINT("FOE_data only %d of %d copied\n",ncopied, data_len);
 485:../soes/esc_foe.c ****             FOE_abort (FOE_ERR_PROGERROR);
 1061              	 .loc 1 485 0
 1062 00b0 48F20B00 	 movw r0,#32779
 1063 00b4 FFF7FEFF 	 bl FOE_abort
 1064              	.L57:
 486:../soes/esc_foe.c ****          }
 487:../soes/esc_foe.c ****          res = FOE_send_ack ();
 1065              	 .loc 1 487 0
 1066 00b8 FFF7FEFF 	 bl FOE_send_ack
 1067 00bc B860     	 str r0,[r7,#8]
 488:../soes/esc_foe.c ****          if (res)
 1068              	 .loc 1 488 0
 1069 00be BB68     	 ldr r3,[r7,#8]
 1070 00c0 002B     	 cmp r3,#0
 1071 00c2 17D0     	 beq .L49
 489:../soes/esc_foe.c ****          {
 490:../soes/esc_foe.c ****             FOE_abort (res);
 1072              	 .loc 1 490 0
 1073 00c4 BB68     	 ldr r3,[r7,#8]
 1074 00c6 1846     	 mov r0,r3
 1075 00c8 FFF7FEFF 	 bl FOE_abort
 1076 00cc 12E0     	 b .L49
 1077              	.L56:
 491:../soes/esc_foe.c ****          }
 492:../soes/esc_foe.c ****       }
 493:../soes/esc_foe.c ****       else
 494:../soes/esc_foe.c ****       {
 495:../soes/esc_foe.c ****          if ((ncopied != data_len) || FOE_fclose ())
 1078              	 .loc 1 495 0
 1079 00ce FA88     	 ldrh r2,[r7,#6]
 1080 00d0 7B8A     	 ldrh r3,[r7,#18]
 1081 00d2 9A42     	 cmp r2,r3
 1082 00d4 04D1     	 bne .L59
 1083              	 .loc 1 495 0 is_stmt 0 discriminator 1
 1084 00d6 FFF7FEFF 	 bl FOE_fclose
 1085 00da 0346     	 mov r3,r0
 1086 00dc 002B     	 cmp r3,#0
 1087 00de 04D0     	 beq .L60
 1088              	.L59:
 496:../soes/esc_foe.c ****          {
 497:../soes/esc_foe.c ****             DPRINT("FOE_fclose failed to write extra buffer\n");
 498:../soes/esc_foe.c ****             FOE_abort (FOE_ERR_PROGERROR);
 1089              	 .loc 1 498 0 is_stmt 1
 1090 00e0 48F20B00 	 movw r0,#32779
 1091 00e4 FFF7FEFF 	 bl FOE_abort
 1092 00e8 04E0     	 b .L49
 1093              	.L60:
 499:../soes/esc_foe.c ****          }
 500:../soes/esc_foe.c ****          else
 501:../soes/esc_foe.c ****          {
 502:../soes/esc_foe.c ****             DPRINT("FOE_data completed\n");
 503:../soes/esc_foe.c ****             res = FOE_send_ack ();
 1094              	 .loc 1 503 0
 1095 00ea FFF7FEFF 	 bl FOE_send_ack
 1096 00ee B860     	 str r0,[r7,#8]
 504:../soes/esc_foe.c ****             FOE_init ();
 1097              	 .loc 1 504 0
 1098 00f0 FFF7FEFF 	 bl FOE_init
 1099              	.L49:
 505:../soes/esc_foe.c ****          }
 506:../soes/esc_foe.c ****       }
 507:../soes/esc_foe.c ****    }
 508:../soes/esc_foe.c **** }
 1100              	 .loc 1 508 0
 1101 00f4 1837     	 adds r7,r7,#24
 1102              	.LCFI39:
 1103              	 .cfi_def_cfa_offset 8
 1104 00f6 BD46     	 mov sp,r7
 1105              	.LCFI40:
 1106              	 .cfi_def_cfa_register 13
 1107              	 
 1108 00f8 80BD     	 pop {r7,pc}
 1109              	.L62:
 1110 00fa 00BF     	 .align 2
 1111              	.L61:
 1112 00fc 00000000 	 .word FOEvar
 1113 0100 00000000 	 .word MBX
 1114 0104 00000000 	 .word ESCvar
 1115              	 .cfi_endproc
 1116              	.LFE8:
 1118              	 .section .text.FOE_error,"ax",%progbits
 1119              	 .align 2
 1120              	 .global FOE_error
 1121              	 .thumb
 1122              	 .thumb_func
 1124              	FOE_error:
 1125              	.LFB9:
 509:../soes/esc_foe.c **** 
 510:../soes/esc_foe.c **** #ifdef FOE_READ_SUPPORTED
 511:../soes/esc_foe.c **** /** FoE read request buys handler. Send an Ack of last frame again. On error
 512:../soes/esc_foe.c ****  * we will send FOE Abort.
 513:../soes/esc_foe.c ****  *
 514:../soes/esc_foe.c ****  */
 515:../soes/esc_foe.c **** void FOE_busy ()
 516:../soes/esc_foe.c **** {
 517:../soes/esc_foe.c ****    /* Only valid if we're servicing a read request. */
 518:../soes/esc_foe.c ****    if (FOEvar.foestate != FOE_WAIT_FOR_ACK)
 519:../soes/esc_foe.c ****    {
 520:../soes/esc_foe.c ****       FOE_abort (FOE_ERR_ILLEGAL);
 521:../soes/esc_foe.c ****    }
 522:../soes/esc_foe.c ****    else
 523:../soes/esc_foe.c ****    {
 524:../soes/esc_foe.c ****       /* Send the last part again. */
 525:../soes/esc_foe.c ****       FOEvar.fposition = FOEvar.fprevposition;
 526:../soes/esc_foe.c ****       FOEvar.foepacket--;
 527:../soes/esc_foe.c ****       FOE_ack ();
 528:../soes/esc_foe.c ****    }
 529:../soes/esc_foe.c **** }
 530:../soes/esc_foe.c **** #endif
 531:../soes/esc_foe.c **** 
 532:../soes/esc_foe.c **** /** FoE error requesthandler. Send an FOE Abort.
 533:../soes/esc_foe.c ****  *
 534:../soes/esc_foe.c ****  */
 535:../soes/esc_foe.c **** void FOE_error ()
 536:../soes/esc_foe.c **** {
 1126              	 .loc 1 536 0
 1127              	 .cfi_startproc
 1128              	 
 1129              	 
 1130 0000 80B5     	 push {r7,lr}
 1131              	.LCFI41:
 1132              	 .cfi_def_cfa_offset 8
 1133              	 .cfi_offset 7,-8
 1134              	 .cfi_offset 14,-4
 1135 0002 00AF     	 add r7,sp,#0
 1136              	.LCFI42:
 1137              	 .cfi_def_cfa_register 7
 537:../soes/esc_foe.c ****    /* Master panic! abort the transfer. */
 538:../soes/esc_foe.c ****    FOE_abort (0);
 1138              	 .loc 1 538 0
 1139 0004 0020     	 movs r0,#0
 1140 0006 FFF7FEFF 	 bl FOE_abort
 539:../soes/esc_foe.c **** }
 1141              	 .loc 1 539 0
 1142 000a 80BD     	 pop {r7,pc}
 1143              	 .cfi_endproc
 1144              	.LFE9:
 1146              	 .section .text.FOE_config,"ax",%progbits
 1147              	 .align 2
 1148              	 .global FOE_config
 1149              	 .thumb
 1150              	 .thumb_func
 1152              	FOE_config:
 1153              	.LFB10:
 540:../soes/esc_foe.c **** 
 541:../soes/esc_foe.c **** /** Function copying the application configuration variable
 542:../soes/esc_foe.c ****  * to the FoE module local pointer variable.
 543:../soes/esc_foe.c ****  *
 544:../soes/esc_foe.c ****  * @param[in] cfg       = Pointer to by the Application static declared
 545:../soes/esc_foe.c ****  * configuration variable holding application specific details.
 546:../soes/esc_foe.c ****  * @param[in] cfg_files = Pointer to by the Application static declared
 547:../soes/esc_foe.c ****  * configuration variable holding file specific details for files to be handled
 548:../soes/esc_foe.c ****  * by FoE
 549:../soes/esc_foe.c ****  */
 550:../soes/esc_foe.c **** void FOE_config (foe_cfg_t * cfg, foe_writefile_cfg_t * cfg_files)
 551:../soes/esc_foe.c **** {
 1154              	 .loc 1 551 0
 1155              	 .cfi_startproc
 1156              	 
 1157              	 
 1158              	 
 1159 0000 80B4     	 push {r7}
 1160              	.LCFI43:
 1161              	 .cfi_def_cfa_offset 4
 1162              	 .cfi_offset 7,-4
 1163 0002 83B0     	 sub sp,sp,#12
 1164              	.LCFI44:
 1165              	 .cfi_def_cfa_offset 16
 1166 0004 00AF     	 add r7,sp,#0
 1167              	.LCFI45:
 1168              	 .cfi_def_cfa_register 7
 1169 0006 7860     	 str r0,[r7,#4]
 1170 0008 3960     	 str r1,[r7]
 552:../soes/esc_foe.c ****    foe_cfg = cfg;
 1171              	 .loc 1 552 0
 1172 000a 054A     	 ldr r2,.L65
 1173 000c 7B68     	 ldr r3,[r7,#4]
 1174 000e 1360     	 str r3,[r2]
 553:../soes/esc_foe.c ****    foe_files = cfg_files;
 1175              	 .loc 1 553 0
 1176 0010 044A     	 ldr r2,.L65+4
 1177 0012 3B68     	 ldr r3,[r7]
 1178 0014 1360     	 str r3,[r2]
 554:../soes/esc_foe.c **** }
 1179              	 .loc 1 554 0
 1180 0016 0C37     	 adds r7,r7,#12
 1181              	.LCFI46:
 1182              	 .cfi_def_cfa_offset 4
 1183 0018 BD46     	 mov sp,r7
 1184              	.LCFI47:
 1185              	 .cfi_def_cfa_register 13
 1186              	 
 1187 001a 5DF8047B 	 ldr r7,[sp],#4
 1188              	.LCFI48:
 1189              	 .cfi_restore 7
 1190              	 .cfi_def_cfa_offset 0
 1191 001e 7047     	 bx lr
 1192              	.L66:
 1193              	 .align 2
 1194              	.L65:
 1195 0020 00000000 	 .word foe_cfg
 1196 0024 00000000 	 .word foe_files
 1197              	 .cfi_endproc
 1198              	.LFE10:
 1200              	 .section .text.ESC_foeprocess,"ax",%progbits
 1201              	 .align 2
 1202              	 .global ESC_foeprocess
 1203              	 .thumb
 1204              	 .thumb_func
 1206              	ESC_foeprocess:
 1207              	.LFB11:
 555:../soes/esc_foe.c **** 
 556:../soes/esc_foe.c **** /** Main FoE function checking the status on current mailbox buffers carrying
 557:../soes/esc_foe.c ****  * data, distributing the mailboxes to appropriate FOE functions depending
 558:../soes/esc_foe.c ****  * on requested opcode.
 559:../soes/esc_foe.c ****  * On Error an FoE Error or FoE Abort will be sent.
 560:../soes/esc_foe.c ****  */
 561:../soes/esc_foe.c **** void ESC_foeprocess (void)
 562:../soes/esc_foe.c **** {
 1208              	 .loc 1 562 0
 1209              	 .cfi_startproc
 1210              	 
 1211              	 
 1212 0000 80B5     	 push {r7,lr}
 1213              	.LCFI49:
 1214              	 .cfi_def_cfa_offset 8
 1215              	 .cfi_offset 7,-8
 1216              	 .cfi_offset 14,-4
 1217 0002 82B0     	 sub sp,sp,#8
 1218              	.LCFI50:
 1219              	 .cfi_def_cfa_offset 16
 1220 0004 00AF     	 add r7,sp,#0
 1221              	.LCFI51:
 1222              	 .cfi_def_cfa_register 7
 563:../soes/esc_foe.c ****    _MBXh *mbh;
 564:../soes/esc_foe.c ****    _FOE *foembx;
 565:../soes/esc_foe.c **** 
 566:../soes/esc_foe.c ****    if (ESCvar.MBXrun == 0)
 1223              	 .loc 1 566 0
 1224 0006 264B     	 ldr r3,.L78
 1225 0008 93F86C30 	 ldrb r3,[r3,#108]
 1226 000c 002B     	 cmp r3,#0
 1227 000e 00D1     	 bne .L68
 567:../soes/esc_foe.c ****    {
 568:../soes/esc_foe.c ****       return;
 1228              	 .loc 1 568 0
 1229 0010 42E0     	 b .L67
 1230              	.L68:
 569:../soes/esc_foe.c ****    }
 570:../soes/esc_foe.c ****    if (!ESCvar.xoe && (MBXcontrol[0].state == MBXstate_inclaim))
 1231              	 .loc 1 570 0
 1232 0012 234B     	 ldr r3,.L78
 1233 0014 93F89230 	 ldrb r3,[r3,#146]
 1234 0018 002B     	 cmp r3,#0
 1235 001a 10D1     	 bne .L70
 1236              	 .loc 1 570 0 is_stmt 0 discriminator 1
 1237 001c 214B     	 ldr r3,.L78+4
 1238 001e 1B78     	 ldrb r3,[r3]
 1239 0020 012B     	 cmp r3,#1
 1240 0022 0CD1     	 bne .L70
 571:../soes/esc_foe.c ****    {
 572:../soes/esc_foe.c ****       mbh = (_MBXh *) &MBX[0];
 1241              	 .loc 1 572 0 is_stmt 1
 1242 0024 204B     	 ldr r3,.L78+8
 1243 0026 7B60     	 str r3,[r7,#4]
 573:../soes/esc_foe.c ****       if (mbh->mbxtype == MBXFOE)
 1244              	 .loc 1 573 0
 1245 0028 7B68     	 ldr r3,[r7,#4]
 1246 002a 5B79     	 ldrb r3,[r3,#5]
 1247 002c 03F00F03 	 and r3,r3,#15
 1248 0030 DBB2     	 uxtb r3,r3
 1249 0032 042B     	 cmp r3,#4
 1250 0034 03D1     	 bne .L70
 574:../soes/esc_foe.c ****       {
 575:../soes/esc_foe.c ****          ESCvar.xoe = MBXFOE;
 1251              	 .loc 1 575 0
 1252 0036 1A4B     	 ldr r3,.L78
 1253 0038 0422     	 movs r2,#4
 1254 003a 83F89220 	 strb r2,[r3,#146]
 1255              	.L70:
 576:../soes/esc_foe.c ****       }
 577:../soes/esc_foe.c ****    }
 578:../soes/esc_foe.c ****    if (ESCvar.xoe == MBXFOE)
 1256              	 .loc 1 578 0
 1257 003e 184B     	 ldr r3,.L78
 1258 0040 93F89230 	 ldrb r3,[r3,#146]
 1259 0044 042B     	 cmp r3,#4
 1260 0046 27D1     	 bne .L67
 579:../soes/esc_foe.c ****    {
 580:../soes/esc_foe.c ****       foembx = (_FOE *) &MBX[0];
 1261              	 .loc 1 580 0
 1262 0048 174B     	 ldr r3,.L78+8
 1263 004a 3B60     	 str r3,[r7]
 581:../soes/esc_foe.c ****       /* Verify the size of the file data. */
 582:../soes/esc_foe.c ****       if (etohs (foembx->mbxheader.length) < ESC_FOEHSIZE)
 1264              	 .loc 1 582 0
 1265 004c 3B68     	 ldr r3,[r7]
 1266 004e 1B88     	 ldrh r3,[r3]
 1267 0050 9BB2     	 uxth r3,r3
 1268 0052 052B     	 cmp r3,#5
 1269 0054 03D8     	 bhi .L71
 583:../soes/esc_foe.c ****       {
 584:../soes/esc_foe.c ****          FOE_abort (MBXERR_SIZETOOSHORT);
 1270              	 .loc 1 584 0
 1271 0056 0620     	 movs r0,#6
 1272 0058 FFF7FEFF 	 bl FOE_abort
 1273 005c 15E0     	 b .L72
 1274              	.L71:
 585:../soes/esc_foe.c ****       }
 586:../soes/esc_foe.c ****       else
 587:../soes/esc_foe.c ****       {
 588:../soes/esc_foe.c ****          switch (foembx->foeheader.opcode)
 1275              	 .loc 1 588 0
 1276 005e 3B68     	 ldr r3,[r7]
 1277 0060 9B79     	 ldrb r3,[r3,#6]
 1278 0062 032B     	 cmp r3,#3
 1279 0064 06D0     	 beq .L74
 1280 0066 052B     	 cmp r3,#5
 1281 0068 07D0     	 beq .L75
 1282 006a 022B     	 cmp r3,#2
 1283 006c 08D1     	 bne .L77
 589:../soes/esc_foe.c ****          {
 590:../soes/esc_foe.c ****             case FOE_OP_WRQ:
 591:../soes/esc_foe.c ****             {
 592:../soes/esc_foe.c ****                DPRINT("FOE_OP_WRQ\n");
 593:../soes/esc_foe.c ****                FOE_write ();
 1284              	 .loc 1 593 0
 1285 006e FFF7FEFF 	 bl FOE_write
 594:../soes/esc_foe.c ****                break;
 1286              	 .loc 1 594 0
 1287 0072 0AE0     	 b .L72
 1288              	.L74:
 595:../soes/esc_foe.c ****             }
 596:../soes/esc_foe.c ****             case FOE_OP_DATA:
 597:../soes/esc_foe.c ****             {
 598:../soes/esc_foe.c ****                DPRINT("FOE_OP_DATA\n");
 599:../soes/esc_foe.c ****                FOE_data ();
 1289              	 .loc 1 599 0
 1290 0074 FFF7FEFF 	 bl FOE_data
 600:../soes/esc_foe.c ****                break;
 1291              	 .loc 1 600 0
 1292 0078 07E0     	 b .L72
 1293              	.L75:
 601:../soes/esc_foe.c ****             }
 602:../soes/esc_foe.c **** #ifdef FOE_READ_SUPPORTED
 603:../soes/esc_foe.c ****             case FOE_OP_RRQ:
 604:../soes/esc_foe.c ****             {
 605:../soes/esc_foe.c ****                DPRINT("FOE_OP_RRQ\n");
 606:../soes/esc_foe.c ****                FOE_read ();
 607:../soes/esc_foe.c ****                break;
 608:../soes/esc_foe.c ****             }
 609:../soes/esc_foe.c ****             case FOE_OP_ACK:
 610:../soes/esc_foe.c ****             {
 611:../soes/esc_foe.c ****                DPRINT("FOE_OP_ACK\n");
 612:../soes/esc_foe.c ****                FOE_ack ();
 613:../soes/esc_foe.c ****                break;
 614:../soes/esc_foe.c ****             }
 615:../soes/esc_foe.c **** 
 616:../soes/esc_foe.c ****             case FOE_OP_BUSY:
 617:../soes/esc_foe.c ****             {
 618:../soes/esc_foe.c ****                DPRINT("FOE_OP_BUSY\n");
 619:../soes/esc_foe.c ****                FOE_busy ();
 620:../soes/esc_foe.c ****                break;
 621:../soes/esc_foe.c ****             }
 622:../soes/esc_foe.c **** #endif
 623:../soes/esc_foe.c ****             case FOE_OP_ERR:
 624:../soes/esc_foe.c ****             {
 625:../soes/esc_foe.c ****                DPRINT("FOE_OP_ERR\n");
 626:../soes/esc_foe.c ****                FOE_error ();
 1294              	 .loc 1 626 0
 1295 007a FFF7FEFF 	 bl FOE_error
 627:../soes/esc_foe.c ****                break;
 1296              	 .loc 1 627 0
 1297 007e 04E0     	 b .L72
 1298              	.L77:
 628:../soes/esc_foe.c ****             }
 629:../soes/esc_foe.c ****             default:
 630:../soes/esc_foe.c ****             {
 631:../soes/esc_foe.c ****                DPRINT("FOE_ERR_NOTDEFINED\n");
 632:../soes/esc_foe.c ****                FOE_abort (FOE_ERR_NOTDEFINED);
 1299              	 .loc 1 632 0
 1300 0080 4FF40040 	 mov r0,#32768
 1301 0084 FFF7FEFF 	 bl FOE_abort
 633:../soes/esc_foe.c ****                break;
 1302              	 .loc 1 633 0
 1303 0088 00BF     	 nop
 1304              	.L72:
 634:../soes/esc_foe.c ****             }
 635:../soes/esc_foe.c ****          }
 636:../soes/esc_foe.c ****       }
 637:../soes/esc_foe.c ****       MBXcontrol[0].state = MBXstate_idle;
 1305              	 .loc 1 637 0
 1306 008a 064B     	 ldr r3,.L78+4
 1307 008c 0022     	 movs r2,#0
 1308 008e 1A70     	 strb r2,[r3]
 638:../soes/esc_foe.c ****       ESCvar.xoe = 0;
 1309              	 .loc 1 638 0
 1310 0090 034B     	 ldr r3,.L78
 1311 0092 0022     	 movs r2,#0
 1312 0094 83F89220 	 strb r2,[r3,#146]
 1313              	.L67:
 639:../soes/esc_foe.c ****    }
 640:../soes/esc_foe.c **** }
 1314              	 .loc 1 640 0
 1315 0098 0837     	 adds r7,r7,#8
 1316              	.LCFI52:
 1317              	 .cfi_def_cfa_offset 8
 1318 009a BD46     	 mov sp,r7
 1319              	.LCFI53:
 1320              	 .cfi_def_cfa_register 13
 1321              	 
 1322 009c 80BD     	 pop {r7,pc}
 1323              	.L79:
 1324 009e 00BF     	 .align 2
 1325              	.L78:
 1326 00a0 00000000 	 .word ESCvar
 1327 00a4 00000000 	 .word MBXcontrol
 1328 00a8 00000000 	 .word MBX
 1329              	 .cfi_endproc
 1330              	.LFE11:
 1332              	 .text
 1333              	.Letext0:
 1334              	 .file 2 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1335              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1336              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 1337              	 .file 5 "../soes/esc.h"
 1338              	 .file 6 "../soes/esc_foe.h"
DEFINED SYMBOLS
                            *ABS*:00000000 esc_foe.c
                            *COM*:00000010 foe_file_name
    {standard input}:21     .bss.foe_cfg:00000000 $d
    {standard input}:24     .bss.foe_cfg:00000000 foe_cfg
    {standard input}:27     .bss.foe_files:00000000 $d
    {standard input}:30     .bss.foe_files:00000000 foe_files
    {standard input}:33     .bss.foe_file:00000000 $d
    {standard input}:36     .bss.foe_file:00000000 foe_file
    {standard input}:39     .bss.FOEvar:00000000 $d
    {standard input}:42     .bss.FOEvar:00000000 FOEvar
    {standard input}:45     .text.FOE_fopen:00000000 $t
    {standard input}:50     .text.FOE_fopen:00000000 FOE_fopen
    {standard input}:260    .text.FOE_fopen:0000013c $d
    {standard input}:269    .text.FOE_fwrite:00000000 $t
    {standard input}:274    .text.FOE_fwrite:00000000 FOE_fwrite
    {standard input}:421    .text.FOE_fwrite:000000e0 $d
    {standard input}:428    .text.FOE_fclose:00000000 $t
    {standard input}:433    .text.FOE_fclose:00000000 FOE_fclose
    {standard input}:540    .text.FOE_fclose:00000098 $d
    {standard input}:547    .text.FOE_init:00000000 $t
    {standard input}:552    .text.FOE_init:00000000 FOE_init
    {standard input}:619    .text.FOE_init:00000054 $d
    {standard input}:624    .text.FOE_abort:00000000 $t
    {standard input}:629    .text.FOE_abort:00000000 FOE_abort
    {standard input}:708    .text.FOE_abort:00000068 $d
    {standard input}:715    .text.FOE_send_ack:00000000 $t
    {standard input}:720    .text.FOE_send_ack:00000000 FOE_send_ack
    {standard input}:806    .text.FOE_send_ack:00000078 $d
    {standard input}:814    .text.FOE_read:00000000 $t
    {standard input}:819    .text.FOE_read:00000000 FOE_read
    {standard input}:842    .text.FOE_write:00000000 $t
    {standard input}:847    .text.FOE_write:00000000 FOE_write
    {standard input}:941    .text.FOE_write:0000007c $d
    {standard input}:947    .text.FOE_data:00000000 $t
    {standard input}:952    .text.FOE_data:00000000 FOE_data
    {standard input}:1112   .text.FOE_data:000000fc $d
    {standard input}:1119   .text.FOE_error:00000000 $t
    {standard input}:1124   .text.FOE_error:00000000 FOE_error
    {standard input}:1147   .text.FOE_config:00000000 $t
    {standard input}:1152   .text.FOE_config:00000000 FOE_config
    {standard input}:1195   .text.FOE_config:00000020 $d
    {standard input}:1201   .text.ESC_foeprocess:00000000 $t
    {standard input}:1206   .text.ESC_foeprocess:00000000 ESC_foeprocess
    {standard input}:1326   .text.ESC_foeprocess:000000a0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
strncmp
ESC_claimbuffer
ESCvar
MBX
MBXcontrol
