   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "esc_hw.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ECAT_SetPortControl,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ECAT_SetPortControl:
  25              	.LFB168:
  26              	 .file 1 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc/xmc_ecat.h"
   1:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
   2:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
   3:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @file xmc_ecat.h
   4:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @date 2015-12-27
   5:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
   6:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @cond
   7:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
   8:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   9:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  10:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  11:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * All rights reserved.                        
  12:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                             
  13:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * following conditions are met:   
  15:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  16:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * disclaimer.                        
  18:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * 
  19:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * 
  22:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  25:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  33:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  36:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  37:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Change History
  38:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * --------------
  39:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  40:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * 2015-12-27:
  41:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *     - Initial Version<br>
  42:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  43:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @endcond
  44:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  45:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  46:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  47:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @addtogroup XMClib XMC Peripheral Library
  48:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @{
  49:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  50:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  51:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  52:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @addtogroup ECAT
  53:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @brief EtherCAT Low level driver for XMC4800/XMC4300 series.
  54:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  55:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * EtherCAT is an Ethernet-based fieldbus system.
  56:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * The EtherCAT Slave Controller (ECAT) read the data addressed to them while the telegram passes t
  57:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * An EtherCAT Slave Controller (ESC) takes care of the EtherCAT communication as an interface betw
  58:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * fieldbus and the slave application. EtherCAT uses standard IEEE 802.3 Ethernet frames, thus a st
  59:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * controller can be used and no special hardware is required on master side. EtherCAT has a reserv
  60:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * 0x88A4 that distinguishes it from other Ethernet frames. Thus, EtherCAT can run in parallel to o
  61:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * protocols. EtherCAT does not require the IP protocol, however it can be encapsulated in IP/UDP. 
  62:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Slave Controller processes the frame in hardware. Thus, communication performance is independent
  63:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * power.
  64:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  65:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * The XMC_ECAT low level driver provides functions to configure and initialize the ECAT hardware p
  66:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * For EHTERCAT stack integration, the necessary hardware accees layer APIs shall be explicitly imp
  67:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * upon the stack provider. The XMC_ECAT lld layer provides only the hardware initialization functi
  68:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * basic functionalities.
  69:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @{
  70:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  71:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  72:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #ifndef XMC_ECAT_H
  73:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #define XMC_ECAT_H
  74:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  75:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  76:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * HEADER FILES
  77:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  78:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  79:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #include "xmc_common.h"
  80:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  81:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (ECAT0)
  82:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  83:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #include "xmc_ecat_map.h"
  84:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  85:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  86:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * MACROS
  87:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  88:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  89:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  90:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * ENUMS
  91:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  92:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
  93:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  94:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT status return values
  95:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  96:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** typedef enum XMC_ECAT_STATUS
  97:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** {
  98:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_OK    = 0U, /**< Driver accepted application request */
  99:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_BUSY  = 1U, /**< Driver is busy and cannot handle request */
 100:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_ERROR = 2U  /**< Driver could not fulfil application request */
 101:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_STATUS_t;
 102:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 103:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 104:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * EtherCAT event enumeration types
 105:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 106:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** typedef enum XMC_ECAT_EVENT
 107:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** {
 108:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_AL_CONTROL = ECAT_AL_EVENT_MASK_AL_CE_MASK_Msk, /**< Application control event mas
 109:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_LATCH = ECAT_AL_EVENT_MASK_DC_LE_MASK_Msk,  /**< Distributed Clock latch event 
 110:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_SYNC0 = ECAT_AL_EVENT_MASK_ST_S0_MASK_Msk, /**< State of distributed clock sync
 111:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_SYNC1 = ECAT_AL_EVENT_MASK_ST_S1_MASK_Msk, /**< State of distributed clock sync
 112:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM_ACTIVATION_REGISTER = ECAT_AL_EVENT_MASK_SM_A_MASK_Msk, /**< SyncManager activa
 113:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_EEPROM = ECAT_AL_EVENT_MASK_EEP_E_MASK_Msk, /**< EEPROM Emulation event mask*/
 114:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_WATCHDOG = ECAT_AL_EVENT_MASK_WP_D_MASK_Msk, /**< WATCHDOG process data event mask
 115:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM0 = ECAT_AL_EVENT_MASK_SMI_0_MASK_Msk, /**< Sync Manager 0 event mask*/
 116:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM1 = ECAT_AL_EVENT_MASK_SMI_1_MASK_Msk, /**< Sync Manager 1 event mask*/
 117:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM2 = ECAT_AL_EVENT_MASK_SMI_2_MASK_Msk, /**< Sync Manager 2 event mask*/
 118:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM3 = ECAT_AL_EVENT_MASK_SMI_3_MASK_Msk, /**< Sync Manager 3 event mask*/
 119:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM4 = ECAT_AL_EVENT_MASK_SMI_4_MASK_Msk, /**< Sync Manager 4 event mask*/
 120:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM5 = ECAT_AL_EVENT_MASK_SMI_5_MASK_Msk, /**< Sync Manager 5 event mask*/
 121:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM6 = ECAT_AL_EVENT_MASK_SMI_6_MASK_Msk, /**< Sync Manager 6 event mask*/
 122:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM7 = ECAT_AL_EVENT_MASK_SMI_7_MASK_Msk  /**< Sync Manager 7 event mask*/
 123:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_EVENT_t;
 124:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 125:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
 126:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * DATA STRUCTURES
 127:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
 128:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 129:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /* Anonymous structure/union guard start */
 130:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (__CC_ARM)
 131:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma push
 132:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma anon_unions
 133:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #elif defined (__TASKING__)
 134:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma warning 586
 135:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 136:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 137:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 138:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT port control data structure
 139:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 140:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** typedef struct XMC_ECAT_PORT_CTRL
 141:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** {
 142:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 143:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   {
 144:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 145:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 146:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t enable_rstreq: 1;     /**< Master can trigger a reset of the XMC4700 / XMC4800 (::bo
 147:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 7;                   /**< Reserved bits */
 148:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t latch_input0: 2;      /**< Latch input 0 selection (::XMC_ECAT_PORT_LATCHIN0_t) */
 149:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;                   /**< Reserved bits */
 150:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t latch_input1: 2;      /**< Latch input 1 selection (::XMC_ECAT_PORT_LATCHIN1_t) */
 151:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;                   /**< Reserved bits */
 152:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t phyaddr_offset: 5;    /**< Ethernet PHY address offset, address of port 0 */
 153:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 1;                   /**< Reserved bits */
 154:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t mdio: 2;              /**< Bidirectional, push-pull management data I/O line (::XMC_
 155:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 8;                   /**< Reserved bits */
 156:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 157:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 158:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 159:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   } common;
 160:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 161:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 162:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   {  
 163:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 164:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 165:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ECAT_PORT0_CTRL_RXD0_t) */
 166:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ECAT_PORT0_CTRL_RXD1_t) */
 167:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd2: 2;     /**< Receive data bit 2 (::XMC_ECAT_PORT0_CTRL_RXD2_t) */
 168:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd3: 2;     /**< Receive data bit 3 (::XMC_ECAT_PORT0_CTRL_RXD3_t) */
 169:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_err: 2;   /**< RX Error (::XMC_ECAT_PORT0_CTRL_RX_ERR_t) */
 170:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_dv: 2;    /**< RX Data valid (::XMC_ECAT_PORT0_CTRL_RX_DV_t) */
 171:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_clk: 2;   /**< RX Clock (::XMC_ECAT_PORT0_CTRL_RX_CLK_t) */
 172:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;          /**< Reserved bits */
 173:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t link: 2;     /**< Link status (::XMC_ECAT_PORT0_CTRL_LINK_t) */
 174:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 10;         /**< Reserved bits */
 175:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_clk: 2;   /**< TX Clock (::XMC_ECAT_PORT0_CTRL_TX_CLK_t) */
 176:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_shift: 2; /**< TX signal delay (::XMC_ECAT_PORT0_CTRL_TX_SHIFT_t) */
 177:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 178:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 179:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 180:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   } port0;
 181:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 182:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 183:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   {      
 184:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 185:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 186:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ECAT_PORT_CTRL_RXD0_t) */
 187:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ECAT_PORT_CTRL_RXD1_t) */
 188:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd2: 2;     /**< Receive data bit 2 (::XMC_ECAT_PORT_CTRL_RXD2_t) */
 189:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd3: 2;     /**< Receive data bit 3 (::XMC_ECAT_PORT_CTRL_RXD3_t) */
 190:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_err: 2;   /**< RX Error (::XMC_ECAT_PORT_CTRL_RX_ERR_t) */
 191:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_dv: 2;    /**< RX Data valid (::XMC_ECAT_PORT_CTRL_RX_DV_t) */
 192:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_clk: 2;   /**< RX Clock (::XMC_ECAT_PORT_CTRL_RX_CLK_t) */
 193:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;          /**< Reserved bits */
 194:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t link: 2;     /**< Link status (::XMC_ECAT_PORT_CTRL_LINK_t) */
 195:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 10;         /**< Reserved bits */
 196:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_clk: 2;   /**< TX Clock (::XMC_ECAT_PORT_CTRL_TX_CLK_t) */
 197:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_shift: 2; /**< TX signal delay (::XMC_ECAT_PORT1_CTRL_TX_SHIFT_t) */
 198:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 199:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 200:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 201:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   } port1;
 202:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   
 203:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_PORT_CTRL_t;
 204:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 205:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 206:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT EEPROM configuration area data structure
 207:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 208:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** typedef union XMC_ECAT_CONFIG
 209:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** {
 210:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   struct
 211:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   {
 212:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 8;
 213:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 214:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 2;
 215:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_dc_sync_out : 1;
 216:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_dc_latch_in : 1;
 217:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_enhanced_link_p0 : 1;
 218:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_enhanced_link_p1 : 1;
 219:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 2;
 220:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 221:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 16;
 222:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 223:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t sync_pulse_length; /**< Initialization value for Pulse Length of SYNC Signals register
 224:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 225:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 16;
 226:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 227:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t station_alias; /**< Initialization value for Configured Station Alias Address register
 228:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 229:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t : 16;
 230:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 231:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t : 16;
 232:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 233:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t checksum;
 234:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   };
 235:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 236:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   uint32_t dword[4]; /**< Four 32 bit double word equivalent to 8 16 bit configuration area word. *
 237:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_CONFIG_t;
 238:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 239:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /* Anonymous structure/union guard end */
 240:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (__CC_ARM)
 241:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma pop
 242:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #elif defined (__TASKING__)
 243:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma warning restore
 244:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 245:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 246:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
 247:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * API PROTOTYPES
 248:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
 249:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 250:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #ifdef __cplusplus
 251:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** extern "C" {
 252:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 253:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 254:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 255:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param config XMC_ECAT_CONFIG_t
 256:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t ECAT Initialization status
 257:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 258:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 259:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Initialize the Ethernet MAC peripheral <br>
 260:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 261:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 262:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 263:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * and loop-back settings.
 264:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 265:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Init(XMC_ECAT_CONFIG_t *const config);
 266:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 267:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 268:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 269:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 270:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 271:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 272:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enable the EtherCAT peripheral <br>
 273:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 274:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 275:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function de-asserts the peripheral reset.
 276:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 277:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Enable(void);
 278:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 279:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 280:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 281:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 282:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 283:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 284:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disable the EtherCAT peripheral <br>
 285:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 286:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 287:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function asserts the peripheral reset.
 288:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 289:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Disable(void);
 290:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 291:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 292:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param phy_addr PHY address
 293:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param reg_addr Register address
 294:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param data The destination to which the read data needs to be copied to.
 295:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 296:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t EtherCAT Read PHY API return status
 297:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 298:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 299:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Read a PHY register <br>
 300:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 301:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 302:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function reads a PHY register. It essentially polls busy bit during max
 303:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * PHY_TIMEOUT time and reads the information into 'data' when not busy.
 304:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 305:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** XMC_ECAT_STATUS_t XMC_ECAT_ReadPhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t *data);
 306:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 307:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 308:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param phy_addr PHY address
 309:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param reg_addr Register address
 310:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param data The data to write
 311:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t EtherCAT Write PHY API return status
 312:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 313:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 314:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Write a PHY register <br>
 315:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 316:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 317:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function reads a PHY register. It essentially writes the data and polls
 318:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * the busy bit until it is no longer busy.
 319:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 320:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** XMC_ECAT_STATUS_t XMC_ECAT_WritePhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t data);
 321:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** 
 322:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 323:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param port_ctrl Port control configuration
 324:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 325:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 326:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 327:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * Set port control configuration <br>
 328:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 329:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 330:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function sets the port control by writing the configuration into the ECAT CON register.
 331:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 332:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 333:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** __STATIC_INLINE void XMC_ECAT_SetPortControl(const XMC_ECAT_PORT_CTRL_t port_ctrl)
 334:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** {
  27              	 .loc 1 334 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 3B1D     	 adds r3,r7,#4
  43 0008 83E80700 	 stmia r3,{r0,r1,r2}
 335:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CON = (uint32_t)port_ctrl.common.raw;
  44              	 .loc 1 335 0
  45 000c 064A     	 ldr r2,.L2
  46 000e 7B68     	 ldr r3,[r7,#4]
  47 0010 1360     	 str r3,[r2]
 336:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CONP0 = (uint32_t)port_ctrl.port0.raw;
  48              	 .loc 1 336 0
  49 0012 054A     	 ldr r2,.L2
  50 0014 BB68     	 ldr r3,[r7,#8]
  51 0016 5360     	 str r3,[r2,#4]
 337:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CONP1 = (uint32_t)port_ctrl.port1.raw;
  52              	 .loc 1 337 0
  53 0018 034A     	 ldr r2,.L2
  54 001a FB68     	 ldr r3,[r7,#12]
  55 001c 9360     	 str r3,[r2,#8]
 338:C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc\xmc_ecat.h **** }
  56              	 .loc 1 338 0
  57 001e 1437     	 adds r7,r7,#20
  58              	.LCFI3:
  59              	 .cfi_def_cfa_offset 4
  60 0020 BD46     	 mov sp,r7
  61              	.LCFI4:
  62              	 .cfi_def_cfa_register 13
  63              	 
  64 0022 5DF8047B 	 ldr r7,[sp],#4
  65              	.LCFI5:
  66              	 .cfi_restore 7
  67              	 .cfi_def_cfa_offset 0
  68 0026 7047     	 bx lr
  69              	.L3:
  70              	 .align 2
  71              	.L2:
  72 0028 B0410050 	 .word 1342194096
  73              	 .cfi_endproc
  74              	.LFE168:
  76              	 .section .rodata.port_control,"a",%progbits
  77              	 .align 2
  80              	port_control:
  81 0000 0000     	 .space 2
  82 0002 00       	 .byte 0
  83 0003 00       	 .space 1
  84 0004 55       	 .byte 85
  85 0005 15       	 .byte 21
  86 0006 01       	 .byte 1
  87 0007 10       	 .byte 16
  88 0008 00       	 .byte 0
  89 0009 01       	 .byte 1
  90 000a 00       	 .byte 0
  91 000b 00       	 .byte 0
  92              	 .section .rodata.gpio_config_input,"a",%progbits
  93              	 .align 2
  96              	gpio_config_input:
  97 0000 00000000 	 .space 12
  97      00000000 
  97      00000000 
  98              	 .section .text.init_input,"ax",%progbits
  99              	 .align 2
 100              	 .thumb
 101              	 .thumb_func
 103              	init_input:
 104              	.LFB172:
 105              	 .file 2 "../esc_hw.c"
   1:../esc_hw.c   **** /*
   2:../esc_hw.c   ****  * Licensed under the GNU General Public License version 2 with exceptions. See
   3:../esc_hw.c   ****  * LICENSE file in the project root for full license information
   4:../esc_hw.c   ****  */
   5:../esc_hw.c   **** 
   6:../esc_hw.c   ****  /** \file
   7:../esc_hw.c   ****  * \brief
   8:../esc_hw.c   ****  * ESC hardware layer functions.
   9:../esc_hw.c   ****  *
  10:../esc_hw.c   ****  * Function to read and write commands to the ESC. Used to read/write ESC
  11:../esc_hw.c   ****  * registers and memory.
  12:../esc_hw.c   ****  */
  13:../esc_hw.c   **** 
  14:../esc_hw.c   **** #include "esc_hw.h"
  15:../esc_hw.c   **** #include "esc.h"
  16:../esc_hw.c   **** #include "esc_hw_eep.h"
  17:../esc_hw.c   **** #include "esc_eep.h"
  18:../esc_hw.c   **** 
  19:../esc_hw.c   **** #include "xmc_gpio.h"
  20:../esc_hw.c   **** #include "xmc_ecat.h"
  21:../esc_hw.c   **** 
  22:../esc_hw.c   **** 
  23:../esc_hw.c   **** #ifdef XMC4800_F144x2048
  24:../esc_hw.c   **** /* ESC to PHY interconnect setup */
  25:../esc_hw.c   **** /* PHY management interface signal definitions*/
  26:../esc_hw.c   **** #define ECAT_MDO                    P0_12
  27:../esc_hw.c   **** #define ECAT_MCLK                   P3_3
  28:../esc_hw.c   **** 
  29:../esc_hw.c   **** #define ECAT_PORT_CTRL_LATCHIN0     XMC_ECAT_PORT_CTRL_LATCHIN0_P14_5
  30:../esc_hw.c   **** #define ECAT_PORT_CTRL_LATCHIN1     XMC_ECAT_PORT_CTRL_LATCHIN1_P14_4
  31:../esc_hw.c   **** #define ECAT_PHYADDR_OFFSET         0
  32:../esc_hw.c   **** 
  33:../esc_hw.c   **** /* EtherCAT slave physical layer pin configurations */
  34:../esc_hw.c   **** #define ECAT_CLK25                  P6_0
  35:../esc_hw.c   **** #define ECAT_PHY_RESET              P0_0
  36:../esc_hw.c   **** #define ECAT_LED_RUN                P0_8
  37:../esc_hw.c   **** #define ECAT_LED_ERR                P0_7
  38:../esc_hw.c   **** 
  39:../esc_hw.c   **** /* EtherCAT slave physical layer Port 0 pin configurations */
  40:../esc_hw.c   **** #define ECAT_P0_LINK_STATUS         P1_15
  41:../esc_hw.c   **** #define ECAT_P0_LED_LINK_ACT        P6_3
  42:../esc_hw.c   **** #define ECAT_P0_RXD3                P5_7
  43:../esc_hw.c   **** #define ECAT_P0_RXD2                P5_2
  44:../esc_hw.c   **** #define ECAT_P0_RXD1                P5_1
  45:../esc_hw.c   **** #define ECAT_P0_RXD0                P5_0
  46:../esc_hw.c   **** #define ECAT_P0_RX_DV               P5_6
  47:../esc_hw.c   **** #define ECAT_P0_RX_CLK              P5_4
  48:../esc_hw.c   **** #define ECAT_P0_RX_ERR              P2_6
  49:../esc_hw.c   **** #define ECAT_P0_TXD3                P6_6
  50:../esc_hw.c   **** #define ECAT_P0_TXD2                P6_5
  51:../esc_hw.c   **** #define ECAT_P0_TXD1                P6_4
  52:../esc_hw.c   **** #define ECAT_P0_TXD0                P6_2
  53:../esc_hw.c   **** #define ECAT_P0_TX_EN               P6_1
  54:../esc_hw.c   **** #define ECAT_P0_TX_CLK              P5_5
  55:../esc_hw.c   **** 
  56:../esc_hw.c   **** /* EtherCAT slave physical layer Port 1 pin configurations */
  57:../esc_hw.c   **** #define ECAT_P1_LINK_STATUS         P3_4
  58:../esc_hw.c   **** #define ECAT_P1_LED_LINK_ACT        P3_12
  59:../esc_hw.c   **** #define ECAT_P1_RXD3                P0_4
  60:../esc_hw.c   **** #define ECAT_P1_RXD2                P0_5
  61:../esc_hw.c   **** #define ECAT_P1_RXD1                P0_6
  62:../esc_hw.c   **** #define ECAT_P1_RXD0                P0_11
  63:../esc_hw.c   **** #define ECAT_P1_RX_DV               P0_9
  64:../esc_hw.c   **** #define ECAT_P1_RX_CLK              P0_1
  65:../esc_hw.c   **** #define ECAT_P1_RX_ERR              P15_2
  66:../esc_hw.c   **** #define ECAT_P1_TXD3                P0_3
  67:../esc_hw.c   **** #define ECAT_P1_TXD2                P0_2
  68:../esc_hw.c   **** #define ECAT_P1_TXD1                P3_2
  69:../esc_hw.c   **** #define ECAT_P1_TXD0                P3_1
  70:../esc_hw.c   **** #define ECAT_P1_TX_EN               P3_0
  71:../esc_hw.c   **** #define ECAT_P1_TX_CLK              P0_10
  72:../esc_hw.c   **** 
  73:../esc_hw.c   ****   /* configure outputs */
  74:../esc_hw.c   **** #define AF_ECAT0_P0_TXD3            P6_6_AF_ECAT0_P0_TXD3
  75:../esc_hw.c   **** #define AF_ECAT0_P0_TXD2            P6_5_AF_ECAT0_P0_TXD2
  76:../esc_hw.c   **** #define AF_ECAT0_P0_TXD1            P6_4_AF_ECAT0_P0_TXD1
  77:../esc_hw.c   **** #define AF_ECAT0_P0_TXD0            P6_2_AF_ECAT0_P0_TXD0
  78:../esc_hw.c   **** #define AF_ECAT0_P0_TX_EN           P6_1_AF_ECAT0_P0_TX_ENA
  79:../esc_hw.c   **** #define AF_ECAT0_P1_TXD3            P0_3_AF_ECAT0_P1_TXD3
  80:../esc_hw.c   **** #define AF_ECAT0_P1_TXD2            P0_2_AF_ECAT0_P1_TXD2
  81:../esc_hw.c   **** #define AF_ECAT0_P1_TXD1            P3_2_AF_ECAT0_P1_TXD1
  82:../esc_hw.c   **** #define AF_ECAT0_P1_TXD0            P3_1_AF_ECAT0_P1_TXD0
  83:../esc_hw.c   **** #define AF_ECAT0_P1_TX_EN           P3_0_AF_ECAT0_P1_TX_ENA
  84:../esc_hw.c   **** #define AF_ECAT0_CLK25              P6_0_AF_ECAT0_PHY_CLK25
  85:../esc_hw.c   **** #define AF_ECAT0_MCLK               P3_3_AF_ECAT0_MCLK
  86:../esc_hw.c   **** 
  87:../esc_hw.c   **** #define AF_ECAT0_P0_LED_LINK_ACT    P6_3_AF_ECAT0_P0_LED_LINK_ACT
  88:../esc_hw.c   **** #define AF_ECAT0_P1_LED_LINK_ACT    P3_12_AF_ECAT0_P1_LED_LINK_ACT
  89:../esc_hw.c   **** #define AF_ECAT0_LED_RUN            P0_8_AF_ECAT0_LED_RUN
  90:../esc_hw.c   **** #define AF_ECAT0_LED_ERR            P0_7_AF_ECAT0_LED_ERR
  91:../esc_hw.c   **** 
  92:../esc_hw.c   **** #define AF_ECAT0_MDO                P0_12_HWCTRL_ECAT0_MDO
  93:../esc_hw.c   **** 
  94:../esc_hw.c   **** #define AF_ECAT0_PHY_RESET          P0_0_AF_ECAT0_PHY_RESET
  95:../esc_hw.c   **** 
  96:../esc_hw.c   **** #define ECAT_PORT_CTRL_MDIO         XMC_ECAT_PORT_CTRL_MDIO_P0_12
  97:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RXD0        XMC_ECAT_PORT0_CTRL_RXD0_P5_0
  98:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RXD1        XMC_ECAT_PORT0_CTRL_RXD1_P5_1
  99:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RXD2        XMC_ECAT_PORT0_CTRL_RXD2_P5_2
 100:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RXD3        XMC_ECAT_PORT0_CTRL_RXD3_P5_7
 101:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RX_CLK      XMC_ECAT_PORT0_CTRL_RX_CLK_P5_4
 102:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RX_DV       XMC_ECAT_PORT0_CTRL_RX_DV_P5_6
 103:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RX_ERR      XMC_ECAT_PORT0_CTRL_RX_ERR_P2_6
 104:../esc_hw.c   **** #define ECAT_PORT0_CTRL_LINK        XMC_ECAT_PORT0_CTRL_LINK_P1_15
 105:../esc_hw.c   **** #define ECAT_PORT0_CTRL_TX_CLK      XMC_ECAT_PORT0_CTRL_TX_CLK_P5_5
 106:../esc_hw.c   **** #define ECAT_PORT0_CTRL_TX_SHIFT    XMC_ECAT_PORT0_CTRL_TX_SHIFT_0NS
 107:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RXD0        XMC_ECAT_PORT1_CTRL_RXD0_P0_11
 108:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RXD1        XMC_ECAT_PORT1_CTRL_RXD1_P0_6
 109:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RXD2        XMC_ECAT_PORT1_CTRL_RXD2_P0_5
 110:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RXD3        XMC_ECAT_PORT1_CTRL_RXD3_P0_4
 111:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RX_CLK      XMC_ECAT_PORT1_CTRL_RX_CLK_P0_1
 112:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RX_DV       XMC_ECAT_PORT1_CTRL_RX_DV_P0_9
 113:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RX_ERR      XMC_ECAT_PORT1_CTRL_RX_ERR_P15_2
 114:../esc_hw.c   **** #define ECAT_PORT1_CTRL_LINK        XMC_ECAT_PORT1_CTRL_LINK_P3_4
 115:../esc_hw.c   **** #define ECAT_PORT1_CTRL_TX_CLK      XMC_ECAT_PORT1_CTRL_TX_CLK_P0_10
 116:../esc_hw.c   **** #define ECAT_PORT1_CTRL_TX_SHIFT    XMC_ECAT_PORT1_CTRL_TX_SHIFT_0NS
 117:../esc_hw.c   **** 
 118:../esc_hw.c   **** #endif
 119:../esc_hw.c   **** 
 120:../esc_hw.c   **** #ifdef XMC4300_F100x256
 121:../esc_hw.c   **** #define ECAT_MDO                    P0_12
 122:../esc_hw.c   **** #define ECAT_MCLK                   P3_3
 123:../esc_hw.c   **** 
 124:../esc_hw.c   **** #define ECAT_PORT_CTRL_LATCHIN0     XMC_ECAT_PORT_CTRL_LATCHIN0_P14_5
 125:../esc_hw.c   **** #define ECAT_PORT_CTRL_LATCHIN1     XMC_ECAT_PORT_CTRL_LATCHIN1_P14_4
 126:../esc_hw.c   **** #define ECAT_PHYADDR_OFFSET         0
 127:../esc_hw.c   **** 
 128:../esc_hw.c   **** #define ECAT_CLK25                  P1_13
 129:../esc_hw.c   **** #define ECAT_PHY_RESET              P2_10
 130:../esc_hw.c   **** #define ECAT_LED_RUN                P1_11
 131:../esc_hw.c   **** #define ECAT_LED_ERR                P1_10
 132:../esc_hw.c   **** 
 133:../esc_hw.c   **** #define ECAT_P0_LINK_STATUS         P1_15
 134:../esc_hw.c   **** #define ECAT_P0_LED_LINK_ACT        P1_12
 135:../esc_hw.c   **** #define ECAT_P0_RXD3                P5_7
 136:../esc_hw.c   **** #define ECAT_P0_RXD2                P5_2
 137:../esc_hw.c   **** #define ECAT_P0_RXD1                P5_1
 138:../esc_hw.c   **** #define ECAT_P0_RXD0                P1_4
 139:../esc_hw.c   **** #define ECAT_P0_RX_DV               P1_9
 140:../esc_hw.c   **** #define ECAT_P0_RX_CLK              P1_1
 141:../esc_hw.c   **** #define ECAT_P0_RX_ERR              P2_6
 142:../esc_hw.c   **** #define ECAT_P0_TXD3                P1_2
 143:../esc_hw.c   **** #define ECAT_P0_TXD2                P1_8
 144:../esc_hw.c   **** #define ECAT_P0_TXD1                P1_7
 145:../esc_hw.c   **** #define ECAT_P0_TXD0                P1_6
 146:../esc_hw.c   **** #define ECAT_P0_TX_EN               P1_3
 147:../esc_hw.c   **** #define ECAT_P0_TX_CLK              P1_0
 148:../esc_hw.c   **** 
 149:../esc_hw.c   **** #define ECAT_P1_LINK_STATUS         P15_3
 150:../esc_hw.c   **** #define ECAT_P1_LED_LINK_ACT        P0_11
 151:../esc_hw.c   **** #define ECAT_P1_RXD3                P14_14
 152:../esc_hw.c   **** #define ECAT_P1_RXD2                P14_13
 153:../esc_hw.c   **** #define ECAT_P1_RXD1                P14_12
 154:../esc_hw.c   **** #define ECAT_P1_RXD0                P14_7
 155:../esc_hw.c   **** #define ECAT_P1_RX_DV               P14_15
 156:../esc_hw.c   **** #define ECAT_P1_RX_CLK              P14_6
 157:../esc_hw.c   **** #define ECAT_P1_RX_ERR              P15_2
 158:../esc_hw.c   **** #define ECAT_P1_TXD3                P0_3
 159:../esc_hw.c   **** #define ECAT_P1_TXD2                P0_2
 160:../esc_hw.c   **** #define ECAT_P1_TXD1                P3_2
 161:../esc_hw.c   **** #define ECAT_P1_TXD0                P3_1
 162:../esc_hw.c   **** #define ECAT_P1_TX_EN               P3_0
 163:../esc_hw.c   **** #define ECAT_P1_TX_CLK              P0_10
 164:../esc_hw.c   **** 
 165:../esc_hw.c   ****   /* configure outputs */
 166:../esc_hw.c   **** #define AF_ECAT0_P0_TXD3            P1_2_AF_ECAT0_P0_TXD3
 167:../esc_hw.c   **** #define AF_ECAT0_P0_TXD2            P1_8_AF_ECAT0_P0_TXD2
 168:../esc_hw.c   **** #define AF_ECAT0_P0_TXD1            P1_7_AF_ECAT0_P0_TXD1
 169:../esc_hw.c   **** #define AF_ECAT0_P0_TXD0            P1_6_AF_ECAT0_P0_TXD0
 170:../esc_hw.c   **** #define AF_ECAT0_P0_TX_EN           P1_3_AF_ECAT0_P0_TX_ENA
 171:../esc_hw.c   **** #define AF_ECAT0_P1_TXD3            P0_3_AF_ECAT0_P1_TXD3
 172:../esc_hw.c   **** #define AF_ECAT0_P1_TXD2            P0_2_AF_ECAT0_P1_TXD2
 173:../esc_hw.c   **** #define AF_ECAT0_P1_TXD1            P3_2_AF_ECAT0_P1_TXD1
 174:../esc_hw.c   **** #define AF_ECAT0_P1_TXD0            P3_1_AF_ECAT0_P1_TXD0
 175:../esc_hw.c   **** #define AF_ECAT0_P1_TX_EN           P3_0_AF_ECAT0_P1_TX_ENA
 176:../esc_hw.c   **** #define AF_ECAT0_CLK25              P1_13_AF_ECAT0_PHY_CLK25
 177:../esc_hw.c   **** #define AF_ECAT0_MCLK               P3_3_AF_ECAT0_MCLK
 178:../esc_hw.c   **** 
 179:../esc_hw.c   **** #define AF_ECAT0_P0_LED_LINK_ACT    P1_12_AF_ECAT0_P0_LED_LINK_ACT
 180:../esc_hw.c   **** #define AF_ECAT0_P1_LED_LINK_ACT    P0_11_AF_ECAT0_P1_LED_LINK_ACT
 181:../esc_hw.c   **** #define AF_ECAT0_LED_RUN            P1_11_AF_ECAT0_LED_RUN
 182:../esc_hw.c   **** #define AF_ECAT0_LED_ERR            P1_10_AF_ECAT0_LED_ERR
 183:../esc_hw.c   **** 
 184:../esc_hw.c   **** #define AF_ECAT0_MDO                P0_12_HWCTRL_ECAT0_MDO
 185:../esc_hw.c   **** 
 186:../esc_hw.c   **** #define AF_ECAT0_PHY_RESET          P2_10_AF_ECAT0_PHY_RESET
 187:../esc_hw.c   **** 
 188:../esc_hw.c   **** #define ECAT_PORT_CTRL_MDIO         XMC_ECAT_PORT_CTRL_MDIO_P0_12
 189:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RXD0        XMC_ECAT_PORT0_CTRL_RXD0_P1_4
 190:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RXD1        XMC_ECAT_PORT0_CTRL_RXD1_P5_1
 191:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RXD2        XMC_ECAT_PORT0_CTRL_RXD2_P5_2
 192:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RXD3        XMC_ECAT_PORT0_CTRL_RXD3_P5_7
 193:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RX_CLK      XMC_ECAT_PORT0_CTRL_RX_CLK_P1_1
 194:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RX_DV       XMC_ECAT_PORT0_CTRL_RX_DV_P1_9
 195:../esc_hw.c   **** #define ECAT_PORT0_CTRL_RX_ERR      XMC_ECAT_PORT0_CTRL_RX_ERR_P2_6
 196:../esc_hw.c   **** #define ECAT_PORT0_CTRL_LINK        XMC_ECAT_PORT0_CTRL_LINK_P1_15
 197:../esc_hw.c   **** #define ECAT_PORT0_CTRL_TX_CLK      XMC_ECAT_PORT0_CTRL_TX_CLK_P1_0
 198:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RXD0        XMC_ECAT_PORT1_CTRL_RXD0_P14_7
 199:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RXD1        XMC_ECAT_PORT1_CTRL_RXD1_P14_12
 200:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RXD2        XMC_ECAT_PORT1_CTRL_RXD2_P14_13
 201:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RXD3        XMC_ECAT_PORT1_CTRL_RXD3_P14_14
 202:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RX_CLK      XMC_ECAT_PORT1_CTRL_RX_CLK_P14_6
 203:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RX_DV       XMC_ECAT_PORT1_CTRL_RX_DV_P14_15
 204:../esc_hw.c   **** #define ECAT_PORT1_CTRL_RX_ERR      XMC_ECAT_PORT1_CTRL_RX_ERR_P15_2
 205:../esc_hw.c   **** #define ECAT_PORT1_CTRL_LINK        XMC_ECAT_PORT1_CTRL_LINK_P15_3
 206:../esc_hw.c   **** #define ECAT_PORT1_CTRL_TX_CLK      XMC_ECAT_PORT1_CTRL_TX_CLK_P0_10
 207:../esc_hw.c   **** 
 208:../esc_hw.c   **** #endif
 209:../esc_hw.c   **** 
 210:../esc_hw.c   **** #define ESCADDR(x) (((uint8_t *) ECAT0_BASE) + x)
 211:../esc_hw.c   **** 
 212:../esc_hw.c   **** static const XMC_ECAT_PORT_CTRL_t port_control = {
 213:../esc_hw.c   ****    .common = {
 214:../esc_hw.c   ****       .mdio = ECAT_PORT_CTRL_MDIO
 215:../esc_hw.c   ****    },
 216:../esc_hw.c   ****    .port0 = {
 217:../esc_hw.c   ****       .rxd0 = ECAT_PORT0_CTRL_RXD0,
 218:../esc_hw.c   ****       .rxd1 = ECAT_PORT0_CTRL_RXD1,
 219:../esc_hw.c   ****       .rxd2 = ECAT_PORT0_CTRL_RXD2,
 220:../esc_hw.c   ****       .rxd3 = ECAT_PORT0_CTRL_RXD3,
 221:../esc_hw.c   ****       .rx_clk = ECAT_PORT0_CTRL_RX_CLK,
 222:../esc_hw.c   ****       .rx_dv = ECAT_PORT0_CTRL_RX_DV,
 223:../esc_hw.c   ****       .rx_err = ECAT_PORT0_CTRL_RX_ERR,
 224:../esc_hw.c   ****       .link = ECAT_PORT0_CTRL_LINK,
 225:../esc_hw.c   ****       .tx_clk = ECAT_PORT0_CTRL_TX_CLK
 226:../esc_hw.c   ****    },
 227:../esc_hw.c   ****    .port1 = {
 228:../esc_hw.c   ****       .rxd0 = ECAT_PORT1_CTRL_RXD0,
 229:../esc_hw.c   ****       .rxd1 = ECAT_PORT1_CTRL_RXD1,
 230:../esc_hw.c   ****       .rxd2 = ECAT_PORT1_CTRL_RXD2,
 231:../esc_hw.c   ****       .rxd3 = ECAT_PORT1_CTRL_RXD3,
 232:../esc_hw.c   ****       .rx_clk = ECAT_PORT1_CTRL_RX_CLK,
 233:../esc_hw.c   ****       .rx_dv = ECAT_PORT1_CTRL_RX_DV,
 234:../esc_hw.c   ****       .rx_err = ECAT_PORT1_CTRL_RX_ERR,
 235:../esc_hw.c   ****       .link = ECAT_PORT1_CTRL_LINK,
 236:../esc_hw.c   ****       .tx_clk = ECAT_PORT1_CTRL_TX_CLK
 237:../esc_hw.c   ****    }
 238:../esc_hw.c   **** };
 239:../esc_hw.c   **** 
 240:../esc_hw.c   **** static const XMC_GPIO_CONFIG_t gpio_config_input = {
 241:../esc_hw.c   ****   .mode = XMC_GPIO_MODE_INPUT_TRISTATE,
 242:../esc_hw.c   ****   .output_level = 0,
 243:../esc_hw.c   ****   .output_strength = 0
 244:../esc_hw.c   **** };
 245:../esc_hw.c   **** 
 246:../esc_hw.c   **** 
 247:../esc_hw.c   **** static void init_input(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 248:../esc_hw.c   **** {
 106              	 .loc 2 248 0
 107              	 .cfi_startproc
 108              	 
 109              	 
 110 0000 80B5     	 push {r7,lr}
 111              	.LCFI6:
 112              	 .cfi_def_cfa_offset 8
 113              	 .cfi_offset 7,-8
 114              	 .cfi_offset 14,-4
 115 0002 82B0     	 sub sp,sp,#8
 116              	.LCFI7:
 117              	 .cfi_def_cfa_offset 16
 118 0004 00AF     	 add r7,sp,#0
 119              	.LCFI8:
 120              	 .cfi_def_cfa_register 7
 121 0006 7860     	 str r0,[r7,#4]
 122 0008 0B46     	 mov r3,r1
 123 000a FB70     	 strb r3,[r7,#3]
 249:../esc_hw.c   ****   XMC_GPIO_Init(port, pin, &gpio_config_input);
 124              	 .loc 2 249 0
 125 000c FB78     	 ldrb r3,[r7,#3]
 126 000e 7868     	 ldr r0,[r7,#4]
 127 0010 1946     	 mov r1,r3
 128 0012 034A     	 ldr r2,.L5
 129 0014 FFF7FEFF 	 bl XMC_GPIO_Init
 250:../esc_hw.c   **** }
 130              	 .loc 2 250 0
 131 0018 0837     	 adds r7,r7,#8
 132              	.LCFI9:
 133              	 .cfi_def_cfa_offset 8
 134 001a BD46     	 mov sp,r7
 135              	.LCFI10:
 136              	 .cfi_def_cfa_register 13
 137              	 
 138 001c 80BD     	 pop {r7,pc}
 139              	.L6:
 140 001e 00BF     	 .align 2
 141              	.L5:
 142 0020 00000000 	 .word gpio_config_input
 143              	 .cfi_endproc
 144              	.LFE172:
 146              	 .section .text.init_output,"ax",%progbits
 147              	 .align 2
 148              	 .thumb
 149              	 .thumb_func
 151              	init_output:
 152              	.LFB173:
 251:../esc_hw.c   **** 
 252:../esc_hw.c   **** static void init_output(XMC_GPIO_PORT_t *const port, const uint8_t pin,
 253:../esc_hw.c   ****                                       uint32_t function, XMC_GPIO_OUTPUT_STRENGTH_t strength)
 254:../esc_hw.c   **** {
 153              	 .loc 2 254 0
 154              	 .cfi_startproc
 155              	 
 156              	 
 157 0000 80B5     	 push {r7,lr}
 158              	.LCFI11:
 159              	 .cfi_def_cfa_offset 8
 160              	 .cfi_offset 7,-8
 161              	 .cfi_offset 14,-4
 162 0002 88B0     	 sub sp,sp,#32
 163              	.LCFI12:
 164              	 .cfi_def_cfa_offset 40
 165 0004 00AF     	 add r7,sp,#0
 166              	.LCFI13:
 167              	 .cfi_def_cfa_register 7
 168 0006 F860     	 str r0,[r7,#12]
 169 0008 7A60     	 str r2,[r7,#4]
 170 000a 1A46     	 mov r2,r3
 171 000c 0B46     	 mov r3,r1
 172 000e FB72     	 strb r3,[r7,#11]
 173 0010 1346     	 mov r3,r2
 174 0012 BB72     	 strb r3,[r7,#10]
 255:../esc_hw.c   ****   XMC_GPIO_CONFIG_t config;
 256:../esc_hw.c   **** 
 257:../esc_hw.c   ****   config.mode = (XMC_GPIO_MODE_t)((uint32_t)XMC_GPIO_MODE_OUTPUT_PUSH_PULL | function);
 175              	 .loc 2 257 0
 176 0014 7B68     	 ldr r3,[r7,#4]
 177 0016 DBB2     	 uxtb r3,r3
 178 0018 63F07F03 	 orn r3,r3,#127
 179 001c DBB2     	 uxtb r3,r3
 180 001e 3B75     	 strb r3,[r7,#20]
 258:../esc_hw.c   ****   config.output_level = XMC_GPIO_OUTPUT_LEVEL_LOW;
 181              	 .loc 2 258 0
 182 0020 4FF48033 	 mov r3,#65536
 183 0024 BB61     	 str r3,[r7,#24]
 259:../esc_hw.c   ****   config.output_strength = strength;
 184              	 .loc 2 259 0
 185 0026 BB7A     	 ldrb r3,[r7,#10]
 186 0028 3B77     	 strb r3,[r7,#28]
 260:../esc_hw.c   **** 
 261:../esc_hw.c   ****   XMC_GPIO_Init(port, pin, &config);
 187              	 .loc 2 261 0
 188 002a FA7A     	 ldrb r2,[r7,#11]
 189 002c 07F11403 	 add r3,r7,#20
 190 0030 F868     	 ldr r0,[r7,#12]
 191 0032 1146     	 mov r1,r2
 192 0034 1A46     	 mov r2,r3
 193 0036 FFF7FEFF 	 bl XMC_GPIO_Init
 262:../esc_hw.c   **** }
 194              	 .loc 2 262 0
 195 003a 2037     	 adds r7,r7,#32
 196              	.LCFI14:
 197              	 .cfi_def_cfa_offset 8
 198 003c BD46     	 mov sp,r7
 199              	.LCFI15:
 200              	 .cfi_def_cfa_register 13
 201              	 
 202 003e 80BD     	 pop {r7,pc}
 203              	 .cfi_endproc
 204              	.LFE173:
 206              	 .section .text.ESC_read,"ax",%progbits
 207              	 .align 2
 208              	 .global ESC_read
 209              	 .thumb
 210              	 .thumb_func
 212              	ESC_read:
 213              	.LFB174:
 263:../esc_hw.c   **** 
 264:../esc_hw.c   **** #define init_output_sharp(pin, function) init_output(pin, function, XMC_GPIO_OUTPUT_STRENGTH_STRONG
 265:../esc_hw.c   **** #define init_output_soft(pin, function) init_output(pin, function, XMC_GPIO_OUTPUT_STRENGTH_STRONG_
 266:../esc_hw.c   **** 
 267:../esc_hw.c   **** /** ESC read function used by the Slave stack.
 268:../esc_hw.c   ****  *
 269:../esc_hw.c   ****  * @param[in]   address     = address of ESC register to read
 270:../esc_hw.c   ****  * @param[out]  buf         = pointer to buffer to read in
 271:../esc_hw.c   ****  * @param[in]   len         = number of bytes to read
 272:../esc_hw.c   ****  */
 273:../esc_hw.c   **** void ESC_read (uint16_t address, void *buf, uint16_t len)
 274:../esc_hw.c   **** {
 214              	 .loc 2 274 0
 215              	 .cfi_startproc
 216              	 
 217              	 
 218 0000 80B5     	 push {r7,lr}
 219              	.LCFI16:
 220              	 .cfi_def_cfa_offset 8
 221              	 .cfi_offset 7,-8
 222              	 .cfi_offset 14,-4
 223 0002 82B0     	 sub sp,sp,#8
 224              	.LCFI17:
 225              	 .cfi_def_cfa_offset 16
 226 0004 00AF     	 add r7,sp,#0
 227              	.LCFI18:
 228              	 .cfi_def_cfa_register 7
 229 0006 0346     	 mov r3,r0
 230 0008 3960     	 str r1,[r7]
 231 000a FB80     	 strh r3,[r7,#6]
 232 000c 1346     	 mov r3,r2
 233 000e BB80     	 strh r3,[r7,#4]
 275:../esc_hw.c   ****    ESCvar.ALevent = etohs ((uint16_t)ECAT0->AL_EVENT_REQ);
 234              	 .loc 2 275 0
 235 0010 0B4B     	 ldr r3,.L9
 236 0012 D3F82032 	 ldr r3,[r3,#544]
 237 0016 9AB2     	 uxth r2,r3
 238 0018 0A4B     	 ldr r3,.L9+4
 239 001a B3F8D010 	 ldrh r1,[r3,#208]
 240 001e 0021     	 movs r1,#0
 241 0020 0A43     	 orrs r2,r2,r1
 242 0022 A3F8D020 	 strh r2,[r3,#208]
 276:../esc_hw.c   ****    memcpy (buf, ESCADDR(address), len);
 243              	 .loc 2 276 0
 244 0026 FB88     	 ldrh r3,[r7,#6]
 245 0028 03F1A843 	 add r3,r3,#1409286144
 246 002c 03F58033 	 add r3,r3,#65536
 247 0030 BA88     	 ldrh r2,[r7,#4]
 248 0032 3868     	 ldr r0,[r7]
 249 0034 1946     	 mov r1,r3
 250 0036 FFF7FEFF 	 bl memcpy
 277:../esc_hw.c   **** }
 251              	 .loc 2 277 0
 252 003a 0837     	 adds r7,r7,#8
 253              	.LCFI19:
 254              	 .cfi_def_cfa_offset 8
 255 003c BD46     	 mov sp,r7
 256              	.LCFI20:
 257              	 .cfi_def_cfa_register 13
 258              	 
 259 003e 80BD     	 pop {r7,pc}
 260              	.L10:
 261              	 .align 2
 262              	.L9:
 263 0040 00000154 	 .word 1409351680
 264 0044 00000000 	 .word ESCvar
 265              	 .cfi_endproc
 266              	.LFE174:
 268              	 .section .text.ESC_write,"ax",%progbits
 269              	 .align 2
 270              	 .global ESC_write
 271              	 .thumb
 272              	 .thumb_func
 274              	ESC_write:
 275              	.LFB175:
 278:../esc_hw.c   **** 
 279:../esc_hw.c   **** /** ESC write function used by the Slave stack.
 280:../esc_hw.c   ****  *
 281:../esc_hw.c   ****  * @param[in]   address     = address of ESC register to write
 282:../esc_hw.c   ****  * @param[out]  buf         = pointer to buffer to write from
 283:../esc_hw.c   ****  * @param[in]   len         = number of bytes to write
 284:../esc_hw.c   ****  */
 285:../esc_hw.c   **** void ESC_write (uint16_t address, void *buf, uint16_t len)
 286:../esc_hw.c   **** {
 276              	 .loc 2 286 0
 277              	 .cfi_startproc
 278              	 
 279              	 
 280 0000 80B5     	 push {r7,lr}
 281              	.LCFI21:
 282              	 .cfi_def_cfa_offset 8
 283              	 .cfi_offset 7,-8
 284              	 .cfi_offset 14,-4
 285 0002 82B0     	 sub sp,sp,#8
 286              	.LCFI22:
 287              	 .cfi_def_cfa_offset 16
 288 0004 00AF     	 add r7,sp,#0
 289              	.LCFI23:
 290              	 .cfi_def_cfa_register 7
 291 0006 0346     	 mov r3,r0
 292 0008 3960     	 str r1,[r7]
 293 000a FB80     	 strh r3,[r7,#6]
 294 000c 1346     	 mov r3,r2
 295 000e BB80     	 strh r3,[r7,#4]
 287:../esc_hw.c   ****    ESCvar.ALevent = etohs ((uint16_t)ECAT0->AL_EVENT_REQ);
 296              	 .loc 2 287 0
 297 0010 0B4B     	 ldr r3,.L12
 298 0012 D3F82032 	 ldr r3,[r3,#544]
 299 0016 9AB2     	 uxth r2,r3
 300 0018 0A4B     	 ldr r3,.L12+4
 301 001a B3F8D010 	 ldrh r1,[r3,#208]
 302 001e 0021     	 movs r1,#0
 303 0020 0A43     	 orrs r2,r2,r1
 304 0022 A3F8D020 	 strh r2,[r3,#208]
 288:../esc_hw.c   ****    memcpy(ESCADDR(address), buf, len);
 305              	 .loc 2 288 0
 306 0026 FB88     	 ldrh r3,[r7,#6]
 307 0028 03F1A843 	 add r3,r3,#1409286144
 308 002c 03F58033 	 add r3,r3,#65536
 309 0030 BA88     	 ldrh r2,[r7,#4]
 310 0032 1846     	 mov r0,r3
 311 0034 3968     	 ldr r1,[r7]
 312 0036 FFF7FEFF 	 bl memcpy
 289:../esc_hw.c   **** }
 313              	 .loc 2 289 0
 314 003a 0837     	 adds r7,r7,#8
 315              	.LCFI24:
 316              	 .cfi_def_cfa_offset 8
 317 003c BD46     	 mov sp,r7
 318              	.LCFI25:
 319              	 .cfi_def_cfa_register 13
 320              	 
 321 003e 80BD     	 pop {r7,pc}
 322              	.L13:
 323              	 .align 2
 324              	.L12:
 325 0040 00000154 	 .word 1409351680
 326 0044 00000000 	 .word ESCvar
 327              	 .cfi_endproc
 328              	.LFE175:
 330              	 .section .text.ESC_eep_handler,"ax",%progbits
 331              	 .align 2
 332              	 .global ESC_eep_handler
 333              	 .thumb
 334              	 .thumb_func
 336              	ESC_eep_handler:
 337              	.LFB176:
 290:../esc_hw.c   **** 
 291:../esc_hw.c   **** /** ESC emulated EEPROM handler
 292:../esc_hw.c   ****  */
 293:../esc_hw.c   **** void ESC_eep_handler(void)
 294:../esc_hw.c   **** {
 338              	 .loc 2 294 0
 339              	 .cfi_startproc
 340              	 
 341              	 
 342 0000 80B5     	 push {r7,lr}
 343              	.LCFI26:
 344              	 .cfi_def_cfa_offset 8
 345              	 .cfi_offset 7,-8
 346              	 .cfi_offset 14,-4
 347 0002 00AF     	 add r7,sp,#0
 348              	.LCFI27:
 349              	 .cfi_def_cfa_register 7
 295:../esc_hw.c   ****    EEP_process ();
 350              	 .loc 2 295 0
 351 0004 FFF7FEFF 	 bl EEP_process
 296:../esc_hw.c   ****    EEP_hw_process();
 352              	 .loc 2 296 0
 353 0008 FFF7FEFF 	 bl EEP_hw_process
 297:../esc_hw.c   **** }
 354              	 .loc 2 297 0
 355 000c 80BD     	 pop {r7,pc}
 356              	 .cfi_endproc
 357              	.LFE176:
 359 000e 00BF     	 .section .text.ESC_reset,"ax",%progbits
 360              	 .align 2
 361              	 .global ESC_reset
 362              	 .thumb
 363              	 .thumb_func
 365              	ESC_reset:
 366              	.LFB177:
 298:../esc_hw.c   **** 
 299:../esc_hw.c   **** void ESC_reset (void)
 300:../esc_hw.c   **** {
 367              	 .loc 2 300 0
 368              	 .cfi_startproc
 369              	 
 370              	 
 371 0000 80B5     	 push {r7,lr}
 372              	.LCFI28:
 373              	 .cfi_def_cfa_offset 8
 374              	 .cfi_offset 7,-8
 375              	 .cfi_offset 14,-4
 376 0002 00AF     	 add r7,sp,#0
 377              	.LCFI29:
 378              	 .cfi_def_cfa_register 7
 301:../esc_hw.c   ****   /* disable ESC to force reset */
 302:../esc_hw.c   ****   XMC_ECAT_Disable();
 379              	 .loc 2 302 0
 380 0004 FFF7FEFF 	 bl XMC_ECAT_Disable
 303:../esc_hw.c   **** 
 304:../esc_hw.c   ****   /* initialize EEPROM emulation */
 305:../esc_hw.c   ****   EEP_init();
 381              	 .loc 2 305 0
 382 0008 FFF7FEFF 	 bl EEP_init
 306:../esc_hw.c   **** }
 383              	 .loc 2 306 0
 384 000c 80BD     	 pop {r7,pc}
 385              	 .cfi_endproc
 386              	.LFE177:
 388 000e 00BF     	 .section .text.ESC_init,"ax",%progbits
 389              	 .align 2
 390              	 .global ESC_init
 391              	 .thumb
 392              	 .thumb_func
 394              	ESC_init:
 395              	.LFB178:
 307:../esc_hw.c   **** 
 308:../esc_hw.c   **** void ESC_init (const esc_cfg_t * cfg)
 309:../esc_hw.c   **** {
 396              	 .loc 2 309 0
 397              	 .cfi_startproc
 398              	 
 399              	 
 400 0000 80B5     	 push {r7,lr}
 401              	.LCFI30:
 402              	 .cfi_def_cfa_offset 8
 403              	 .cfi_offset 7,-8
 404              	 .cfi_offset 14,-4
 405 0002 86B0     	 sub sp,sp,#24
 406              	.LCFI31:
 407              	 .cfi_def_cfa_offset 32
 408 0004 00AF     	 add r7,sp,#0
 409              	.LCFI32:
 410              	 .cfi_def_cfa_register 7
 411 0006 7860     	 str r0,[r7,#4]
 310:../esc_hw.c   ****   XMC_ECAT_CONFIG_t ecat_config;
 311:../esc_hw.c   **** 
 312:../esc_hw.c   ****   ESC_reset();
 412              	 .loc 2 312 0
 413 0008 FFF7FEFF 	 bl ESC_reset
 313:../esc_hw.c   **** 
 314:../esc_hw.c   ****   /* configure inputs */
 315:../esc_hw.c   ****   init_input(ECAT_P0_LINK_STATUS);
 414              	 .loc 2 315 0
 415 000c 6A48     	 ldr r0,.L17
 416 000e 0F21     	 movs r1,#15
 417 0010 FFF7FEFF 	 bl init_input
 316:../esc_hw.c   ****   init_input(ECAT_P0_RXD3);
 418              	 .loc 2 316 0
 419 0014 6948     	 ldr r0,.L17+4
 420 0016 0721     	 movs r1,#7
 421 0018 FFF7FEFF 	 bl init_input
 317:../esc_hw.c   ****   init_input(ECAT_P0_RXD2);
 422              	 .loc 2 317 0
 423 001c 6748     	 ldr r0,.L17+4
 424 001e 0221     	 movs r1,#2
 425 0020 FFF7FEFF 	 bl init_input
 318:../esc_hw.c   ****   init_input(ECAT_P0_RXD1);
 426              	 .loc 2 318 0
 427 0024 6548     	 ldr r0,.L17+4
 428 0026 0121     	 movs r1,#1
 429 0028 FFF7FEFF 	 bl init_input
 319:../esc_hw.c   ****   init_input(ECAT_P0_RXD0);
 430              	 .loc 2 319 0
 431 002c 6348     	 ldr r0,.L17+4
 432 002e 0021     	 movs r1,#0
 433 0030 FFF7FEFF 	 bl init_input
 320:../esc_hw.c   ****   init_input(ECAT_P0_RX_DV);
 434              	 .loc 2 320 0
 435 0034 6148     	 ldr r0,.L17+4
 436 0036 0621     	 movs r1,#6
 437 0038 FFF7FEFF 	 bl init_input
 321:../esc_hw.c   ****   init_input(ECAT_P0_RX_CLK);
 438              	 .loc 2 321 0
 439 003c 5F48     	 ldr r0,.L17+4
 440 003e 0421     	 movs r1,#4
 441 0040 FFF7FEFF 	 bl init_input
 322:../esc_hw.c   ****   init_input(ECAT_P0_RX_ERR);
 442              	 .loc 2 322 0
 443 0044 5E48     	 ldr r0,.L17+8
 444 0046 0621     	 movs r1,#6
 445 0048 FFF7FEFF 	 bl init_input
 323:../esc_hw.c   ****   init_input(ECAT_P0_TX_CLK);
 446              	 .loc 2 323 0
 447 004c 5B48     	 ldr r0,.L17+4
 448 004e 0521     	 movs r1,#5
 449 0050 FFF7FEFF 	 bl init_input
 324:../esc_hw.c   **** 
 325:../esc_hw.c   ****   init_input(ECAT_P1_LINK_STATUS);
 450              	 .loc 2 325 0
 451 0054 5B48     	 ldr r0,.L17+12
 452 0056 0421     	 movs r1,#4
 453 0058 FFF7FEFF 	 bl init_input
 326:../esc_hw.c   ****   init_input(ECAT_P1_RXD3);
 454              	 .loc 2 326 0
 455 005c 5A48     	 ldr r0,.L17+16
 456 005e 0421     	 movs r1,#4
 457 0060 FFF7FEFF 	 bl init_input
 327:../esc_hw.c   ****   init_input(ECAT_P1_RXD2);
 458              	 .loc 2 327 0
 459 0064 5848     	 ldr r0,.L17+16
 460 0066 0521     	 movs r1,#5
 461 0068 FFF7FEFF 	 bl init_input
 328:../esc_hw.c   ****   init_input(ECAT_P1_RXD1);
 462              	 .loc 2 328 0
 463 006c 5648     	 ldr r0,.L17+16
 464 006e 0621     	 movs r1,#6
 465 0070 FFF7FEFF 	 bl init_input
 329:../esc_hw.c   ****   init_input(ECAT_P1_RXD0);
 466              	 .loc 2 329 0
 467 0074 5448     	 ldr r0,.L17+16
 468 0076 0B21     	 movs r1,#11
 469 0078 FFF7FEFF 	 bl init_input
 330:../esc_hw.c   ****   init_input(ECAT_P1_RX_DV);
 470              	 .loc 2 330 0
 471 007c 5248     	 ldr r0,.L17+16
 472 007e 0921     	 movs r1,#9
 473 0080 FFF7FEFF 	 bl init_input
 331:../esc_hw.c   ****   init_input(ECAT_P1_RX_CLK);
 474              	 .loc 2 331 0
 475 0084 5048     	 ldr r0,.L17+16
 476 0086 0121     	 movs r1,#1
 477 0088 FFF7FEFF 	 bl init_input
 332:../esc_hw.c   ****   init_input(ECAT_P1_RX_ERR);
 478              	 .loc 2 332 0
 479 008c 4F48     	 ldr r0,.L17+20
 480 008e 0221     	 movs r1,#2
 481 0090 FFF7FEFF 	 bl init_input
 333:../esc_hw.c   ****   init_input(ECAT_P1_TX_CLK);
 482              	 .loc 2 333 0
 483 0094 4C48     	 ldr r0,.L17+16
 484 0096 0A21     	 movs r1,#10
 485 0098 FFF7FEFF 	 bl init_input
 334:../esc_hw.c   **** 
 335:../esc_hw.c   ****   init_input(ECAT_MDO);
 486              	 .loc 2 335 0
 487 009c 4A48     	 ldr r0,.L17+16
 488 009e 0C21     	 movs r1,#12
 489 00a0 FFF7FEFF 	 bl init_input
 336:../esc_hw.c   **** 
 337:../esc_hw.c   ****   XMC_ECAT_SetPortControl(port_control);
 490              	 .loc 2 337 0
 491 00a4 4A4B     	 ldr r3,.L17+24
 492 00a6 93E80700 	 ldmia r3,{r0,r1,r2}
 493 00aa FFF7FEFF 	 bl XMC_ECAT_SetPortControl
 338:../esc_hw.c   **** 
 339:../esc_hw.c   ****   /* read config from emulated EEPROM */
 340:../esc_hw.c   ****   memset(&ecat_config, 0, sizeof(XMC_ECAT_CONFIG_t));
 494              	 .loc 2 340 0
 495 00ae 07F10803 	 add r3,r7,#8
 496 00b2 1846     	 mov r0,r3
 497 00b4 0021     	 movs r1,#0
 498 00b6 1022     	 movs r2,#16
 499 00b8 FFF7FEFF 	 bl memset
 341:../esc_hw.c   ****   EEP_read (0, (uint8_t *) &ecat_config, sizeof(XMC_ECAT_CONFIG_t));
 500              	 .loc 2 341 0
 501 00bc 07F10803 	 add r3,r7,#8
 502 00c0 0020     	 movs r0,#0
 503 00c2 1946     	 mov r1,r3
 504 00c4 1022     	 movs r2,#16
 505 00c6 FFF7FEFF 	 bl EEP_read
 342:../esc_hw.c   ****   XMC_ECAT_Init(&ecat_config);
 506              	 .loc 2 342 0
 507 00ca 07F10803 	 add r3,r7,#8
 508 00ce 1846     	 mov r0,r3
 509 00d0 FFF7FEFF 	 bl XMC_ECAT_Init
 343:../esc_hw.c   **** 
 344:../esc_hw.c   ****   /* configure outputs */
 345:../esc_hw.c   ****   init_output_sharp(ECAT_P0_TXD3, AF_ECAT0_P0_TXD3);
 510              	 .loc 2 345 0
 511 00d4 3F48     	 ldr r0,.L17+28
 512 00d6 0621     	 movs r1,#6
 513 00d8 2022     	 movs r2,#32
 514 00da 0023     	 movs r3,#0
 515 00dc FFF7FEFF 	 bl init_output
 346:../esc_hw.c   ****   init_output_sharp(ECAT_P0_TXD2, AF_ECAT0_P0_TXD2);
 516              	 .loc 2 346 0
 517 00e0 3C48     	 ldr r0,.L17+28
 518 00e2 0521     	 movs r1,#5
 519 00e4 2022     	 movs r2,#32
 520 00e6 0023     	 movs r3,#0
 521 00e8 FFF7FEFF 	 bl init_output
 347:../esc_hw.c   ****   init_output_sharp(ECAT_P0_TXD1, AF_ECAT0_P0_TXD1);
 522              	 .loc 2 347 0
 523 00ec 3948     	 ldr r0,.L17+28
 524 00ee 0421     	 movs r1,#4
 525 00f0 2022     	 movs r2,#32
 526 00f2 0023     	 movs r3,#0
 527 00f4 FFF7FEFF 	 bl init_output
 348:../esc_hw.c   ****   init_output_sharp(ECAT_P0_TXD0, AF_ECAT0_P0_TXD0);
 528              	 .loc 2 348 0
 529 00f8 3648     	 ldr r0,.L17+28
 530 00fa 0221     	 movs r1,#2
 531 00fc 2022     	 movs r2,#32
 532 00fe 0023     	 movs r3,#0
 533 0100 FFF7FEFF 	 bl init_output
 349:../esc_hw.c   ****   init_output_sharp(ECAT_P0_TX_EN, AF_ECAT0_P0_TX_EN);
 534              	 .loc 2 349 0
 535 0104 3348     	 ldr r0,.L17+28
 536 0106 0121     	 movs r1,#1
 537 0108 2022     	 movs r2,#32
 538 010a 0023     	 movs r3,#0
 539 010c FFF7FEFF 	 bl init_output
 350:../esc_hw.c   ****   init_output_sharp(ECAT_P1_TXD3, AF_ECAT0_P1_TXD3);
 540              	 .loc 2 350 0
 541 0110 2D48     	 ldr r0,.L17+16
 542 0112 0321     	 movs r1,#3
 543 0114 0822     	 movs r2,#8
 544 0116 0023     	 movs r3,#0
 545 0118 FFF7FEFF 	 bl init_output
 351:../esc_hw.c   ****   init_output_sharp(ECAT_P1_TXD2, AF_ECAT0_P1_TXD2);
 546              	 .loc 2 351 0
 547 011c 2A48     	 ldr r0,.L17+16
 548 011e 0221     	 movs r1,#2
 549 0120 0822     	 movs r2,#8
 550 0122 0023     	 movs r3,#0
 551 0124 FFF7FEFF 	 bl init_output
 352:../esc_hw.c   ****   init_output_sharp(ECAT_P1_TXD1, AF_ECAT0_P1_TXD1);
 552              	 .loc 2 352 0
 553 0128 2648     	 ldr r0,.L17+12
 554 012a 0221     	 movs r1,#2
 555 012c 1822     	 movs r2,#24
 556 012e 0023     	 movs r3,#0
 557 0130 FFF7FEFF 	 bl init_output
 353:../esc_hw.c   ****   init_output_sharp(ECAT_P1_TXD0, AF_ECAT0_P1_TXD0);
 558              	 .loc 2 353 0
 559 0134 2348     	 ldr r0,.L17+12
 560 0136 0121     	 movs r1,#1
 561 0138 1822     	 movs r2,#24
 562 013a 0023     	 movs r3,#0
 563 013c FFF7FEFF 	 bl init_output
 354:../esc_hw.c   ****   init_output_sharp(ECAT_P1_TX_EN, AF_ECAT0_P1_TX_EN);
 564              	 .loc 2 354 0
 565 0140 2048     	 ldr r0,.L17+12
 566 0142 0021     	 movs r1,#0
 567 0144 2022     	 movs r2,#32
 568 0146 0023     	 movs r3,#0
 569 0148 FFF7FEFF 	 bl init_output
 355:../esc_hw.c   ****   init_output_sharp(ECAT_CLK25, AF_ECAT0_CLK25);
 570              	 .loc 2 355 0
 571 014c 2148     	 ldr r0,.L17+28
 572 014e 0021     	 movs r1,#0
 573 0150 2022     	 movs r2,#32
 574 0152 0023     	 movs r3,#0
 575 0154 FFF7FEFF 	 bl init_output
 356:../esc_hw.c   ****   init_output_sharp(ECAT_MCLK, AF_ECAT0_MCLK);
 576              	 .loc 2 356 0
 577 0158 1A48     	 ldr r0,.L17+12
 578 015a 0321     	 movs r1,#3
 579 015c 2022     	 movs r2,#32
 580 015e 0023     	 movs r3,#0
 581 0160 FFF7FEFF 	 bl init_output
 357:../esc_hw.c   **** 
 358:../esc_hw.c   ****   init_output_soft(ECAT_P0_LED_LINK_ACT, AF_ECAT0_P0_LED_LINK_ACT);
 582              	 .loc 2 358 0
 583 0164 1B48     	 ldr r0,.L17+28
 584 0166 0321     	 movs r1,#3
 585 0168 2022     	 movs r2,#32
 586 016a 0223     	 movs r3,#2
 587 016c FFF7FEFF 	 bl init_output
 359:../esc_hw.c   ****   init_output_soft(ECAT_P1_LED_LINK_ACT, AF_ECAT0_P1_LED_LINK_ACT);
 588              	 .loc 2 359 0
 589 0170 1448     	 ldr r0,.L17+12
 590 0172 0C21     	 movs r1,#12
 591 0174 0822     	 movs r2,#8
 592 0176 0223     	 movs r3,#2
 593 0178 FFF7FEFF 	 bl init_output
 360:../esc_hw.c   ****   init_output_soft(ECAT_LED_RUN, AF_ECAT0_LED_RUN);
 594              	 .loc 2 360 0
 595 017c 1248     	 ldr r0,.L17+16
 596 017e 0821     	 movs r1,#8
 597 0180 1822     	 movs r2,#24
 598 0182 0223     	 movs r3,#2
 599 0184 FFF7FEFF 	 bl init_output
 361:../esc_hw.c   ****   init_output_soft(ECAT_LED_ERR, AF_ECAT0_LED_ERR);
 600              	 .loc 2 361 0
 601 0188 0F48     	 ldr r0,.L17+16
 602 018a 0721     	 movs r1,#7
 603 018c 1822     	 movs r2,#24
 604 018e 0223     	 movs r3,#2
 605 0190 FFF7FEFF 	 bl init_output
 362:../esc_hw.c   **** 
 363:../esc_hw.c   ****   init_input(ECAT_MDO);
 606              	 .loc 2 363 0
 607 0194 0C48     	 ldr r0,.L17+16
 608 0196 0C21     	 movs r1,#12
 609 0198 FFF7FEFF 	 bl init_input
 364:../esc_hw.c   ****   XMC_GPIO_SetHardwareControl(ECAT_MDO, AF_ECAT0_MDO);
 610              	 .loc 2 364 0
 611 019c 0A48     	 ldr r0,.L17+16
 612 019e 0C21     	 movs r1,#12
 613 01a0 0122     	 movs r2,#1
 614 01a2 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 365:../esc_hw.c   **** 
 366:../esc_hw.c   ****   init_output_soft(ECAT_PHY_RESET, AF_ECAT0_PHY_RESET);
 615              	 .loc 2 366 0
 616 01a6 0848     	 ldr r0,.L17+16
 617 01a8 0021     	 movs r1,#0
 618 01aa 0822     	 movs r2,#8
 619 01ac 0223     	 movs r3,#2
 620 01ae FFF7FEFF 	 bl init_output
 367:../esc_hw.c   **** }
 621              	 .loc 2 367 0
 622 01b2 1837     	 adds r7,r7,#24
 623              	.LCFI33:
 624              	 .cfi_def_cfa_offset 8
 625 01b4 BD46     	 mov sp,r7
 626              	.LCFI34:
 627              	 .cfi_def_cfa_register 13
 628              	 
 629 01b6 80BD     	 pop {r7,pc}
 630              	.L18:
 631              	 .align 2
 632              	.L17:
 633 01b8 00810248 	 .word 1208123648
 634 01bc 00850248 	 .word 1208124672
 635 01c0 00820248 	 .word 1208123904
 636 01c4 00830248 	 .word 1208124160
 637 01c8 00800248 	 .word 1208123392
 638 01cc 008F0248 	 .word 1208127232
 639 01d0 00000000 	 .word port_control
 640 01d4 00860248 	 .word 1208124928
 641              	 .cfi_endproc
 642              	.LFE178:
 644              	 .text
 645              	.Letext0:
 646              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 647              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 648              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 649              	 .file 6 "C:/Workspaces/SOES-SAMPLE/soes/soes/esc.h"
 650              	 .file 7 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/CMSIS/Infineon/XMC4800_series/Include/XMC4800.h"
 651              	 .file 8 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc/xmc_gpio.h"
 652              	 .file 9 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc/xmc4_gpio.h"
 653              	 .file 10 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/XMCLib/inc/xmc_ecat_map.h"
 654              	 .file 11 "C:/Workspaces/SOES-SAMPLE/xmc48_ecatslave/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 esc_hw.c
    {standard input}:20     .text.XMC_ECAT_SetPortControl:00000000 $t
    {standard input}:24     .text.XMC_ECAT_SetPortControl:00000000 XMC_ECAT_SetPortControl
    {standard input}:72     .text.XMC_ECAT_SetPortControl:00000028 $d
    {standard input}:77     .rodata.port_control:00000000 $d
    {standard input}:80     .rodata.port_control:00000000 port_control
    {standard input}:93     .rodata.gpio_config_input:00000000 $d
    {standard input}:96     .rodata.gpio_config_input:00000000 gpio_config_input
    {standard input}:99     .text.init_input:00000000 $t
    {standard input}:103    .text.init_input:00000000 init_input
    {standard input}:142    .text.init_input:00000020 $d
    {standard input}:147    .text.init_output:00000000 $t
    {standard input}:151    .text.init_output:00000000 init_output
    {standard input}:207    .text.ESC_read:00000000 $t
    {standard input}:212    .text.ESC_read:00000000 ESC_read
    {standard input}:263    .text.ESC_read:00000040 $d
    {standard input}:269    .text.ESC_write:00000000 $t
    {standard input}:274    .text.ESC_write:00000000 ESC_write
    {standard input}:325    .text.ESC_write:00000040 $d
    {standard input}:331    .text.ESC_eep_handler:00000000 $t
    {standard input}:336    .text.ESC_eep_handler:00000000 ESC_eep_handler
    {standard input}:360    .text.ESC_reset:00000000 $t
    {standard input}:365    .text.ESC_reset:00000000 ESC_reset
    {standard input}:389    .text.ESC_init:00000000 $t
    {standard input}:394    .text.ESC_init:00000000 ESC_init
    {standard input}:633    .text.ESC_init:000001b8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_GPIO_Init
memcpy
ESCvar
EEP_process
EEP_hw_process
XMC_ECAT_Disable
EEP_init
memset
EEP_read
XMC_ECAT_Init
XMC_GPIO_SetHardwareControl
